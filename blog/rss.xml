<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>OceanBase Blog</title>
        <link>https://powerfooi.github.io/docs-playground/blog</link>
        <description>OceanBase Blog</description>
        <lastBuildDate>Mon, 03 Jun 2024 12:38:58 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Hello OceanBase]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/hello-oceanbase</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/hello-oceanbase</guid>
            <pubDate>Mon, 03 Jun 2024 12:38:58 GMT</pubDate>
            <description><![CDATA[About the author: Xia Ke, a contributor of OceanBase Community, has engaged in the design and development of financial core systems for years. He is now working on the investigation of China-made databases in a subsidiary of a stock exchange, and has recently obtained OceanBase Certified Associate (OBCA) and PingCAP Certified TiDB Associate (PCTA) certificates.]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>About the author: Xia Ke, a contributor of OceanBase Community, has engaged in the design and development of financial core systems for years. He is now working on the investigation of China-made databases in a subsidiary of a stock exchange, and has recently obtained OceanBase Certified Associate (OBCA) and PingCAP Certified TiDB Associate (PCTA) certificates.</p>
</blockquote>
<p>The other day I read this post <a href="https://open.oceanbase.com/blog/8600156?currentPage=undefined" target="_blank" rel="noopener noreferrer">Decoding OceanBase (11): Expressions and Functions</a> by Zhuweng, a Peking University alumnus, director of OceanBase kernel R&amp;D. At the end, he mentioned that creating a built-in function is the first test for new recruits joining the SQL team of OceanBase. Though having no intention of looking for a new job, I was so intrigued by this <strong>first test</strong>. I am not a database administrator, so I have not spent much time working with databases until lately when I started learning about top-notch home-grown database products for job reasons. As far as my job description is concerned, I have "walked out of my circle" to do the test. After reading posts from popular IT communities and participating in open online courses, I was deeply impressed by the vigorous momentum of the database ecosystem in China. I want to say thank you to database developers and engineers who have shared their experience, which enables laymen like me to quickly get on track. Benefiting from their good deeds, I would like to take this opportunity to make my contributions to the OceanBase community, hoping that you might find it useful.</p>
<h1>Overview</h1>
<p>Seeing <code>Hello OceanBase</code> in the title, you may think of "Hello World". Yes, that is exactly the vibe I wanted to strike here. This post is a "Hello World" demo that shows you how to create or modify a built-in function in OceanBase Database, or in other words, how to do secondary development based on OceanBase Database Community Edition. In addition to being motivated by <code>Zhuweng</code>, I want to take this test also because of the requirement for extending database capabilities by using external functions. Oracle allows users to call external C or JAVA functions, just like calling built-in functions. In a sense, this feature makes a database more capable. Users can call external C or JAVA functions to, for example, implement complex mathematical algorithms, which may otherwise cause troubles by using SQL statements or Oracle built-in functions. Of course, you can always implement those algorithms at the business layer, but maybe we can talk about that in another post. Based on my research on a bunch of home-grown databases, I have come up with similar procedures for using external functions. You can take a look at them in my posts <a href="https://blog.csdn.net/xk_xx/article/details/123091480?spm=1001.2014.3001.5501" target="_blank" rel="noopener noreferrer">Implement Oracle external functions in Dameng DM8 Database</a> and <a href="https://blog.csdn.net/xk_xx/article/details/123011397?spm=1001.2014.3001.5501" target="_blank" rel="noopener noreferrer">Implement PostgreSQL UDFs by using the contrib module</a>. Calling external functions in DM8 is basically the same as in Oracle, except for some slight implementation differences. Some databases, such as openGauss, MogDB, TDSQL PostgreSQL, and KingbaseES, come with an PostgreSQL kernel, and they inherently support the extension mechanisms of PostgreSQL. To the best of my knowledge, however, OceanBase Database does not support external functions. So, I wondered if I could not find a way out, a way in might do the trick. Let's start with "Hello OceanBase".</p>
<h1>Preparations</h1>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="an-oceanbase-cluster">An OceanBase cluster<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#an-oceanbase-cluster" class="hash-link" aria-label="Direct link to An OceanBase cluster" title="Direct link to An OceanBase cluster">​</a></h2>
<p>You can find tons of posts in the community about how to deploy OceanBase Database in all kinds of supported modes. Here are some of my posts in this regard: <a href="https://blog.csdn.net/xk_xx/article/details/122757336" target="_blank" rel="noopener noreferrer">Use Docker to deploy OceanBase Database</a>, <a href="https://blog.csdn.net/xk_xx/article/details/122763419" target="_blank" rel="noopener noreferrer">Manually deploy OceanBase Database in standalone mode</a>, and <a href="https://blog.csdn.net/xk_xx/article/details/123166584" target="_blank" rel="noopener noreferrer">Use OBD to locally deploy OceanBase Database in standalone mode</a>. To implement the demo, I recommend that you pick an easy one and use OceanBase Deployer (OBD) to locally deploy a standalone OceanBase database in a development environment.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oceanbase-source-code">OceanBase source code<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#oceanbase-source-code" class="hash-link" aria-label="Direct link to OceanBase source code" title="Direct link to OceanBase source code">​</a></h2>
<p>You can get the latest source code by running the following command: <code>git clone https://github.com/oceanbase/oceanbase</code></p>
<h1>Code structure</h1>
<p>You can take a look at the <code>Decoding OceanBase</code> serial posts of the community for details.</p>
<p>Here, let me briefly describe the code related to the <code>sql/resolver/expr</code> directory.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="register-a-built-in-function">Register a built-in function<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#register-a-built-in-function" class="hash-link" aria-label="Direct link to Register a built-in function" title="Direct link to Register a built-in function">​</a></h2>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/ec1d519b-9b37-4d6e-9b86-68074ff85e3b/image/2022-03-04/78c15e68-ea1b-40f0-b4e7-07b71454a82b.png" alt="" class="img_ev3q"></p>
<div class="language-C++ language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    #define REG_OP(OpClass)                                                \do {                                                                 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        OpClass op(alloc);                                                 \if (OB_UNLIKELY(i &gt;= EXPR_OP_NUM)) {                               \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          LOG_ERROR("out of the max expr");                                \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {                                                           \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          NAME_TYPES[i].name_ = op.get_name();                             \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          NAME_TYPES[i].type_ = op.get_type();                             \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          OP_ALLOC[op.get_type()] = ObExprOperatorFactory::alloc&lt;OpClass&gt;; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          i++;                                                             \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }                                                                  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      } while (0)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="diagram-of-the-expr-class">Diagram of the expr class<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#diagram-of-the-expr-class" class="hash-link" aria-label="Direct link to Diagram of the expr class" title="Direct link to Diagram of the expr class">​</a></h2>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/69375afc-a8a4-4cdf-b339-5cd3ebfe84be/image/2022-03-04/726f726f-7ed3-4060-b909-6595697154b3.png" alt="" class="img_ev3q"></p>
<p>Built-in functions mainly implement the ObExprOperator interface class, which contains many functions.</p>
<p>The <code>calc_result_type0</code> and <code>calc_result0</code> functions specify the memory allocation and type definition for function registration. The <code>cg_expr</code> function registers the function pointer to the <code>eval_func_</code> function. The built-in function <code>rt_expr.eval_func_ = ObExprHello::eval_hello;</code> is called by using the function pointer. <code>eval_hello</code> is the function that actually do the job.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="develop-hello-oceanbase">Develop Hello OceanBase<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#develop-hello-oceanbase" class="hash-link" aria-label="Direct link to Develop Hello OceanBase" title="Direct link to Develop Hello OceanBase">​</a></h2>
<p>In this project, you need to modify the files shown in the following figure.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/b33bf6b7-47c4-4d2e-b3f8-31e1a2349567/image/2022-03-04/38ff080c-902e-4976-9b12-6113ba751b0d.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-create-the-obexprhello-class">1. Create the ObExprHello class<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#1-create-the-obexprhello-class" class="hash-link" aria-label="Direct link to 1. Create the ObExprHello class" title="Direct link to 1. Create the ObExprHello class">​</a></h3>
<p>Many implementation examples are provided in the <code>sql/resolver/expr</code> directory. You can select reference objects as needed.</p>
<div class="language-C++ language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    #ifndef _OB_EXPR_HELLO_H_</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    #define  _OB_EXPR_HELLO_H_</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    #include  "sql/engine/expr/ob_expr_operator.h"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    namespace  oceanbase {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    namespace  sql {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    class  ObExprHello : public  ObStringExprOperator {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      explicit  ObExprHello(common::ObIAllocator&amp;  alloc);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      virtual  ~ObExprHello();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      virtual  int  calc_result_type0(ObExprResType&amp;  type, common::ObExprTypeCtx&amp;  type_ctx) const;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      virtual  int  calc_result0(common::ObObj&amp;  result, common::ObExprCtx&amp;  expr_ctx) const;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      static  int  eval_hello(const  ObExpr&amp;  expr, ObEvalCtx&amp;  ctx, ObDatum&amp;  expr_datum);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      virtual  int  cg_expr(ObExprCGCtx&amp;  op_cg_ctx, const  ObRawExpr&amp;  raw_expr, ObExpr&amp;  rt_expr) const  override;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      DISALLOW_COPY_AND_ASSIGN(ObExprHello);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } /* namespace sql */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } /* namespace oceanbase */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    #endif</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The content of the new file <code>ob_expr_hello.cpp</code> is as follows:</p>
<div class="language-C++ language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    #define  USING_LOG_PREFIX SQL_ENG</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    #include  "sql/engine/expr/ob_expr_hello.h"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static  const  char* SAY_HELLO = "Hello OceanBase!";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    namespace  oceanbase {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    using  namespace  common;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    namespace  sql {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ObExprHello::ObExprHello(ObIAllocator&amp; alloc) : ObStringExprOperator(alloc, T_FUN_SYS_HELLO, N_HELLO, 0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ObExprHello::~ObExprHello()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int  ObExprHello::calc_result_type0(ObExprResType&amp;  type, ObExprTypeCtx&amp;  type_ctx) const</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      UNUSED(type_ctx);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type.set_varchar();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type.set_length(static_cast&lt;common::ObLength&gt;(strlen(SAY_HELLO)));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type.set_default_collation_type();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type.set_collation_level(CS_LEVEL_SYSCONST);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      return  OB_SUCCESS;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int  ObExprHello::calc_result0(ObObj&amp;  result, ObExprCtx&amp;  expr_ctx) const</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      UNUSED(expr_ctx);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      result.set_varchar(common::ObString(SAY_HELLO));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      result.set_collation(result_type_);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      return  OB_SUCCESS;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int  ObExprHello::eval_hello(const  ObExpr&amp;  expr, ObEvalCtx&amp;  ctx, ObDatum&amp;  expr_datum)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      UNUSED(expr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      UNUSED(ctx);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      expr_datum.set_string(common::ObString(SAY_HELLO));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      return  OB_SUCCESS;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int  ObExprHello::cg_expr(ObExprCGCtx&amp;  op_cg_ctx, const  ObRawExpr&amp;  raw_expr, ObExpr&amp;  rt_expr) const</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      UNUSED(raw_expr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      UNUSED(op_cg_ctx);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      rt_expr.eval_func_ = ObExprHello::eval_hello;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      return  OB_SUCCESS;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  // namespace sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }  // namespace oceanbase</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-modify-or-add-the-function-name-definition">2. Modify or add the function name definition<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#2-modify-or-add-the-function-name-definition" class="hash-link" aria-label="Direct link to 2. Modify or add the function name definition" title="Direct link to 2. Modify or add the function name definition">​</a></h3>
<ul>
<li>ob_name_def.h</li>
</ul>
<p>The function name is registered here and can be used for syntax parsing.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/889fe5d5-bcc4-49ee-90c2-65c8d5a8e0d7/image/2022-03-04/0736c95b-c1be-4e3d-984b-2422fd3dee7f.png" alt="" class="img_ev3q"><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/d03c52a3-a866-4f3d-bac7-ac5201428edc/image/2022-03-04/606b6b77-f22a-4b38-9515-3c9cf03a3ffb.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-modify-the-factory-class">3. Modify the factory class<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#3-modify-the-factory-class" class="hash-link" aria-label="Direct link to 3. Modify the factory class" title="Direct link to 3. Modify the factory class">​</a></h3>
<p>ob_expr_operator_factory.cpp</p>
<p>The function pointer is registered at this step, and will be used for calling the specific built-in function at runtime.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/f07b83a3-4d9e-4169-bd6c-620e9a1b02b8/image/2022-03-04/d67d1e07-8e82-4169-b400-19f30d813d19.png" alt="" class="img_ev3q"></p>
<ul>
<li>Register a built-in function</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/e544598d-cb7d-4b8d-ae8a-85fa04f802c8/image/2022-03-04/bb53c1e7-27f7-4370-a7cc-619241c945b2.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-add-ids">4. Add IDs<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#4-add-ids" class="hash-link" aria-label="Direct link to 4. Add IDs" title="Direct link to 4. Add IDs">​</a></h3>
<ul>
<li>ob_item_type.h</li>
</ul>
<p>You can take an ID as a key that points to the function pointer.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/597a87f1-1998-41f0-8c5d-29a818026d92/image/2022-03-04/8223570b-4af3-438d-a533-e20eec745e17.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-modify-project-files">5. Modify project files<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#5-modify-project-files" class="hash-link" aria-label="Direct link to 5. Modify project files" title="Direct link to 5. Modify project files">​</a></h3>
<ul>
<li>CMakeLists.txt</li>
</ul>
<p>Add the new ObExprHello function to the project for compilation.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/7128397f-fcd9-4320-bcb7-982fe9b80a12/image/2022-03-04/458ceecc-d9ba-4fdd-a7ad-c00b89f39935.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-ob_expr_hellocpp">6. ob_expr_hello.cpp<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#6-ob_expr_hellocpp" class="hash-link" aria-label="Direct link to 6. ob_expr_hello.cpp" title="Direct link to 6. ob_expr_hello.cpp">​</a></h3>
<h3><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/98290631-db52-4f32-bf1f-4b185907c9ac/image/2022-03-04/2ac97743-4494-4d81-ba5f-25dec9aabe2c.png" alt="" class="img_ev3q"></h3>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-1"><a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#-1" class="hash-link" aria-label="Direct link to -1" title="Direct link to -1">​</a></h3>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="7ob_expr_eval_functionscpp">7.ob_expr_eval_functions.cpp<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#7ob_expr_eval_functionscpp" class="hash-link" aria-label="Direct link to 7.ob_expr_eval_functions.cpp" title="Direct link to 7.ob_expr_eval_functions.cpp">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/b3d7d96d-7c46-445f-883d-473ecb068cd4/image/2022-03-04/d587de86-0571-42bc-8f1e-3081b47b6899.png" alt="" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="compile-the-function">Compile the function<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#compile-the-function" class="hash-link" aria-label="Direct link to Compile the function" title="Direct link to Compile the function">​</a></h2>
<p>I'll skip this part. Please read other posts about how to compile the OceanBase source code for details.</p>
<p>And by the way, I have found some compilation errors in the latest code and created a pull request on GitHub, which has been accepted but not yet been merged.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="verify-the-function">Verify the function<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#verify-the-function" class="hash-link" aria-label="Direct link to Verify the function" title="Direct link to Verify the function">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-replace-the-observer-process">1. Replace the observer process<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#1-replace-the-observer-process" class="hash-link" aria-label="Direct link to 1. Replace the observer process" title="Direct link to 1. Replace the observer process">​</a></h3>
<p>Create a soft connection to points the observer process in the <code>/root/observer/bin</code> directory to the observer process in the <code>/root/.obd/repository/oceanbase-ce/3.1.2/7fafba0fac1e90cbd1b5b7ae5fa129b64dc63aed/bin</code> directory.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/83dba035-7b05-49c2-828e-0da3bd8c0f8c/image/2022-03-04/d8015f5f-b55c-4bee-bfe1-e16bad69b2ec.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-start-the-observer-process">2. Start the observer process<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#2-start-the-observer-process" class="hash-link" aria-label="Direct link to 2. Start the observer process" title="Direct link to 2. Start the observer process">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/9d017a42-5261-4e8a-84e8-e578707c3c41/image/2022-03-04/8de93958-9c77-4932-ac53-55f2389d153f.png" alt="" class="img_ev3q"></p>
<p>You may notice that the version is 3.1.3, which is not released yet. We got that result because the latest code was used.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="test-the-function">Test the function<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#test-the-function" class="hash-link" aria-label="Direct link to Test the function" title="Direct link to Test the function">​</a></h2>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/57787d55-ce12-4960-8e87-f39478f97f68/image/2022-03-04/60705b08-75e1-477b-bf21-5d07bd7902ef.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="suggestions">Suggestions<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#suggestions" class="hash-link" aria-label="Direct link to Suggestions" title="Direct link to Suggestions">​</a></h3>
<p>In the past few months, I have been researching home-grown databases, such as OceanBase Database, TiDB, openGauss, MogDB, and Dameng. They are capable of online transaction processing (OLTP), online analytical processing (OLAP), or hybrid transaction/analytical processing (HTAP). I am not bold enough to compare them as a layman, but as a user, I would like to bring up a few points based on my experience with OceanBase Database.</p>
<p>It took me some time to build the environment, which is acceptable because, after all, it is a distributed system. However, it would be great if users are provided with a tool to quickly build a demo cluster, like the playground of TiDB.</p>
<p>The system is resource-consuming. Users with small-specification devices may suffer deployment failures due to resource insufficiency. They will be grateful if small-specification deployment is supported.</p>
<p>Maybe OceanBase Database can consider supporting user-defined extension interfaces? Some may think that is not a necessary feature, but it is quite useful in some enterprise-level applications, and wins OceanBase a point or two when comparing it to Oracle.</p>
<p>OceanBase Database Enterprise Edition can support more driver APIs for Oracle tenants. For more information, see "Use JDBC to connect to OceanBase Database through JayDeBeApi in Python".</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="afterword">Afterword<a href="https://powerfooi.github.io/docs-playground/blog/hello-oceanbase#afterword" class="hash-link" aria-label="Direct link to Afterword" title="Direct link to Afterword">​</a></h2>
<p>Most of posts in the community are intended for database administrators, focusing on deployment, migration, application, performance, and O&amp;M. This one may not attract a large audience. However, I hope it can encourage more better content on the secondary development of open source databases.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Flink CDC + OceanBase Database Data Integration Solution]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/flink-and-ob</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/flink-and-ob</guid>
            <pubDate>Mon, 03 Jun 2024 12:36:50 GMT</pubDate>
            <description><![CDATA[Introduction]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://powerfooi.github.io/docs-playground/blog/flink-and-ob#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>Change Data Capture (CDC) is a widely applied technology that captures database changes. In this post, we will introduce you to the Flink CDC + OceanBase Database data integration solution. This solution combines CDC with extraordinary pipeline capabilities and diversified ecosystem tools of Flink, to synchronize processed CDC data to the downstream, formulating a solution for integrated full and incremental synchronization based on OceanBase Database Community Edition.</p>
<p>The solution brings two benefits. First, it synchronizes data by using one component and one link. Second, Flink SQL supports aggregation and extract-transform-load (ETL) of database and table shards, making it much easier for users to analyze, process, and synchronize CDC data by executing a Flink SQL job.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="keypoints">Keypoints<a href="https://powerfooi.github.io/docs-playground/blog/flink-and-ob#keypoints" class="hash-link" aria-label="Direct link to Keypoints" title="Direct link to Keypoints">​</a></h2>
<p>This post is based on the content shared by Wang He, an open source tool expert with OceanBase.</p>
<p>It contains the following five parts:</p>
<ol>
<li>
<p>Introduction to the CDC technology</p>
</li>
<li>
<p>Introduction to OceanBase CDC components</p>
</li>
<li>
<p>Introduction to Flink CDC</p>
</li>
<li>
<p>Use Flink CDC OceanBase Connector</p>
</li>
<li>
<p>Conclusion</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="i-cdc-technology">I. CDC technology<a href="https://powerfooi.github.io/docs-playground/blog/flink-and-ob#i-cdc-technology" class="hash-link" aria-label="Direct link to I. CDC technology" title="Direct link to I. CDC technology">​</a></h2>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/eaa84253-a48e-438c-a458-29cc39c6d194/image/2022-05-07/7f3f97dc-eb5c-43f5-a8c8-44f5064bee08.png" alt="" class="img_ev3q"></p>
<p>The CDC technology monitors and captures changes in a database, such as the INSERT, UPDATE, and DELETE operations on the data or data tables, and then writes the changes to message-oriented middleware, so that other services can subscribe to and consume the changes.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/7b3f7a72-e230-4ada-8f67-d1feb68d1168/image/2022-05-07/ac855f6e-3a00-44f3-b7e6-39517751fec0.png" alt="" class="img_ev3q"></p>
<p>Alibaba Canal is a popular open source CDC tool, which is mainly used in Alibaba Cloud open-source components for incremental MySQL data subscription and consumption. The latest version of Alibaba Canal supports OceanBase Database Community Edition data sources, incremental DDL and DML operations, and filtering of databases, tables, and columns. You can use it with ZooKeeper for the deployment of high-availability clusters. The client adapter of Alibaba Canal supports multiple types of containers as the destination. You can use it with Alibaba Otter to achieve active geo-redundancy.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/17c2e5c5-9b31-4290-8cbd-983815f1e469/image/2022-05-07/300d3459-5fa8-416c-a5d5-84e03fdcc488.png" alt="" class="img_ev3q"></p>
<p>Another popular open source CDC framework is Debezium.</p>
<p>It supports the synchronization of DDL and DML operation logs, uses the primary key or unique key as the key of the message body, and also supports the snapshot mode and full synchronization.</p>
<p>Debezium also supports a variety of data sources. You can integrate Debezium Server into a program as an embedded engine to directly write data to a message system without using Kafka.</p>
<h1>II. OceanBase CDC components</h1>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/b38cbaf6-fc19-4eef-b172-27a5016cc451/image/2022-05-07/15fd5ef4-7679-403b-aad1-a39d8700b0bc.png" alt="" class="img_ev3q"></p>
<p>OceanBase Database Community Edition provides four CDC components:</p>
<p>obcdc (formerly liboblog): pulls incremental logs in sequence.</p>
<p>oblogmsg: parses the format of incremental logs.</p>
<p>oblogproxy: pulls the incremental logs.</p>
<p>oblogclient: connects to oblogproxy to obtain the incremental logs.</p>
<p>OceanBase Migration Service (OMS) Community Edition is provided. It is an all-in-one data migration tool for incremental data migration, full data migration, and full data verification.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/0fa227bf-343a-4b54-9eb8-ec0adcb7b018/image/2022-05-07/8eceea9f-1f1e-445c-9a9f-24c7cd495cd6.png" alt="" class="img_ev3q"></p>
<p>The preceding figure shows the CDC logic of OceanBase Database Community Edition. Data is pulled by oblogproxy and OMS Community Edition. Canal and Flink CDC are integrated with oblogclient to obtain incremental logs from oblogproxy.</p>
<h1>III. Flink CDC</h1>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/fa9a24c3-5684-40c4-b584-35992433bff5/image/2022-05-07/ba8f10ce-eacf-48ef-b6b6-402368806f09.png" alt="" class="img_ev3q"></p>
<p>Flink CDC supports multiple data sources, such as MySQL, PostgreSQL, and Oracle. Flink CDC reads the full and incremental data from a variety of databases, and then automatically transfers data to the Flink SQL engine for processing.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/fc9856de-09ed-4eaa-b110-dff6d75f5b32/image/2022-05-07/4d648854-a0e5-4404-83ea-18d1ce2b94cd.png" alt="" class="img_ev3q"></p>
<p>Flink is a hybrid engine that supports both batch and streaming processing. Flink CDC converts streaming data into a dynamic table. In the preceding figure, the lower left part shows the mapping between streaming data and a dynamic table. The lower right part shows the results of multiple executions of continuous queries.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/091b66ed-1259-46f9-a385-3353c6c77a2f/image/2022-05-07/3217492e-54fc-4dac-831f-814dfd2b855c.png" alt="" class="img_ev3q"></p>
<p>The preceding figure shows the working principle of Flink CDC. It implements the SourceFunction API based on Debezium and supports MySQL, Oracle, MongoDB, PostgreSQL, and SQLServer.</p>
<p>The latest version of Flink CDC supports data reads from a MySQL data source by using the Source API, which provides enhanced concurrent reading compared to the SourceFunction API.</p>
<p>The OceanBaseRichSourceFunction API is implemented for full and incremental data reads respectively based on JDBC and oblogclient.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/ef1db322-542c-460c-a4cc-7052711bdbb8/image/2022-05-07/7144e0a0-de64-4123-966a-4de6cf427d0b.png" alt="" class="img_ev3q"></p>
<p>=============</p>
<h1>IV. Use Flink CDC OceanBase Connector</h1>
<p>Configure the <code>docker-compose.yml</code> file and start the container. Go to the directory where the <code>docker-compose.yml</code> file is stored, and run the <code>docker-compose up-d</code> command to start the required components.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/9b5d74d0-01c9-42b7-88e8-329996981c57/image/2022-05-07/b87e2f73-36ad-47c2-b991-1bdff8fb5aba.png" alt="" class="img_ev3q"></p>
<p>Run the <code>docker-compose exec observer obclient-h127.0.0.1-P2881-uroot-ppsw</code> command to log on by using newly created username and password. Download the required dependency packages and execute Flink DDL statements on the CLI of Flink SQL to create a table.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/67ccf926-fd34-4175-b7f7-6219ce53ec66/image/2022-05-07/022ef971-e3b8-4861-8590-3734401c1020.png" alt="" class="img_ev3q"></p>
<p>Set the checkpointing interval to 3 seconds and the local time zone to Asia/Shanghai. Then, create an order table, a commodity table, and the associated order data table. Perform data reads and writes.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/77f314e9-0062-455a-a0aa-e34bc0f3de1a/image/2022-05-07/1a5ea095-35cf-4106-b629-7064a8a75792.png" alt="" class="img_ev3q"></p>
<p>View the data in Kibana by visiting the following address:</p>
<p><a href="http://localhost:5601/app/kibana#/management/kibana/index_pattern" target="_blank" rel="noopener noreferrer">http://localhost:5601/app/kibana#/management/kibana/index_pattern</a></p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/f79cc96e-182c-4180-808b-a7b8b091f4a7/image/2022-05-07/50904e7a-a129-46d1-b841-f9b19c64edee.png" alt="" class="img_ev3q"></p>
<p>Create an index pattern named <code>enriched_orders</code>, and then view the written data by visiting <a href="http://localhost:5601/app/kibana#/discover%E7%9C%8B%E5%88%B0%E5%86%99%E5%85%A5%E7%9A%84%E6%95%B0%E6%8D%AE%E4%BA%86%E3%80%82" target="_blank" rel="noopener noreferrer">http://localhost:5601/app/kibana#/discover</a>.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/69bd86f3-8601-4561-a9e0-30831203e859/image/2022-05-07/01c329c8-b97b-4dfc-8e6c-117d00e24f69.png" alt="" class="img_ev3q"></p>
<p>Modify the data of the monitored table and view the incremental data changes. Perform the following modification operations in OceanBase Database in sequence, and refresh Kibana once after each step. We can see that the order data displayed in Kibana is updated in real time.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/62c8b1a5-50d1-4903-a221-ce21c8f1d6c4/image/2022-05-07/991c53d2-425e-4d01-a20d-3851bff54609.png" alt="" class="img_ev3q"></p>
<p>Clean up the environment. Go to the directory where the <code>docker-compose.yml</code> file is located, and run the <code>docker-compose down</code> command to stop all containers. Go to the Flink deployment directory and run the <code>./bin/stop-cluster.sh</code> command to stop the Flink cluster.</p>
<h1>V. Conclusion</h1>
<p>Flink CDC supports full and incremental data migration between many types of data sources and works with Flink SQL to perform ETL operations on streaming data. As of the release of Flink CDC 2.2, the project has 44 contributors, 4 maintainers, and more than 4,000 community members.</p>
<p>OceanBase Connector can be integrated with Flink CDC 2.2 or later to read full data and incremental DML operations from multiple databases and tables in AT_LEAST_ONCE mode. Flink CDC OceanBase Connector will gradually support concurrent reads, incremental DDL operations, and the EXACTLY_ONCE mode in later versions.</p>
<p>Now, let's briefly compare the existing CDC solutions. OMS Community Edition is a proven online data migration tool with a GUI-based console. It provides full data migration, incremental data migration, data verification, and O&amp;M services. DataX + Canal/Otter is a fully open source solution. Canal supports many types of destinations and incremental DDL operations, and Otter supports active-active disaster recovery.</p>
<h1>Afterword</h1>
<p>Flink CDC is a fully open source solution and is supported by an active community. It supports full and incremental data synchronization between many types of data sources and destinations. It is worth mentioning that Flink CDC is easy to use, and supports aggregation and ETL of database and table shards. Compared with some existing CDC solutions that involve complex data cleaning, analysis, and aggregation operations, Flink SQL allows users to easily process data for various business needs by using methods such as stream-stream join and dimension table join.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="contact-us">Contact us<a href="https://powerfooi.github.io/docs-playground/blog/flink-and-ob#contact-us" class="hash-link" aria-label="Direct link to Contact us" title="Direct link to Contact us">​</a></h2>
<p><strong>Feel free to contact us at any time.</strong></p>
<p><a href="https://open.oceanbase.com/answer" target="_blank" rel="noopener noreferrer">Visit the official forum of OceanBase Database Community Edition</a></p>
<p><a href="https://github.com/oceanbase/oceanbase/issues" target="_blank" rel="noopener noreferrer">Report an issue of OceanBase Database Community Edition</a></p>
<p><strong>DingTalk Group ID: 33254054</strong></p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/8223c1be-2a25-4658-9d9f-5fd4594e9900/image/2022-05-07/77e7a1ce-01b1-4b45-9aaa-ff184f43f822.png" alt="" class="img_ev3q"></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[High Concurrency of OceanBase]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/high-concurrency</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/high-concurrency</guid>
            <pubDate>Mon, 03 Jun 2024 12:29:35 GMT</pubDate>
            <description><![CDATA[As large-scale promotions become the norm, it is a severe challenge for enterprises to ensure a smooth shopping experience for users during peak times, apart from annual shopping festivals such as "Double 11" and "618", by designing their application architecture and database architecture effectively to handle traffic surges. Based on its 10 years of experience in supporting "Double 11" as well as its features of online scaling, high concurrency, and low latency, OceanBase Database can quickly respond to business load changes without affecting the business, thereby improving system throughput during flash sales.]]></description>
            <content:encoded><![CDATA[<p>As large-scale promotions become the norm, it is a severe challenge for enterprises to ensure a smooth shopping experience for users during peak times, apart from annual shopping festivals such as "Double 11" and "618", by designing their application architecture and database architecture effectively to handle traffic surges. Based on its 10 years of experience in supporting "Double 11" as well as its features of online scaling, high concurrency, and low latency, OceanBase Database can quickly respond to business load changes without affecting the business, thereby improving system throughput during flash sales.</p>
<p><a href="https://www.oceanbase.com/solution/ecommerce" target="_blank" rel="noopener noreferrer"><strong>Click to see more about scaling solutions for large-scale promotions&gt;&gt;</strong></a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cases"><strong>Cases</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#cases" class="hash-link" aria-label="Direct link to cases" title="Direct link to cases">​</a></h2>
<p><a href="https://www.oceanbase.com/customer/haidilao" target="_blank" rel="noopener noreferrer"><strong>Haidilao: stable support for holiday traffic peaks</strong></a></p>
<p><a href="https://www.oceanbase.com/customer/popmart" target="_blank" rel="noopener noreferrer"><strong>POP MART: handle traffic spikes of a hundredfold during flash sales</strong></a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-high-concurrency-techniques-of-oceanbase-database"><strong>Key high-concurrency techniques of OceanBase Database</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#key-high-concurrency-techniques-of-oceanbase-database" class="hash-link" aria-label="Direct link to key-high-concurrency-techniques-of-oceanbase-database" title="Direct link to key-high-concurrency-techniques-of-oceanbase-database">​</a></h2>
<p>A database system must ensure both the correctness and high concurrency of the database. <strong>The key to ensure database correctness in high-concurrency scenarios is to ensure the ACID properties of transactions.</strong> Isolation (I) in ACID means that parallel execution of concurrent transactions produces the same effect as serial execution of those transactions. This kind of isolation is a serializable isolation. A serializable isolation is often accompanied by a large amount of conflict wait time or a large number of conflict failures. Therefore, the costs are relatively high.</p>
<p>To provide better performance of concurrent execution, the database has to relax the validation on schedules, allowing more non-serializable schedules to be run. The result of multiple concurrent transactions may no longer be equivalent to the result of any kind of serializable execution. The following promises must be made to regulate the database use: what kinds of errors will occur and what will not. These promises reflect the isolation levels of the database.</p>
<p>Based on three phenomena that can lead to data errors in the concurrent execution of transactions, the SQL-92 standard defines a set of isolation levels. It defines four isolation levels based on whether they allow each of the phenomena. <strong>A critique of ANSI SQL Isolation Levels</strong>, a paper published in 1995, identified a number of problems with the definitions of isolation levels in the SQL-92 standard.</p>
<ol>
<li>The definition of phenomena in SQL-92 is too narrow. It is impossible to achieve serializable isolation even if the three phenomena are excluded.</li>
<li>Several new phenomena are added: dirty write, lost update, read skew, and write skew.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="consistency-of-distributed-transactions"><strong>Consistency of distributed transactions</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#consistency-of-distributed-transactions" class="hash-link" aria-label="Direct link to consistency-of-distributed-transactions" title="Direct link to consistency-of-distributed-transactions">​</a></h3>
<p>For concurrent transactions, distributed databases face more challenges than standalone databases.</p>
<p><strong>The first challenge is read/write concurrency.</strong></p>
<p>In distributed database systems, a two-phase commit protocol or rollback compensation mechanism is usually used to ensure atomicity of distributed transactions. Regardless of which mechanism is used, the read/write concurrency problem exists. Take two-phase commit as an example, it involves two phases: prepare phase and commit phase. After all participants are prepared to commit, the coordinator will initiate a commit request to them. It is impossible to guarantee that all participants will commit at the same time in the protocol.</p>
<p>Suppose T1 is a transaction that transfers $50 from account A to account B. T1 is in the process of committing. The modification to account A has been committed, and the modification to account B is being committed. What are the balance values of accounts A and B read by the concurrent transaction T2?</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221222816-a931bbcf-a0ef-4bca-8572-3ec63042a62b.png" alt="" class="img_ev3q"></p>
<p><strong>The other challenge is external consistency that distributed database systems often face.</strong></p>
<p>Suppose a user places an order on Taobao and the payment is successful.</p>
<p>The order transaction T1 and the payment transaction T2 are located on different servers. T1 and T2 are committed separately. The version number of T1 is 1000, and that of T2 is 800. Assume that the system also has a read transaction T3, whose snapshot version number is 900. T3 can read the successful payment information but cannot read the order information. It violates the business semantics.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221277781-781e9486-aa16-4a67-b0e7-f37a4e6a1172.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="scheduling-algorithms-of-concurrent-transactions"><strong>Scheduling algorithms of concurrent transactions</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#scheduling-algorithms-of-concurrent-transactions" class="hash-link" aria-label="Direct link to scheduling-algorithms-of-concurrent-transactions" title="Direct link to scheduling-algorithms-of-concurrent-transactions">​</a></h3>
<p>We have described the challenges brought by concurrent transactions. The behavior of concurrent transactions depends on the scheduling. General concurrent transaction scheduling methods are as follows:</p>
<ul>
<li>The first method is two-phase locking. Two-phase locking is a pessimistic concurrency control method that guarantees serializable schedules of concurrent transactions. Different levels of isolation can be implemented by adjusting the strategy of reading and acquiring locks.</li>
<li>The second method is about concurrency control in an optimistic way, which includes timestamp ordering concurrency control and optimistic concurrency control (OCC).</li>
<li>The third method is the multi-version concurrency control mechanism that is widely used by popular databases.</li>
</ul>
<p>This post focuses on two-phase locking and multi-version concurrency control.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="two-phase-locking"><strong>Two-phase locking</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#two-phase-locking" class="hash-link" aria-label="Direct link to two-phase-locking" title="Direct link to two-phase-locking">​</a></h3>
<p>As the name implies, the two-phase locking protocol involves two phases: the locking phase and the unlocking phase. In the locking phase, each transaction requests the locks that it needs from the lock manager but it cannot release any locks. Each transaction can request for a read or write lock. When the lock manager denies the lock requests, the transactions need to wait. When the transactions enter the unlocking phase, no more lock requests can be made. In database practices, a strict two-phase locking technique is employed. That means transactions can release locks only after they are committed.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221384181-94e3c4f5-fa76-4eee-b9b9-75251890d6d8.png" alt="" class="img_ev3q"></p>
<p>Take a look at an example of a strict two-phase locking scheduling case. Assume T1 is a transaction that transfers USD 10 from account A to account B. During the transfer, a mutually exclusive lock is placed on accounts A and B respectively. Transaction T2 requires a read lock to read the balances of accounts A and B. However, due to the mutually exclusive locks, the read request from T2 has to wait. T2 can only release the exclusive locks after transaction T1 is committed. At last, T2 reads the values of accounts A (90) and B (110) and the total value satisfies the constraint that the sum of the two accounts is equal to 200.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221459615-669f85f8-ae26-4d14-a862-179ce623eace.png" alt="" class="img_ev3q"></p>
<p>The two-phase locking protocol is relatively simple to implement. But when a transaction finds a lock conflict, the transaction needs to wait, which may reduce the concurrent processing capacity of the database. In addition, multiple concurrent transactions are likely to cause deadlocks because they tend to contend for locks.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multi-version-concurrency-control"><strong>Multi-version concurrency control</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#multi-version-concurrency-control" class="hash-link" aria-label="Direct link to multi-version-concurrency-control" title="Direct link to multi-version-concurrency-control">​</a></h3>
<p>To solve the problem of read/write conflict, many databases use the mechanism of multi-version concurrency control. The biggest benefit of this mechanism is that readers do not block writers and writers do not block readers, which greatly improves the concurrency capacity of the system.</p>
<p>Take the implementation of multi-version concurrency control in MySQL InnoDB as an example. InnoDB data blocks record the latest version of data. Multiple old versions of data are recorded in undo logs. InnoDB adds two hidden fields to each row: transaction ID field, which records the identifier for the last transaction that modified the row, and a rollback pointer, which points to old versions of data. The initial content of the row can be traced back through the rollback pointer of the current record. Before a transaction modifies a row in InnoDB, it first locks the row with a mutually exclusive lock to prevent other transactions from modifying the row simultaneously. Then, it writes an undo log and a redo log. Finally, it updates the row data, changes the transaction ID of the row to its ID, and points the rollback pointer to the undo log it just wrote. This is a brief process of how a transaction modifies the data in InnoDB.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221536100-26733a35-ce30-4043-a16c-b4db0d47ee1a.png" alt="" class="img_ev3q"></p>
<p>Take a look at the read process of a transaction. Before a transaction reads the data, it is assigned a read view, which represents the visible scope of the current transaction. The read view contains several pieces of information. First, the ID of this transaction. Second, the list of active transactions and the upper and lower limits of these transactions. After the read view is assigned, the snapshot of the transaction is established. Then, the transaction reads the row records and checks the row records based on the read view. If the current row is invisible, the rollback pointer is used to find the old versions of data. In the read process, the transaction first checks the current transaction ID of the row. If the ID is in the list of active transactions or larger than the maximum transaction ID of the read view, the row data is invisible to the transaction and the transaction needs to find old versions of data. Otherwise, the row data is visible.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/180072/1604304172889-f4478653-ab85-47e0-976c-957f18321415.png?x-oss-process=image%2Fresize%2Cw_1500" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multi-version-management"><strong>Multi-version management</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#multi-version-management" class="hash-link" aria-label="Direct link to multi-version-management" title="Direct link to multi-version-management">​</a></h3>
<p>OceanBase Database implements multi-version concurrency control based on mutual exclusive locks. The storage engine of OceanBase Database uses an LSM-tree architecture to split data into static data and dynamic data. Dynamic data is stored in MemTables and periodically dumped to the disk. MemTables use B+Tree and dual hash index structures to keep data stored. The B+Tree structure is used for range query while hash indexes are used for single row query.</p>
<p>The leaf nodes of the B+Tree structure store the meta information of the row data. The meta information contains many fields. Only three fields are introduced here: primary key information, lock information, and linked-list pointer.</p>
<ul>
<li>Lock information indicates whether a transaction holds a row lock. Before a transaction modifies data, it needs to acquire a row lock.</li>
<li>A linked-list points to multiple versions of the data. Each version only keeps incremental information. For example, if only one field is modified at a time, only modifications to that field are recorded.</li>
</ul>
<p>As you can see from the following figure, the row with a primary key equal to 1 has been modified three times. The first modification is an insert operation by a transaction with a version number of 1000. The second modification to the field b is made by a transaction with a version number of 1005. The third modification to the field b is made by a transaction with an infinite version number, indicating that the current transaction is not committed.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/180072/1604307652308-90813d94-5b83-4545-9f6c-e76eb85d2456.png?x-oss-process=image%2Fresize%2Cw_1500" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="mechanism-and-implementation-of-multi-version-concurrency-control"><strong>Mechanism and implementation of multi-version concurrency control</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#mechanism-and-implementation-of-multi-version-concurrency-control" class="hash-link" aria-label="Direct link to mechanism-and-implementation-of-multi-version-concurrency-control" title="Direct link to mechanism-and-implementation-of-multi-version-concurrency-control">​</a></h3>
<p>The OceanBase distributed database system schedules transactions to ensure that concurrent transactions do not cause consistency issues. Assume that the system has three concurrent transactions, which are read/write transaction T1, read/only transaction T2, and read/write transaction T3. T1 does not commit and holds a lock on row 1.</p>
<p>T3 needs to acquire the row lock of row 1 before it modifies row 1. The lock of row 1 is held by T1, T3 needs to wait until T1 is committed and the row lock is released. T2 is a read-only transaction with a snapshot version number of 1008. Before T2 reads data, it first finds the metadata of the row by the index structure. Then, it finds the committed data with a maximum version number smaller than the snapshot version number based on the snapshot version number. The following figure shows that T2 is able to read the committed data with version number 1005. The preceding is the internal read/write concurrency control mechanism of OceanBase Database. This mechanism solves the write/write conflicts using the mutually exclusive locks on the rows. A multi-version mechanism is used to ensure that readers do not block writers and writers do not block readers.</p>
<p>The multi-version concurrency control mechanism in OceanBase Database is very simple to implement. The snapshot version is a timestamp. The transaction visibility of row records can be determined by comparing the sizes of timestamps without the need to maintain active transactions. In some distributed database systems, a global transaction manager is maintained, which is used to determine transaction snapshots. If the system has multiple concurrent transactions, the global transaction manager can become the bottleneck of the cluster. OceanBase Database does not need to maintain a global transaction manager. Another point is that the lock information is stored on the row metadata in OceanBase Database, eliminating the need for an additional lock manager.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/180072/1604307986350-c0c98d47-c314-46d0-bda5-9f067e0bc1d8.png?x-oss-process=image%2Fresize%2Cw_1500" alt="" class="img_ev3q"></p>
<p>Back to the read/write concurrency problem discussed in the beginning. When T1 is committing, the modification to account A is committed and the modification to account B is being committed. To solve the read/write concurrency problem, a two-phase locking schema is used in some distributed systems. That means T2 needs to acquire a read lock before it can read the balances of accounts A and B after T1 is committed.</p>
<p>In the OceanBase distributed database system, the read request will first find data of the corresponding version based on the snapshot version number. Assume that the version number of the committed transaction T1 is smaller than the snapshot version number of T2. T2 can read modifications made by T1. If T2 finds that row B is in the committing state, T2 needs to wait until row B is committed. This ensures that T2 can read data on both row A and row B. The time window that T2 needs to wait in this scenario starts from the prepare phase and ends at the commit phase. This is much shorter than the time spent to acquire a lock in the two-phase locking process.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221770870-f198b243-22c0-479a-b2eb-2260da52abdc.png" alt="" class="img_ev3q"></p>
<p>Another issue that troubles distributed database systems is external consistency.</p>
<p>For example, to purchase a phone on Taobao, you need to place an order first, and then pay for that order. Order placement and payment are two transactions. Assume that they are T1 and T2 respectively and are handled on two servers that generate independent commit versions. The commit version of T1 is 1000 and that of T2 is 800. When you start a query transaction T3, the version number of which is 900, T3 can read the payment information, but not the order information. This does not agree with the actual order of the transactions, and is therefore an external consistency problem.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="global-timestamp-service-gts"><strong>Global timestamp service (GTS)</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#global-timestamp-service-gts" class="hash-link" aria-label="Direct link to global-timestamp-service-gts" title="Direct link to global-timestamp-service-gts">​</a></h3>
<p><strong>To address external consistency, OceanBase Database introduces the GTS, which assigns snapshot versions and commit versions based on a global timestamp.</strong></p>
<p>In the following figure, you can see that transactions T1 and T2 each requests a timestamp from GTS upon commit as its commit version. Transaction T3 also requests a timestamp as its snapshot version. GTS ensures that TS1 &lt; TS2 &lt; TS3. In other words, if T3 is able to read data modified by T2, it must also be able to read data modified by T1. External consistency is therefore ensured.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221874136-d344c528-d27d-4ae0-90c8-807e06904eba.png" alt="" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="early-lock-release-elr"><strong>Early lock release (ELR)</strong><a href="https://powerfooi.github.io/docs-playground/blog/high-concurrency#early-lock-release-elr" class="hash-link" aria-label="Direct link to early-lock-release-elr" title="Direct link to early-lock-release-elr">​</a></h3>
<p>A nuisance in single-server database systems, hotspot row updates present a bigger challenge for distributed databases. The longer the row locks are held, the more the performance of the update is affected.</p>
<p>Transactions in a distributed database have longer delays than that in a single-server database. Therefore, row locks are held longer in a distributed database. This problem is more serious in a deployment model with five IDCs across three regions, where log synchronization may cause a delay of up to dozens of milliseconds. OceanBase addresses this problem using the ELR feature.</p>
<p>In a conventional database, row locks are added when a transaction is running and released after the transaction is persisted. In OceanBase Database, row locks are also added when a transaction is running. The difference is that locks can be released as soon as the system receives the request to commit the transaction, without waiting for the persistence of the transaction. In the following figure, you can see that transactions take place one after another without ELR. When ELR is enabled, the next transaction is able to acquire locks before the previous transaction is persisted. The duration in which the locks are held is significantly reduced.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/23425/1604221996559-1b3cf217-088a-4046-8935-a2811d47e43b.png" alt="" class="img_ev3q"></p>
<p>We measured the time required by each phase of running an OLTP update transaction in a test. It took 60 μs to generate the execution plan, 50 μs to perform the DML operation, 33 μs to write the clog, and an additional 170 μs to synchronize that clog. The transaction held its locks for about 270 μs during the execution process. When ELR is enabled, this duration is reduced by 65%, which means the performance of hotspot row updates can be tripled.</p>
<p><img decoding="async" loading="lazy" src="https://intranetproxy.alipay.com/skylark/lark/0/2020/png/180072/1604312990338-3c7dfd2d-9224-43a1-ad1f-0b9afd93a30c.png?x-oss-process=image%2Fresize%2Cw_1500" alt="" class="img_ev3q"></p>
<p>When you were learning about the ELR feature, some of you may have wondered: What if a preceding transaction fails to persist? How should subsequent transactions be handled?</p>
<p>When one transaction fails, all subsequent transactions must be rolled back. This is what is referred to as a cascading rollback and must be avoided, as pointed out by many papers related to database management. However, in actual application scenarios and tests, the possibility of a transaction failure and cascading rollback is very low.</p>
<p>To support cascading rollback, you must maintain the dependencies among transactions on each hotspot row. You can create a linked list that contain all transactions that modify the same row. This ensures that when a transaction fails, all subsequent transactions can be rolled back. For example, transactions T1, T2, and T3 modify data of the same hotspot row. Before T1 is persisted, it releases the row lock so that T2 may acquire the lock. T2 also releases the lock early for T3 to acquire lock. As a result, T3 depends on T2, and T2 depends on T1. A linked list is created based on these dependencies so that, if T1 is not persisted, both T2 and T3 are rolled back to ensure the data is correct.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Work with developers to create an all-in-one database]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/all-in-one</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/all-in-one</guid>
            <pubDate>Mon, 03 Jun 2024 12:18:26 GMT</pubDate>
            <description><![CDATA[1713958543]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958543012.png" alt="1713958543" class="img_ev3q"></p>
<p>Good morning, OceanBase developers! I'm so glad to meet you again here in Shanghai for our second developers conference, after our first acquaintance in OceanBase DevCon 2023 in Wangjing, Beijing.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958831452.png" alt="1713958832" class="img_ev3q"></p>
<p>Let's first have a brief review of the architecture of OceanBase Database. The research and development of OceanBase Database started in 2010. It has been nearly 14 years. Throughout this period, we have made two major upgrades to the technical architecture and a key product upgrade.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958839876.png" alt="1713958840" class="img_ev3q"></p>
<p>The first upgrade to the technical architecture took place in 2016, where the original OceanBase Database V0.5 in the single-write multi-read architecture was upgraded to OceanBase Database V1.0 in a fully distributed architecture. The second architecture upgrade was carried out in OceanBase Database V4.0 in 2022. This version introduced an integrated architecture that supports both standalone and distributed deployment modes. This way, OceanBase Database can be applied not only to large enterprises (SMEs), but also to small and medium-sized enterprises and even start-ups.</p>
<p>In the second half of 2023, we proposed the concept of all-in-one database based on the integrated architecture, enabling OceanBase Database to incorporate capabilities such as OLTP, OLAP, KV, OBKV, and even AI in the future, to cope with a wide variety of workloads.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="i-the-path-to-open-source"><strong>I. The path to open source</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#i-the-path-to-open-source" class="hash-link" aria-label="Direct link to i-the-path-to-open-source" title="Direct link to i-the-path-to-open-source">​</a></h2>
<p>OceanBase Database was officially available as an open source project on the Children's Day — June 1, 2021. Before OceanBase Database was launched open source, the open source community in China already had a prevailing native distributed database. Then, why another one?</p>
<p>Simply because we believed that users and developers would love it, for it has showed high stability, high performance, and high cost effectiveness in more than ten years' service in all core scenarios of Ant Group in Double 11 shopping festivals.</p>
<p>At that time, we were serious on turning OceanBase Database into open source, and real open source. Now I have a deeper understanding of "real open source". Is OceanBase Database really open-source? Statistics speak louder than our words.</p>
<p>OceanBase Database has been available as an open source project for two years. The last two years have seen rapid development. Up to now, the number of clusters deployed with OceanBase Database Community Edition has exceeded 10,000. We have seen phenomenal growth in OceanBase users and clusters after the release of OceanBase Database V4.0.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958890484.png" alt="1713958891" class="img_ev3q"></p>
<p>Today, mainstream Internet companies, including Ctrip, Kuaishou, Zhihu, Vivo, and NetEase, are using OceanBase Database Community Edition in various scenarios. In the open source community, OceanBase is recognized as the best open source distributed database with top technical feature performance.</p>
<p>OceanBase Database is widely recognized and has more than 1000 customers. According to the China Distributed Relational Database Vendors Report 2023 by IDC (Document number:# CHC50734323), OceanBase ranked in the industry leaders and was in a leading position in product capabilities. OceanBase also received an Honorable Mention in the 2023 Gartner Magic Quadrant for Global Cloud Database Management Systems, and has topped Modb China Database Rankings for 14 consecutive months.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958903766.png" alt="1713958904" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="i-oceanbase-database-community-edition-in-distributed-oltp-scenarios"><strong>i. OceanBase Database Community Edition in distributed OLTP scenarios</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#i-oceanbase-database-community-edition-in-distributed-oltp-scenarios" class="hash-link" aria-label="Direct link to i-oceanbase-database-community-edition-in-distributed-oltp-scenarios" title="Direct link to i-oceanbase-database-community-edition-in-distributed-oltp-scenarios">​</a></h3>
<p>OceanBase Database was initially designed for mission-critical core business scenarios such as transaction processing and payment. Therefore, early open source users apply OceanBase Database to core business scenarios.</p>
<p>CR Vanguard originally used the sharding solution of MySQL Database, which does not support scaling. By deploying OceanBase Database, a native distributed database solution, in place of MySQL Database, Vanguard realizes on-demand scaling, reduces the required storage size by 60% from 15 TB to 6 TB, and achieves a recovery point objective (RPO) of zero.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958917144.png" alt="1713958918" class="img_ev3q"></p>
<p>With its infrastructure, including the databases, built in Baidu Cloud, Alibaba Cloud, and Tencent Cloud, Zuoyebang is in dire need of a system that can tackle this multi-infrastructure environment. Against this backdrop, it replaces MySQL with OceanBase. Backed by the high availability and disaster tolerance capabilities of OceanBase Database, Zuoyebang now sets up a multi-active architecture in a multi-infrastructure environment, handling hybrid transaction/analytical processing (HTAP) loads with just one system. Moreover, with OceanBase Database, the number of servers required is reduced from 24 to 9, reducing hardware costs by 60%.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958947472.png" alt="1713958948" class="img_ev3q"></p>
<p>Dmall is a digital retail solution provider that serves many supermarkets in various sizes, such as Wumart. Dmall once used a large number of scattered MySQL servers, which do not support scaling and incur high O&amp;M costs. The multitenancy capability of OceanBase Database enables database consolidation for Dmall, greatly reducing O&amp;M costs. OceanBase Database also achieves a compression ratio of 6:1 while delivering higher performance even in standalone mode.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958984052.png" alt="1713958985" class="img_ev3q"></p>
<p>Ctrip is one of the earliest customers of OceanBase Database Community Edition. Ctrip had a history database that used the sharding solution of MySQL Database, which did not support dynamic online scaling, failing to cope with the drastic data volume increase of the history database. Therefore, they migrated their history database to OceanBase Database. The native distributed database solution of OceanBase avoids database and table sharding, reduces the required storage space by 85%, and improves write performance several times.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713958998115.png" alt="1713958999" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ii-oceanbase-database-community-edition-in-real-time-ap-and-multi-model-scenarios"><strong>ii. OceanBase Database Community Edition in real-time AP and multi-model scenarios</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#ii-oceanbase-database-community-edition-in-real-time-ap-and-multi-model-scenarios" class="hash-link" aria-label="Direct link to ii-oceanbase-database-community-edition-in-real-time-ap-and-multi-model-scenarios" title="Direct link to ii-oceanbase-database-community-edition-in-real-time-ap-and-multi-model-scenarios">​</a></h3>
<p>Although OceanBase Database was initially designed to handle mission-critical core business scenarios, our developers also use OceanBase Database in real-time analytical processing (AP) and multi-model scenarios.</p>
<p>Kuayue Express once used the "HBase + Kafka + StarRocks" architecture for its analytics scenario. They developed a system called HBase CDC, which pulls data from HBase to Kafka and then synchronizes the data to StarRocks. This solution features high development costs and a complex link, which also results in a long data processing period. With OceanBase Database, Kuayue Express now needs only one system, reducing hardware costs by 50% while improving data processing efficiency by 50%.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959020294.png" alt="1713959021" class="img_ev3q"></p>
<p>Beike has a dictionary service that was once established on HBase, which is frequently criticized for two major issues:</p>
<p>○ Massive complex components due to its dependence on the Hadoop system</p>
<p>○ Lack of support for secondary indexes</p>
<p>In view of this, Beike replaced HBase with OBKV, which improves the query performance by 2 to 5 times and the write performance by 5 times with a simplified system complexity.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959057480.png" alt="1713959058" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iii-all-in-one-database-driven-by-developers"><strong>iii. All-in-one database driven by developers</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#iii-all-in-one-database-driven-by-developers" class="hash-link" aria-label="Direct link to iii-all-in-one-database-driven-by-developers" title="Direct link to iii-all-in-one-database-driven-by-developers">​</a></h3>
<p>Sometimes I wonder why developers would use a distributed database that was initially designed for mission-critical core business scenarios in real-time AP or multi-model scenarios as an all-in-one database. I believe the answer lies in the two initial design concepts of OceanBase Database.</p>
<p>○ Distributed architecture: The distributed architecture of OceanBase Database enables it to process massive data and support automatic scaling.</p>
<p>○ Log-structured merge-tree (LSM-tree)-based storage: This achieves a high compression ratio, enabling processing of massive data at a low cost.</p>
<p>With these capabilities, OceanBase Database is particularly suitable for scenarios involving massive data, including not only TP scenarios, but also AP and multi-model scenarios, which naturally involve large amounts of data.</p>
<p>Therefore, it is fair to say that it is the demand of developers and users that has driven OceanBase Database to grow from the early distributed TP system to the distributed AP system, and then into the present-day all-in-one database. With this integrated architecture, OceanBase Database will surely rise up to the future challenges posed by multi-model and AI scenarios, achieving lower IT costs for users.</p>
<p>What lies behind the all-in-one database is the integrated architecture, which includes not only the integrated storage engine, integrated transaction engine, and integrated SQL engine in the kernel, but also the multi-model engine built on the integrated architecture, and the capability to adapt to multiple infrastructures.</p>
<p>OceanBase Database is also a multi-cloud native all-in-one database, which can natively support both public and private clouds with different architectures in one system, including Huawei Cloud, Tencent Cloud, Alibaba Cloud, Amazon Web Services (AWS), Google Cloud Platform (GCP), and Azure. This means that developers can use OceanBase services in different clouds with the same experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ii-significance-of-integration-for-developers"><strong>II. Significance of integration for developers</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#ii-significance-of-integration-for-developers" class="hash-link" aria-label="Direct link to ii-significance-of-integration-for-developers" title="Direct link to ii-significance-of-integration-for-developers">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="i-transparent-deployment-in-standalone-and-distributed-modes"><strong>i. Transparent deployment in standalone and distributed modes</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#i-transparent-deployment-in-standalone-and-distributed-modes" class="hash-link" aria-label="Direct link to i-transparent-deployment-in-standalone-and-distributed-modes" title="Direct link to i-transparent-deployment-in-standalone-and-distributed-modes">​</a></h3>
<p>OceanBase Database supports an integrated architecture for standalone and distributed modes. The deployment is transparent to users. Today, the first question facing developers when choosing a database system is whether to choose a centralized or distributed one.</p>
<p>OceanBase Database resolves the dilemma by providing an integrated architecture that supports both standalone and distributed modes. This integrated architecture enables OceanBase Database to support smooth on-demand scaling and small-specification deployment, making OceanBase Database a stand-out choice for large enterprises, SMEs, and even start-ups. Moreover, OceanBase Database also supports three replicas based on Paxos and primary/standby synchronization, and achieves an RPO of 0 and a recovery time objective (RTO) of less than 8 seconds.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959350210.png" alt="1713959351" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ii-obkv-adding-a-query-api-rather-than-a-database"><strong>ii. OBKV: adding a query API rather than a database</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#ii-obkv-adding-a-query-api-rather-than-a-database" class="hash-link" aria-label="Direct link to ii-obkv-adding-a-query-api-rather-than-a-database" title="Direct link to ii-obkv-adding-a-query-api-rather-than-a-database">​</a></h3>
<p>SQL and non-SQL models are integrated to achieve multi-model integration. I believe that multi-model integration is not just about providing a new data model, but more about integrating different data models to combine their respective strengths.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959360450.png" alt="1713959361" class="img_ev3q"></p>
<p>Take HBase, which has been well-explored by many developers, as an example. The write interface of HBase is relatively simple, efficient, and easy to use. However, HBase does not support SQL syntax, and therefore its query interfaces have limited features and are inconvenient to use. With OBKV, we can write data to OceanBase Database in an HBase-compatible way and query data from OceanBase Database by using standard SQL syntaxes, giving full play to technical advantages of both SQL and NoSQL systems.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iii-htap--oltp-plus"><strong>iii. HTAP = OLTP Plus</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#iii-htap--oltp-plus" class="hash-link" aria-label="Direct link to iii-htap--oltp-plus" title="Direct link to iii-htap--oltp-plus">​</a></h3>
<p>Speaking of the integration of TP and AP systems, we often mention HTAP. As I have said in many occasions, HTAP is not omnipotent.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959393533.png" alt="1713959394" class="img_ev3q"></p>
<p>In most cases, HTAP is merely a plus version of online transaction processing (OLTP) that supports online analytical processing (OLAP) capabilities on the basis of OLTP. The following two deployment modes are supported:</p>
<p>(1) Based on the multi-replica distributed architecture of OceanBase Database, all replicas use the same storage architecture, either row-based storage or hybrid row-column storage, and the leader directly provides services. This deployment mode achieves zero data latency while ensuring data consistency, but provides only moderate support for AP capabilities due to the lack of columnar storage. Therefore, this deployment mode is suitable for "OLTP + lightweight OLAP" scenarios.</p>
<p>(2) The leader uses row-based storage or hybrid row-column storage, while one or multiple followers use columnar storage. This service mode incurs data latency between the leader and the followers, but can better support OLAP capabilities. Therefore, it is suitable for "OLTP + medium-load OLAP" scenarios.</p>
<p>To wrap up, HTAP is a solid option in scenarios involving hundreds of GB to hundreds of TB of data, but it is not omnipotent even with these two flexibly deployment modes. Many large companies with a larger data amount usually deploy separate TP and AP systems.</p>
<p>Take Haidilao as an example. Haidilao originally used PolarDB and PolarDB-X for OLTP and AnalyticDB for OLAP, and used Data Transmission Service (DTS) to synchronize data from PolarDB to AnalyticDB.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959410909.png" alt="1713959411" class="img_ev3q"></p>
<p>Haidilao often do promotions in holidays and need to make recommendations according to customer preferences in real time. The HTAP capabilities of OceanBase Database implement both TP and AP based on the same set of data, helping Haidilao reduce the total cost of ownership (TCO) by 35% and improving AP performance by 30%.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iii-use-tp--ap-integration-to-fuse-core-capabilities-of-distributed-tp-systems-into-ap-systems"><strong>III. Use TP &amp; AP integration to fuse core capabilities of distributed TP systems into AP systems</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#iii-use-tp--ap-integration-to-fuse-core-capabilities-of-distributed-tp-systems-into-ap-systems" class="hash-link" aria-label="Direct link to iii-use-tp--ap-integration-to-fuse-core-capabilities-of-distributed-tp-systems-into-ap-systems" title="Direct link to iii-use-tp--ap-integration-to-fuse-core-capabilities-of-distributed-tp-systems-into-ap-systems">​</a></h2>
<p>I've mentioned earlier that traditional HTAP is not omnipotent. Here is a new concept that I'd like to share with you: using TP &amp; AP integration to fuse core capabilities of distributed TP systems into AP systems.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959636626.png" alt="1713959637" class="img_ev3q"></p>
<p>What does it mean? Instead of providing TP and AP services with one system, we can directly integrate TP capabilities into an AP system to build a new real-time analytical database that is easier to use for developers.</p>
<p>We all know that traditional OLAP systems often provide strong large query capabilities, while AP systems feature robust ecological adaptation but do not support real-time writing due to the lack of support for row storage. Therefore, traditional AP systems do not support real-time point queries or real-time serving. Moreover, AP systems are no match for TP systems in terms of syntax compatibility and functionality. Regardless of their diversity, AP systems today are rarely applied in core business scenarios, and therefore fall short of adequate testing in terms of reliability and stability.</p>
<p>OceanBase Database offers sound distributed capabilities, high reliability, and high availability with an RPO of zero. It also provides favorable TP capabilities and supports real-time writing and table access by secondary index primary key for point queries, achieving dynamic serving in AP scenarios. It is also compatible with MySQL Database. Besides, OceanBase also provides a GUI-based O&amp;M tool called OceanBase Cloud Platform (OCP).</p>
<p>OceanBase combines these capabilities with traditional AP capabilities to offer you a new-generation real-time AP system. This system offers better realtimeness and allows you to directly perform both large queries and serving. It is compatible with MySQL Database and is easy to use. Moreover, you can directly use OceanBase control tools for integrated control.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iv-release-of-oceanbase-database-v430"><strong>IV. Release of OceanBase Database V4.3.0</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#iv-release-of-oceanbase-database-v430" class="hash-link" aria-label="Direct link to iv-release-of-oceanbase-database-v430" title="Direct link to iv-release-of-oceanbase-database-v430">​</a></h2>
<p>Today, I'm honored here to announce the official release of OceanBase Database V4.3.0. This version launches three core technological upgrades:</p>
<p>○ Columnar storage engine</p>
<p>○ Further strengthened TP &amp; AP integration</p>
<p>○ Near-petabyte-scale real-time analytical database that supports data sized [1TB, 1PB)</p>
<p>Let's dive into the core capabilities of OceanBase Database V4.3.0.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959734334.png" alt="1713959735" class="img_ev3q"></p>
<p>(1) Enhanced TP &amp; AP integration and OLTP capabilities</p>
<p>In KV scenarios, OceanBase Database V4.3.0 greatly outperforms V4.2.1, with 70% higher single-row reading and writing performance and 80% to 220% higher batch reading and writing performance. This version is also optimized in terms of SQL, transaction, and log features.</p>
<p>This version also comes with the fast tenant cloning feature. I believe you would love it. The feature allows you to clone a tenant to generate a snapshot before performing risky operations, so that you can quickly restore the tenant if these operations go wrong.</p>
<p>(2) Enhanced real-time AP capabilities</p>
<p>The new version supports bypass import, external tables, columnar storage, and dynamic conversion between row-based storage and columnar storage.</p>
<p>Many features useful in OLAP scenarios are also provided, such as materialized views, federated queries, window functions, common table expressions (CTEs), hierarchical queries, and operator pushdown.</p>
<p>The distributed computing engine is also significantly enhanced with a Massively Parallel Processing (MPP) architecture and supports the vectorized engine and auto DOP. Moreover, this version also enhances support for semi-structured data, such as JSON and geographic information system (GIS) data. OceanBase Database V4.3.0 is compatible with most mainstream streaming databases in the industry, such as Kafka and Flink.</p>
<p>(3) Improved OLAP performance</p>
<p>Compared with OceanBase Database V4.2.1, the new version offers 25% higher TPC-H 1 TB test performance, 111% higher TPC-DS 1 TB test performance, and six times higher bypass import performance. Some may argue that the 25% TPC-H performance increase is but a mild one. I must remind you here that OceanBase Database has topped the TPC-H benchmark test. So, it's a laudable climb from the top.</p>
<p>(4) Improved AP compatibility</p>
<p>(5) Greater ease of use</p>
<p>This version provides AP parameter templates and scenario-based AP documents, greatly improving the ease of use. We believe that the scenario-based documents can be a great help during your exploration of the new version.</p>
<p>Although OceanBase Database V4.3.0 is officially released today, articles about experiencing the new version are already available on the Internet. You are welcome to learn more about OceanBase Database V4.3.0 in our exhibition area and on the official website.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="i-benchmarking-based-on-analytical-loads-oceanbase-database-versus-top-notch-columnar-databases-in-wide-table-queries"><strong>i. Benchmarking based on analytical loads: OceanBase Database versus top-notch columnar databases in wide-table queries</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#i-benchmarking-based-on-analytical-loads-oceanbase-database-versus-top-notch-columnar-databases-in-wide-table-queries" class="hash-link" aria-label="Direct link to i-benchmarking-based-on-analytical-loads-oceanbase-database-versus-top-notch-columnar-databases-in-wide-table-queries" title="Direct link to i-benchmarking-based-on-analytical-loads-oceanbase-database-versus-top-notch-columnar-databases-in-wide-table-queries">​</a></h3>
<p>As a routine of OceanBase launch events, here comes the benchmarking part, which is also one of my favorite parts of this conference. Now we will do the analytical load-based benchmark tests together.</p>
<p>In fact, before this event, we've already run benchmark tests on OceanBase Database and some mainstream real-time analytical databases in the industry and compared the test results. We will use ClickBench, a standard-bearer benchmark for analytical databases in the industry proposed by ClickHouse (which also tops the ClickHouse benchmark rankings), to evaluate the performance of OceanBase Database and ClickHouse.</p>
<p>We have run a benchmark test on OceanBase Database V4.3.0 Beta and ClickHouse 23.11 last year. We later commercialized and evolved OceanBase Database V4.3.0 Beta into V4.3.0. ClickHouse also issued a new release, namely release 24.4, in April this year, which outperforms its predecessor 23.11. Fortunately, we have OceanBase Database V4.3.x Beta.</p>
<p>So today, we will have four systems for the test: OceanBase Database V4.3.0 and V4.3.x Beta, as well as ClickHouse 23.11 and 24.4, which are respectively the latest two versions of OceanBase and ClickHouse.</p>
<p>Now the benchmark test has started. As you know, ClickBench has 43 queries, respectively named Q0 to Q42. In the test, each query is executed 3 times, and the result of the execution that takes the shortest time is taken as the final result of the query.</p>
<p>The systems in the test are displayed either in green or red. A green background indicates that the system runs faster, while a red one indicates slower running. Now that the benchmark test is done, you can see that OceanBase Database V4.3.0 takes 14.5 seconds, ClickHouse 23.11 takes 14.8 seconds, OceanBase Database V4.3.x Beta 12.85 seconds, and ClickHouse 24.4 14.26 seconds. In summary, OceanBase Database V4.3.0 outperforms ClickHouse 23.11, but is outshined by ClickHouse 24.4, while OceanBase Database V4.3.x Beta surpasses all, including ClickHouse 24.4. They are in close tie though.</p>
<p>According to the test results, we can see that under the same hardware conditions, OceanBase Database V4.3.0 achieves a wide table query performance comparable with that of ClickHouse, which is best in class in the real-time analytical database industry.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959829606.png" alt="1713959830" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ii-aspiring-to-build-an-omnipotent-real-time-analytical-database-for-sub-petabyte-scale-scenarios"><strong>ii. Aspiring to build an omnipotent real-time analytical database for sub-petabyte-scale scenarios</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#ii-aspiring-to-build-an-omnipotent-real-time-analytical-database-for-sub-petabyte-scale-scenarios" class="hash-link" aria-label="Direct link to ii-aspiring-to-build-an-omnipotent-real-time-analytical-database-for-sub-petabyte-scale-scenarios" title="Direct link to ii-aspiring-to-build-an-omnipotent-real-time-analytical-database-for-sub-petabyte-scale-scenarios">​</a></h3>
<p>I've mentioned earlier that the all-in-one architecture of OceanBase Database enables it to tackle various scenarios such as TP, AP, multi-model, KV, and AI scenarios. It sounds as if OeanBase Database suits all purposes. Then what are the scenarios that OceanBase Database is truly suitable for? The scenarios can be classified into the following categories:</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959858594.png" alt="1713959859" class="img_ev3q"></p>
<p>(1) Express OLTP</p>
<p>Such scenarios generally involve simple read and write operations at high concurrency in the Internet industry. MySQL Database usually fits these scenarios.</p>
<p>(2) Complex OLTP</p>
<p>Such scenarios involve some complex queries, batch operations, and stored procedures in addition to simple read and write operations. These scenarios are often encountered in conventional industries for which commercial databases such as Oracle are well-suited.</p>
<p>(3) OBKV</p>
<p>Systems such as HBase and Redis are apt for these scenarios.</p>
<p>(4) HTAP</p>
<p>An HTAP system processes both OLTP and real-time AP loads. In my opinion, HTAP is applicable to scenarios involving hundreds of GB to hundreds of TB of data.</p>
<p>(5) Real-time AP scenarios with larger data amounts</p>
<p>The difference between real-time AP and HTAP is that the data source for HTAP is a system, while the data source for real-time AP is not only the TP system of OceanBase Database, but also may be other databases, Kafka or Flink instances, files, or storage systems. The real-time AP system will further extend the AP capabilities of OceanBase Database.</p>
<p>Real-time AP is suitable for scenarios with a data amount of 1 TB to 1 PB. A scenario with a data amount of more than 1 PB can be taken as a large enterprise scenario. Large enterprises, such as Alibaba and Tencent, have their own in-house data lakes or big data analysis systems, which fall out of the application scenarios of OceanBase Database.</p>
<p>We can build a lightweight real-time analytical database directly based on the real-time AP capabilities of OceanBase Database. This analytical database supports diverse data sources, real-time writes, batch writes, and some batch updates. After the data arrives at OceanBase Database, it will be processed in layers, first by the operational data store (ODS) layer, and then by the data warehouse detail (DWD), data warehouse summary (DWS), and application data service (ADS) layers in sequence.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959901104.png" alt="1713959902" class="img_ev3q"></p>
<p>The ODS layer stores raw data, and the real-time data warehouse usually uses columnstore tables. DWD and DWS process raw data in two layers, usually by using materialized views. Then, the ADS layer carries out serving. It uses row-based storage for simple point queries and table access by index primary key. However, when the data amount of each query is large, it uses columnar storage for serving.</p>
<p>In OceanBase Database V4.3.0, we can carry out both large queries on the data warehouse and serving at the same time in one system, providing users with better real-time capabilities. In addition, the enhanced compatibility with MySQL makes it easier to use for developers.</p>
<p>We aspire to forge the real-time AP system of OceanBase Database into an omnipotent real-time analytical database for sub-petabyte-scale scenarios.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959924580.png" alt="1713959925" class="img_ev3q"></p>
<p>First, it is suitable for scenarios with a data amount of 1 TB to 1 PB. It is designed for users with real-time demands, whereas users with pure offline analytics demands have many other options. OceanBase Database provides strong TP capabilities, supports real-time writing, and directly provides AP services through point queries. OceanBase Database also has sound MySQL compatibility and good distributed capabilities for high availability. Moreover, it also offers high stability, with basically no bugs.</p>
<p>Second, OceanBase Database provides exceptional real-time AP capabilities, and realizes columnar storage and vectorization. Notably, it has topped both the ClickBench and TPC-H benchmark rankings. I believe that the combination of these two capabilities will make OceanBase Database an excellent choice of real-time analytical database for sub-petabyte-scale scenarios.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iii-whats-next"><strong>iii. What's next</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#iii-whats-next" class="hash-link" aria-label="Direct link to iii-whats-next" title="Direct link to iii-whats-next">​</a></h3>
<p>We have a lot to do next. In the first quarter, we released OceanBase Database V4.3.0 in this developers conference. This version enhances the capabilities of columnar storage and the vectorized engine. In the months to come, we will continue to tap the potentials of OceanBase All-in-one, to improve its integration with and support for multi-model, search, and AI capabilities.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713959950394.png" alt="1713959951" class="img_ev3q"></p>
<p>In the second quarter, we will develop full-text indexing and JSON multi-value indexing capabilities and strengthen database search capabilities. In the third quarter, we will further support vector database capabilities by using components. With support for vector databases, you can directly develop your own large model applications based on OceanBase Database. In the fourth quarter, we will implement storage-compute separation capabilities based on Amazon Simple Storage Service (S3).</p>
<p>OceanBase Database has many users in public clouds. As we all know, storage and computing are separated in a public cloud. However, currently, OceanBase Database implements storage-compute separation based on expensive cloud disks of public clouds. With the object storage capability based on S3, we can greatly improve the cost performance of OceanBase Database.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="v-improved-ease-of-use"><strong>V. Improved ease of use</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#v-improved-ease-of-use" class="hash-link" aria-label="Direct link to v-improved-ease-of-use" title="Direct link to v-improved-ease-of-use">​</a></h2>
<p>Many developers speak to me highly of OceanBase Database in the following aspects:</p>
<p>The first is its powerful technological capabilities. We enjoy running benchmark tests in our launch events. Sometimes we run TPC-C benchmark, sometimes TPC-H or ClickBench, and other times ClickHouse. It's a bit like having your excellent child competing for top universities and showing off their achievements in your neighborhood. This is the core technological capabilities of OceanBase Database.</p>
<p>The second is that OceanBase Database realizes high O&amp;M efficiency for proficient developers or DBAs. One Alipay DBA can operate and maintain thousands of servers. However, you can fully explore the powerful features of OceanBase Database only after you gain profound knowledge about it.</p>
<p>Therefore, we have made a lot of effort to make OceanBase Database easier to use and get started with.</p>
<p>Next, let's take a look at some video clips from our users and developers concerning the ease of use of OceanBase Database.</p>
<p>We would like to extend our gratitude to Chunlei, Guangming, and Baishan. Thank you for your praise and encouragement. Your constructive comments are also highly appreciated. We will spare no efforts to meet your high expectations for OceanBase Database.</p>
<p>Speaking of ease of use, I often think of the technical books I have read. Such books are often titled something like "From Beginners to Experts", "Seven Days to Learn xxx", and "Learn a programming language in 21 days". That is why I named this presentation "OceanBase – From Beginners to Experts"</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960010018.png" alt="1713960011" class="img_ev3q"></p>
<p>The ease-of-use feature is helpful for the following two types of users:</p>
<p>The first type is beginners. These users are more concerned about how to quickly deploy OceanBase Database, whether a GUI or CLI tool is available for quickly performing benchmark tests and basic demo tests, and whether reference documents are available.</p>
<p>The other type is users who have been using OceanBase Database for a while. For these users, all their requirements can be summarized into one question: What do I do when something goes wrong? This seemingly simple question is hard to answer. A situation going wrong may be caused by various exceptions, such as common exceptions like server failures, network failures, and disk failures, or underlying issues like system suspension or jitter caused by unknown reasons. Therefore, experienced users tend to look for answers in the debug logs of OceanBase Database.</p>
<p>In the previous videos, we can see some of the most basic GUI-based features of OceanBase Database. OCP is quite a standout in the industry. Guangming even said that OCP is the best ecological tool that he has ever used throughout his career. I'm thrilled to hear that. The credit goes to our OCP team.</p>
<p>However, OceanBase Database still entails some drawbacks. For example, the quickstart tutorial needs to be optimized. Many users may find it difficult to come by the relevant documents when they install and deploy OceanBase Database. In addition, no effective tools are available for diagnosing some underlying issues such as jitters and system suspension. The debug logs of OceanBase Database are also inferior to those of Oracle Database in terms of observability and ease of use.</p>
<p>In fact, we've invested considerable efforts to make relevant improvements last year, though some expectations are yet to be fulfilled.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="i-ease-to-learn-lowering-the-barrier-for-getting-started"><strong>i. Ease to learn: lowering the barrier for getting started</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#i-ease-to-learn-lowering-the-barrier-for-getting-started" class="hash-link" aria-label="Direct link to i-ease-to-learn-lowering-the-barrier-for-getting-started" title="Direct link to i-ease-to-learn-lowering-the-barrier-for-getting-started">​</a></h3>
<p>We have put in a great deal of work to lower the barrier for novice users from the following aspects:</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960041671.png" alt="1713960042" class="img_ev3q"></p>
<p>(1) Installation and deployment</p>
<p>Chunlei has mentioned some issues related to installation and deployment in the video earlier. Last year, we achieved quick installation and deployment of OceanBase Database within two minutes by using OBD. However, OBD offers limited features. Though boasting rich and powerful features, OCP supports the installation of OceanBase Database only in an environment that meets specific hardware conditions. Neither of the two tools can fully meet the needs of developers.</p>
<p>In light of this, we combine OBD and OCP. You can use OBD to install OceanBase Database and then use OCP to run the database, so that you can tap the rich management and control capabilities of OCP after installation. This resolves the installation and deployment issues mentioned by Chunlei.</p>
<p>(2) Performance tests</p>
<p>OceanBase Database is renowned for its performance. Yet many developers told me that they must become OceanBase experts to bring out its full potential.</p>
<p>Therefore, we provide parameter templates based on scenarios, enabling developers to build OceanBase databases that can yield remarkable benchmark test results.</p>
<p>(3) Documentation</p>
<p>OceanBase documentation is voluminous. There are only slightly over 1,900 topics for OceanBase Database V2.x, and over 2,900 for V3.x, but over 3,900 for V4.x. Over 1,000 topics are added in each version upgrade.</p>
<p>Despite the substantial efforts invested into documentation optimization last year, there is still much room for improvement. We hope to receive more insights about documentation and ease of use from more developers like Baishan.</p>
<p>We position OceanBase Database as a globally popular database. To achieve this goal, we must deliver product documentation that meets world-class standards.</p>
<p>Besides documentation, the following two features can also be useful for developers:</p>
<p>One is online experience. It would be more constructive if we can experience first-hand the features described in the documentation. Therefore, we provide the online experience feature, which provides an environment for you to experience online the OceanBase knowledge described in the articles. With the online experience feature, you can copy an operation and check the effect directly in the cloud environment. We also have a documentation area here. You are welcome to try it out.</p>
<p>The other is the knowledge base. We enhanced the OceanBase knowledge base last year and added more than 1000 cases. These cases are based on many years' experience of OceanBase and Ant Group DBAs in mining and solving problems in customer scenarios. We hope it can be helpful for developers.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ii-ease-of-diagnosis-improved-diagnostic-capabilities"><strong>ii. Ease of diagnosis: improved diagnostic capabilities</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#ii-ease-of-diagnosis-improved-diagnostic-capabilities" class="hash-link" aria-label="Direct link to ii-ease-of-diagnosis-improved-diagnostic-capabilities" title="Direct link to ii-ease-of-diagnosis-improved-diagnostic-capabilities">​</a></h3>
<p>We have also further improved the diagnostic capabilities of OceanBase Database.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960095220.png" alt="1713960096" class="img_ev3q"></p>
<p>OceanBase Database excels in handling simple exceptions based on OCP, such as some simple network failures, disk failures, and simple compaction issues. This is because OCP can detect the causes for such exceptions. However, as for deep-seated issues whose resolution requires profound understanding of OceanBase Database, OCP is found inadequate. Therefore, we provide the following tools as a complement:</p>
<p>(1) Active Session History (ASH): the perf-like tool of OceanBase Database</p>
<p>We all know the perf tool of Linux. When something goes wrong, we turn to perf to find the cause.</p>
<p>Last year, we developed a tool called ASH, an OceanBase version of perf. You can locate causes of issues by referring to ASH reports. Seemingly easy, developing ASH was actually very challenging for us.</p>
<p>We've set up a dedicated performance diagnostics team made up of many senior OceanBase kernel developers. They spent over a year developing a time model that ensures time accuracy for all backend tasks, locks, wait events, queue entry, queue exit, and so on.</p>
<p>(2) OceanBase Autonomy Service (OAS): for root cause analysis</p>
<p>OAS incorporates rules that are formulated based on years of customer service experience of Ant Group and OceanBase. After you locate the issue based on ASH reports, you can use OAS to identify the root cause.</p>
<p>(3) <code>alert.log</code></p>
<p>OceanBase Database has long been criticized for its debug logs, which contain excess content, making it difficult for developers to find useful information.</p>
<p>This year, we launched the <code>alert.log</code> file based on suggestions from developers. This file is an extract from the debug logs, and records the common system events that occur during the operation of OceanBase Database. Developers can resolve 80% of the issues that they encounter by referring to <code>alert.log</code>, without the need to dig through the long-winded <code>observer.log</code> file.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iii-on-demand-use-of-serverless-instances-with-a-1-month-free-trial"><strong>iii. On-demand use of serverless instances, with a 1-month free trial</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#iii-on-demand-use-of-serverless-instances-with-a-1-month-free-trial" class="hash-link" aria-label="Direct link to iii-on-demand-use-of-serverless-instances-with-a-1-month-free-trial" title="Direct link to iii-on-demand-use-of-serverless-instances-with-a-1-month-free-trial">​</a></h3>
<p>The concept of "serverless" is intrinsically linked with cloud native. Compared with common instances, serverless instances support more flexible scaling methods and full on-demand use, making them a cost-effective choice for developers.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960146102.png" alt="1713960147" class="img_ev3q"></p>
<p>OceanBase Database serverless instances are now supported in ApsaraDB for OceanBase. A one-month free trial is provided for serverless instances with a specification of 1C4G on Alibaba Cloud and Huawei Cloud. We have a free trial demo here in the exhibition area. I was told that it is so popular that the quota is used up. Don't worry. We are applying for more quota.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vi-a-more-open-technology-ecosystem"><strong>VI. A more open technology ecosystem</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#vi-a-more-open-technology-ecosystem" class="hash-link" aria-label="Direct link to vi-a-more-open-technology-ecosystem" title="Direct link to vi-a-more-open-technology-ecosystem">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="i-smooth-integration-of-binlog-service-with-over-20-downstream-services"><strong>i. Smooth integration of binlog service with over 20 downstream services</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#i-smooth-integration-of-binlog-service-with-over-20-downstream-services" class="hash-link" aria-label="Direct link to i-smooth-integration-of-binlog-service-with-over-20-downstream-services" title="Direct link to i-smooth-integration-of-binlog-service-with-over-20-downstream-services">​</a></h3>
<p>Last year, we also developed a useful feature, a MySQL-compatible binlog service, which has been integrated with more than 20 downstream services, including some MySQL subscription tools and binlog-based cloud services.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960190610.png" alt="1713960191" class="img_ev3q"></p>
<p>I'd like to share some untold stories behind this feature. The OceanBase product R&amp;D department will present a "Breakthrough Award" at the end of each year. It's the top award in our department. The final candidates of the award last year were the columnar storage project team and the binlog project team.</p>
<p>Well, as it turned out, the binlog project team won the award. I am glad that our department leaders voted for the binlog project team that is dedicated to improve ease of use, instead of the columnar storage project team that is set out to enhance core product capabilities. This is a testament that our production and research team has realized that improved ease of use means more to developers than modest performance enhancement.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ii-oceanbase-landscape-from-basic-ecological-adaptation-to-open-technology-ecosystem"><strong>ii. OceanBase landscape: from basic ecological adaptation to open technology ecosystem</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#ii-oceanbase-landscape-from-basic-ecological-adaptation-to-open-technology-ecosystem" class="hash-link" aria-label="Direct link to ii-oceanbase-landscape-from-basic-ecological-adaptation-to-open-technology-ecosystem" title="Direct link to ii-oceanbase-landscape-from-basic-ecological-adaptation-to-open-technology-ecosystem">​</a></h3>
<p>This is the landscape of OceanBase ecological tools.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960205995.png" alt="1713960206" class="img_ev3q"></p>
<p>OceanBase ecological tools have gone through two main stages in their development.</p>
<p>The first stage is ecological adaptation, including the adaption of ecological tools to the OceanBase Database kernel and adaption of OceanBase Database as a database ecosystem to other database ecosystems, such as Kubernetes and big data.</p>
<p>The second stage is joint construction of the ecosystem based on open APIs. At present, more than 750 mainstream products have joined the OceanBase ecosystem, and joined forces with OceanBase to build the open ecosystem.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iii-sustained-efforts-to-lower-entry-barriers-for-developers-based-on-open-source"><strong>iii. Sustained efforts to lower entry barriers for developers based on open source</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#iii-sustained-efforts-to-lower-entry-barriers-for-developers-based-on-open-source" class="hash-link" aria-label="Direct link to iii-sustained-efforts-to-lower-entry-barriers-for-developers-based-on-open-source" title="Direct link to iii-sustained-efforts-to-lower-entry-barriers-for-developers-based-on-open-source">​</a></h3>
<p>Finally, I'd like talk about the open source community of OceanBase.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960234174.png" alt="1713960235" class="img_ev3q"></p>
<p>The OceanBase open source community was originally positioned as a "responsive" community where user feedbacks will be responded in a timely manner. Now we have upgrade the community to be an interactive one.</p>
<p>I've always believed that open source is not just about opening up and sharing some source code of products or technologies, but more about the open source community being a bridge that brings together people interested in a certain product. This is one of the key insights I gained last year.</p>
<p>Gladly, our user organization OUG finally went on track last year. We've held a series of OUG city visit and enterprise visit events in concert with a bunch of enterprises such as 58, Zhihu, and Vivo in the open source community.</p>
<p>Many developers have shared their thoughts in the open source community. More than 118 developers opened their blog accounts and published more than 1,000 technical blogs. The community also boasts an impressive collection of co-developed open source projects, including six warehouses containing over 50,000 code lines built jointly by OceanBase and other companies or developers.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vii-huge-kudos-to-developers-who-built-a-bridge-for-communication-with-inspired-initiatives"><strong>VII. Huge kudos to developers, who built a bridge for communication with inspired initiatives</strong><a href="https://powerfooi.github.io/docs-playground/blog/all-in-one#vii-huge-kudos-to-developers-who-built-a-bridge-for-communication-with-inspired-initiatives" class="hash-link" aria-label="Direct link to vii-huge-kudos-to-developers-who-built-a-bridge-for-communication-with-inspired-initiatives" title="Direct link to vii-huge-kudos-to-developers-who-built-a-bridge-for-communication-with-inspired-initiatives">​</a></h2>
<p>Our special thanks go to the 108 developers entitled "Star of the Month". Your active participation has made our community a better place to learn about OceanBase. We also highly appreciate the efforts of the application developers and 315 OceanBase contributors for jointly building the OceanBase ecosystem and making the open source endeavor more fruitful.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960304441.png" alt="1713960305" class="img_ev3q"></p>
<p>Last but not least, I'd like to share with you a project case from the OceanBase community. It is an initiative made by a developer to build a vector engine plug-in to integrate SQL and AI in OceanBase Database.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713960316156.png" alt="1713960317" class="img_ev3q"></p>
<p>Though OceanBase Database currently does not support vector databases, he still spent months in writing a vector engine plug-in based on the open source code of OceanBase Database. He also built a personal knowledge base based on the vector engine plug-in that he wrote. This knowledge base supports natural language retrieval.</p>
<p>This initiative is fascinating. We look forward to more initiatives like this coming up in the OceanBase community. We sincerely hope that our open source community will become a warm haven where people can have fun and make friends.</p>
<p>That's all for my sharing today. Look forward to seeing you again at the 2024 Release Conference.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[TP to AP]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/tp-to-ap</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/tp-to-ap</guid>
            <pubDate>Mon, 03 Jun 2024 12:18:03 GMT</pubDate>
            <description><![CDATA[On March 25, 2023, we held the first "OceanBase Developer Conference" to explore cutting-edge database trends such as the standalone distributed architecture, cloud native architecture, and hybrid transaction/analytical processing (HTAP), share new product roadmaps, and communicate about scenario exploration and best practices with developers. In the "Product Technology Session", Senior Technical Expert Zhu Tao from OceanBase gave a presentation on the topic "From TP to AP: Exploration and Practices of the OceanBase Database SQL Engine". This blog post is compiled based on the presentation.]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>On March 25, 2023, we held the first <strong>"OceanBase Developer Conference"</strong> to explore cutting-edge database trends such as the standalone distributed architecture, cloud native architecture, and hybrid transaction/analytical processing (HTAP), share new product roadmaps, and communicate about scenario exploration and best practices with developers. In the <strong>"Product Technology Session"</strong>, Senior Technical Expert Zhu Tao from OceanBase gave a presentation on the topic <strong>"From TP to AP: Exploration and Practices of the OceanBase Database SQL Engine"</strong>. This blog post is compiled based on the presentation.</p>
</blockquote>
<p>First, what is the OceanBase Database SQL engine and what does it do? Second, OceanBase Database was first designed to serve internal businesses of Ant Group. What have we done to make SQL execution faster in Internet TP scenarios for the database to better serve such scenarios?</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722859762.png" alt="1684722861" class="img_ev3q"></p>
<p>After that, OceanBase Database was commercialized to gradually serve some external customers in fields such as finance, securities, telecom operators, and insurance. At that time, we noticed that external customers used SQL queries in a quite different way from that inside Ant Group. This posed a new challenge in SQL execution and optimization in our product. Confronting new business scenarios and SQL scenarios, what have we done?</p>
<p>Finally, as the TP capabilities of OceanBase Database were constantly enhanced and optimized and its execution capabilities were accumulated, the database became AP-capable. What efforts and optimizations have we made for AP scenarios?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="01-overview-of-the-oceanbase-database-sql-engine"><strong>01. Overview of the OceanBase Database SQL engine</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#01-overview-of-the-oceanbase-database-sql-engine" class="hash-link" aria-label="Direct link to 01-overview-of-the-oceanbase-database-sql-engine" title="Direct link to 01-overview-of-the-oceanbase-database-sql-engine">​</a></h2>
<p>The following figure shows the overall framework of the OceanBase Database SQL engine. After a query is initiated in OceanBase Database, it first enters into the parser, a module where the kernel figures out the purpose and requirement of the query.</p>
<p>Then, the query enters into the optimizer, which will select the best among a variety of implementation methods for the executor.</p>
<p>The executor contains all details for executing the method. It will faithfully execute the query based on the plan recommended by the optimizer and return the result to the user.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722875796.png" alt="1684722877" class="img_ev3q"></p>
<p>Here is an example for you to understand the process:</p>
<p>Assume that my requirement is to go on a business trip from Shanghai to Beijing to attend OceanBase Developer Conference the next day. What will the optimizer do?</p>
<p>There are two choices to travel from Shanghai to Beijing, by high-speed rail or airplane. After arriving at Beijing, I can take subway or taxi from the airport hub to the hotel. Similarly, I can take subway or taxi from my home to the airport hub in Shanghai. A number of execution plans will be generated for my requirement. The optimizer will evaluate the execution plans to find out the optimal one based on a cost estimation system.</p>
<p>As for my business trip, time consumption is the main factor to consider. Specifically, when I leave for the airport hub in Shanghai, taxi is a more comfortable choice but the time taken is uncontrollable due to the traffic jam during busy hours. Therefore, the optimizer chooses subway for this part. Generally, flying to Beijing is faster than taking high-speed rail, so the optimizer chooses the former. I may arrive at Beijing late at night. Theoretically, I can take subway from the airport hub to the hotel, but I may have missed the last train by then. Therefore, the optimizer chooses taxi for this part. For the entire trip, the optimizer generates an optimal plan as follows: subway from home to the airport hub in Shanghai, airplane from Shanghai to Beijing, and taxi from the airport hub in Beijing to the hotel.</p>
<p>Two key capabilities of the optimizer are required during this process:</p>
<p>First, the capability in plan enumeration. The optimizer needs to enumerate a variety of different plans, which are the "plan space" for optimization. The more plans, the higher probability to find a quick execution strategy.</p>
<p>Second, the capability in accurately selecting the optimal plan. The optimizer needs to single out the optimal plan based on an accurate cost model.</p>
<p>What is also important is that the executor will faithfully execute the selected execution plan. In this example, the executor has to consider all the details, including buying subway tickets, waiting for the subway, taking the subway, checking in for the flight, taking the flight, and landing at the destination. What are the key points in execution?</p>
<p>First, good implementation. Each part of the trip must be efficient. As the time taken in each part is shortened, the entire trip will be faster.</p>
<p>Second, design and production of various transport tools. For example, subways, airplanes, or more efficient and convenient transport tools need to be designed and produced for the executor to choose, which enriches the execution modes.</p>
<p>So, what are our challenges in actual business scenarios?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="02-speed-up-tp-sql-queries-in-internet-scenarios"><strong>02. Speed up TP SQL queries in Internet scenarios</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#02-speed-up-tp-sql-queries-in-internet-scenarios" class="hash-link" aria-label="Direct link to 02-speed-up-tp-sql-queries-in-internet-scenarios" title="Direct link to 02-speed-up-tp-sql-queries-in-internet-scenarios">​</a></h2>
<p>First, I want to share with you an Internet scenario (a TP scenario inside Ant Group) to illustrate the challenges facing us.</p>
<p>I have been serving OceanBase and observing the business model of Ant Group for years. I notice that most Internet SQL queries on databases are single-table short queries. For a single-table short query, the only key point is to accurately select an index.</p>
<p>For example, for a short query that needs to read 100 rows, an appropriate index can obtain the query result by reading over 100 rows. However, an inappropriate index may need to read 10,000 rows to obtain the query result, which is unacceptable. Assume that the system can read a maximum of 2 million rows per second. If the system can obtain the query result by reading 100 rows, the theoretical queries per second (QPS) is 2,000,000/100. If the system needs to read 10,000 rows to obtain the query result, the theoretical QPS is 2,000,000/10,000, which is much lower. The optimization for single-table short queries seems simple but is actually difficult.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722892590.png" alt="1684722894" class="img_ev3q"></p>
<p>The preceding figure shows two cases. The first case is an actual scenario inside Ant Group. The table in this case contains more than 30 indexes. In this case, when I query data from this table, there may be more than 30 execution plans. It is difficult to find an appropriate index.</p>
<p>The second case shows two single-table queries whose predicate or SQL syntax is more complex. The first query does not use an AND condition but an OR predicate on two columns. Both of the columns may have an index. However, if no optimization is made for this query, no index can be used.</p>
<p>The second query is more complex. After filtering, the filter conditions and filtering performance may be poor and a large number of rows may be retrieved. However, to ensure that a large amount of data is retrieved, the data will be paginated and sorted by the <code>gmt_create</code> field, and the first 20 rows will be displayed. To optimize this query, the best choice is to push down the WHERE, ORDER BY, and LIMIT operators to an index, to scan 20 rows from a specific row and then return the result.</p>
<p>What can we do for the two scenarios from the O&amp;M perspective? You can bind each SQL query with an index. If the optimizer cannot select an appropriate index, select it manually.</p>
<p>For the second case, it is not easy to use hints. To accelerate the execution of these queries, you may need to split the first query into two queries combined by the UNION operator and execute the two queries by using different indexes. For the second query, you also need to split the STATUS IN condition into two queries, obtain the first 20 rows sorted by the <code>gmt_create</code> field respectively, merge the two result sets, and return the first 20 rows in the final result set. SQL query rewrite is not easy, especially from the O&amp;M perspective. Database personnel will receive complaints if they cannot handle the issue and kick it to business personnel.</p>
<p>In OceanBase Database, an appropriate index is automatically selected in most scenarios. For a single query, many indexes are totally irrelevant. For the query in the first case, OceanBase Database will prune irrelevant indexes to decrease the number of indexes from 30 to 5, and then find an appropriate index based on cost estimation.</p>
<p>For queries in the second case, the kernel optimizer of OceanBase Database provides a rewrite module to accurately translate the queries. It splits the OR condition in the first query and ORDER BY ... LIMIT in the second query into conditions in queries combined by the UNION operator.</p>
<p>However, the optimizer may still make a wrong choice in index selection. The optimizer selects an index based on statistics or historical data. If the data is not real, the selected index may be inappropriate. To address this issue, OceanBase Database provides an automatic eviction strategy. If an execution plan of an SQL query has been used multiple times but the execution performance is not as expected, OceanBase Database will evict this execution plan and generate a new one.</p>
<p>Internet SQL queries are relatively simple and can be optimized at the business layer. This is not the focus of my presentation today. Next, let's see what SQL queries are like when OceanBase Database serves external customers such as insurance and telecom operator customers.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="03-speed-up-tp-sql-queries-in-conventional-business-systems"><strong>03. Speed up TP SQL queries in conventional business systems</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#03-speed-up-tp-sql-queries-in-conventional-business-systems" class="hash-link" aria-label="Direct link to 03-speed-up-tp-sql-queries-in-conventional-business-systems" title="Direct link to 03-speed-up-tp-sql-queries-in-conventional-business-systems">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multi-table-outer-joins-the-join-order-is-essential"><strong>Multi-table (outer) joins: the join order is essential</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#multi-table-outer-joins-the-join-order-is-essential" class="hash-link" aria-label="Direct link to multi-table-outer-joins-the-join-order-is-essential" title="Direct link to multi-table-outer-joins-the-join-order-is-essential">​</a></h3>
<p>The first scenario I want to share is a join scenario. In Internet scenarios, SQL queries are usually manually restricted to single-table queries. In most industrial business systems, SQL queries are not restricted. In such a business system, an SQL query may join a large number of tables to get a small result set. I have encountered a complex scenario where an SQL query joins 17 tables. To improve the performance of such a multi-table outer join, selecting an appropriate index is far from enough. An appropriate join order is also a must.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722909399.png" alt="1684722911" class="img_ev3q"></p>
<p>What is an appropriate join order?</p>
<p>In the example shown in the preceding figure, four tables T1, T2, T3, and T4 are joined. Among them, T2 is a large table and others are small tables. According to the join order specified in the query, T1 is joined with T2 first and then with T3 and T4. Three of the joins are performed between a small table and a large table, resulting in a high overhead. To simplify the join query, allow T1 to join with the small tables first and then with the large table T2 to achieve higher performance.</p>
<p>From the O&amp;M side, the SQL query needs to be rewritten to manually adjust the write sequence of the outer join. It is difficult to rewrite the query from the business side because you have to determine which are large tables, which joins need to be moved backward, and which joins need to be moved forward. The whole process is complex, let alone that 17 tables are involved.</p>
<p>Can hints be used to enable the optimizer to generate such an execution plan with a more appropriate join order? It is uncertain. Many database systems support changing the order of inner joins but do not support such change for outer joins. This is because the behavior of outer joins is more complex, making them unqualified for order change in many scenarios. The optimizers of many databases are incapable of generating an execution plan shown on the right side of the preceding figure, even though hints are used to instruct the optimizers to do so.</p>
<p>OceanBase Database provides a complete set of join enumeration algorithms for adjusting the join order of inner joins and outer joins. It can automatically adjust the join order of outer joins, anti-joins, and semi-joins, or convert an outer join into an inner join or anti-join.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ubiquitous-subqueries"><strong>Ubiquitous subqueries</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#ubiquitous-subqueries" class="hash-link" aria-label="Direct link to ubiquitous-subqueries" title="Direct link to ubiquitous-subqueries">​</a></h3>
<p>The second scenario is of subqueries, which are interesting. Business personnel like to write subqueries because their semantics are intuitive.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722923374.png" alt="1684722925" class="img_ev3q"></p>
<p>In external business systems, the usage mode of subqueries is more complex, for example, subqueries appear in unusual positions. Subqueries commonly appear in a FROM or WHERE clause. However, in Case 1 in the preceding figure, a subquery is used as the right operand in an assignment. In other words, the value of the left operand equals the result of the subquery. In Case 2, a subquery is used in a WHERE clause. It is not directly used as the root predicate but nested in an OR condition. If it is a root predicate, the EXISTS subquery will be converted into a semi-join for optimization in many databases. Since it is nested in an OR condition in this case, it cannot be optimized. Case 3 is more complex. Many subqueries are used in projected items. It is simplified but still has six subqueries.</p>
<p>What can the business side do to address the issue of slow queries?</p>
<p>The answer is also to rewrite the queries. Generally, the semantics of a subquery are similar to those of a join, so a subquery can be rewritten into a join. However, it is difficult for business personnel to correctly rewrite a subquery into a join because the two still have slight differences in semantics. An error may easily occur.</p>
<p>The rewrite module of OceanBase Database provides a wide range of subquery optimization strategies. It can rewrite any subquery that is not nested in a deep structure into a join, which can then be optimized by using different join enumeration algorithms.</p>
<p>Another quite interesting point of Case 3 is that the S1, S2, and S3 subqueries are similar in structure. They read the same table by using the same WHERE condition. The only difference is the function used for calculating the projected item. OceanBase Database can rewrite these subqueries into a join to combine the three subqueries as one to reduce the calculations by 2/3, thereby achieving high performance.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="04-speed-up-ap-sql-queries"><strong>04. Speed up AP SQL queries</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#04-speed-up-ap-sql-queries" class="hash-link" aria-label="Direct link to 04-speed-up-ap-sql-queries" title="Direct link to 04-speed-up-ap-sql-queries">​</a></h2>
<p>As OceanBase Database is constantly optimized to accommodate different TP scenarios, we have accumulated a lot of experience in optimizing and executing TP queries. As for the kernel, AP and TP have no substantial differences. For example, multi-table joins in TP scenarios also appear in AP scenarios, and join enumeration for optimizing multi-table joins in TP scenarios is also applicable to AP scenarios. Based on our accumulated experience, we can now probe and practice the optimization in AP scenarios.</p>
<p>Here are the topics we are going to talk about next:</p>
<ul>
<li>What are SQL queries like in AP scenarios?</li>
<li>What are the challenges?</li>
<li>What targeted optimizations have we made for AP scenarios?</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="data-skew-and-load-skew-advocate-collaboration-and-avoid-slacking-off"><strong>Data skew and load skew: advocate collaboration and avoid slacking off</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#data-skew-and-load-skew-advocate-collaboration-and-avoid-slacking-off" class="hash-link" aria-label="Direct link to data-skew-and-load-skew-advocate-collaboration-and-avoid-slacking-off" title="Direct link to data-skew-and-load-skew-advocate-collaboration-and-avoid-slacking-off">​</a></h3>
<p>I want to share with you a typical AP scenario.</p>
<p>What are the characteristics of an AP SQL query? An AP SQL query usually involves a large amount of data to read and massive calculations. The most intuitive solution is to use multiple threads for parallel execution. If one thread needs 1 hour to execute the query, can 10 threads take only 6 minutes to execute the query? If each thread does their own job, multi-thread parallel execution can indeed achieve linear efficiency. However, this is impossible in practice. In the case of data skew or load skew, if only one thread is fully devoted and the other nine threads slack off, it will still take 1 hour to execute the query.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722941017.png" alt="1684722942" class="img_ev3q"></p>
<p>Here is an actual case of data skew in a telecom operator. This is a large table with dozens of partitions. A large account that owns 90% of the total data is located in a single partition. Here is the result set, in which a row contains more than 23 million records. To measure the number of distinct values in a specific field of each partition, I can use multiple threads, with each thread calculating the results in specific partitions, and then summarize the results. For partitions with small amounts of data, the threads can easily complete the calculations and report the results. The thread responsible for the partition with a large amount of data needs to take a long time in calculations. Other threads have to wait for this thread to complete calculations. In such a scenario, parallel execution cannot gain expected benefits because some threads slack off due to unbalanced load.</p>
<p>To resolve this issue from the O&amp;M perspective, we can adjust the partitioning mode and rewrite the query, which is theoretically feasible. However, the specific implementation method varies based on scenarios, making this strategy infeasible. To effectively improve the query performance, we need to optimize the parallel execution algorithm in the kernel for data skew and load skew scenarios, so as to evenly distribute fine-grained calculations to each thread to leverage the capabilities of each thread.</p>
<p>OceanBase Database is also optimized for scenarios such as table scan, joins, window function-based calculations, as well as data skew and load skew after parallel execution of data add, delete, and modify operations. After that, more threads can be added for parallel execution to accelerate such calculation tasks.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="large-table-aggregation-a-smart-execution-engine"><strong>Large table aggregation: a smart execution engine</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#large-table-aggregation-a-smart-execution-engine" class="hash-link" aria-label="Direct link to large-table-aggregation-a-smart-execution-engine" title="Direct link to large-table-aggregation-a-smart-execution-engine">​</a></h3>
<p>The following figure shows a large table aggregation scenario, which is common in business. For example, we usually need to scan a large table and aggregate the data to report to the boss on today's performance.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722949942.png" alt="1684722951" class="img_ev3q"></p>
<p>Generally, in a large table aggregation scenario, the table contains a huge amount of data. A common optimization method is pre-aggregation. Specifically, the system splits the data in the large table into multiple pieces and arranges different threads to group and aggregate the data to obtain partial aggregation results. Then, the threads exchange their data and hand over data in the same group to a specific thread. The threads summarize the data to obtain and report the final results. This is a typical optimization method.</p>
<p>What are the benefits? Assume that a large table contains 1 billion rows and that the data can be divided into 100 groups. Theoretically, the initial grouping and aggregation results of each thread will not exceed 100 rows, and the cost of summarizing the 100 groups will not be high. Therefore, this optimization method is commonly used in many database systems. However, this optimization method still has a drawback. If most data is not duplicate, grouping is not effective. For example, 1 billion rows may only change to 0.9 billion rows after grouping. In this scenario, if grouping is performed for optimization, the performance may be compromised.</p>
<p>What can we do?</p>
<p>On the O&amp;M side, we can choose whether to instruct the optimizer to perform pushdown.</p>
<p>On the kernel side, the optimizer automatically determines whether to perform optimization based on statistics. This practice is common but not very effective. In a typical data skew scenario, pushdown may be required by large accounts but not by small accounts. But the preceding strategy is global, that is, the optimizer will perform pushdown for all or none of the accounts.</p>
<p>To resolve this issue, OceanBase Database does not allow the optimizer to make a decision on pushdown, but makes the executor smarter. OceanBase Database allows the executor to determine whether to perform pre-aggregation based on the actual situation during calculations in all scenarios such as grouping, deduplication, and window function-based calculations.</p>
<p>The next scenario is about batch statement execution.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="batch-statement-execution-in-an-ap-task-reads-and-writes-in-parallel"><strong>Batch statement execution in an AP task: reads and writes in parallel</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#batch-statement-execution-in-an-ap-task-reads-and-writes-in-parallel" class="hash-link" aria-label="Direct link to batch-statement-execution-in-an-ap-task-reads-and-writes-in-parallel" title="Direct link to batch-statement-execution-in-an-ap-task-reads-and-writes-in-parallel">​</a></h3>
<p>In most scenarios, an AP task contains more than one SQL statement. The first statement operates data and generates a result set, which is a temporary table, for the second statement. The second statement calculates and analyzes the data in the temporary result set and generates another temporary result set for the third statement. The third statement reads data from the second temporary result set, aggregates the data for analysis, and writes the analysis results to the final result set.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722977912.png" alt="1684722979" class="img_ev3q"></p>
<p>The preceding figure shows a simplified case that involves three queries: Q1, Q2, and Q3. The first challenge is that a huge amount of data is operated during the entire process. Large amounts of data is read, calculated, and written.</p>
<p>The second challenge is about statistics. The tables that Q1 depends on have statistics. Therefore, an appropriate execution plan can be selected for this query based on statistics. Q2 and Q3 need to use the temporary table generated by its previous query. A temporary table has no statistics. As a result, an inappropriate execution plan with low performance will be probably generated for Q2 and Q3 due to the absence of statistics on temporary tables TMP2 and TMP3.</p>
<p>To cope with the first challenge, OceanBase Database supports parallel write since V3.x. Multiple threads can write data to the database in parallel.</p>
<p>For the second challenge, a solution from the O&amp;M perspective is to add statements for statistics collection in a batch execution task. However, this is unimaginable for a large table. Statistics collection is time-consuming and may increase the total execution time of the task. OceanBase Database V4.x supports online statistics collection. In this case, statistics collection starts as early as when Q1 inserts data into TMP1. After data is successfully inserted, statistics on TMP1 have been collected. Then, Q2 can be optimized based on the statistics. Similarly, statistics on TMP2 starts when Q2 inserts data into TMP2.</p>
<p>The last scenario is not an actual business scenario but an insight into the complexity of optimization from the kernel perspective. Therefore, it will be a little abstract.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="complexity-in-distributed-and-parallel-queries"><strong>Complexity in distributed and parallel queries</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#complexity-in-distributed-and-parallel-queries" class="hash-link" aria-label="Direct link to complexity-in-distributed-and-parallel-queries" title="Direct link to complexity-in-distributed-and-parallel-queries">​</a></h3>
<p>In some AP tasks, tables are usually large partitioned tables on multiple servers, and parallel execution is enabled, making the queries distributed and parallel ones. In this case, the optimization is not about optimizing serial plans in a standalone database but parallel plans in a distributed scenario. The difference is brought by data partitioning. Partitioning means an explosive increase in the number of execution plans.</p>
<p>For example, 10 execution plans are generated in a serial scenario. However in a distributed scenario, 100 execution plans may be generated considering parallel execution. It is difficult to select the best one among 100 plans. In many databases or conventional research, a compromise strategy will be used for optimization in such a scenario. Specifically, the system will generate the optimal serial plan based on the assumption that all tables are non-partitioned tables located on the same server, and then convert the serial plan into a distributed and parallel plan.</p>
<p>If we do so, what will happen?</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722987752.png" alt="1684722989" class="img_ev3q"></p>
<p>Let's see an actual case in a banking business scenario. In a two-table join, the referenced tables are both T1 and a subquery is used for grouping and aggregation for T1. If T1 is a non-partitioned table, the query performance is stable, with a response time (RT) of 2s. If T1 is a partitioned table, slow queries with an RT of 15s will occasionally occur. Why is that?</p>
<p>Analytics show that in a serial scenario (the first chart on the right), the two optimal execution plans respectively perform a merge join or nested loop join on the two tables. The performance of the two plans is very close, with an RT of about 2s. The performance of the merge join is slightly higher. After T1 is partitioned, a partition-level iteration will be incorporated into execution plans. Then, the RT of the merge join is still about 2s. For the nested loop join, the number of executions of the right branch is subject to the number of rows in the left-side table. Since the left-side table in the join contains 20,000 rows, data in the right-side table needs to be calculated for 20,000 times. This means the partition-level iteration is amplified by 20,000 times, increasing the RT to 15s.</p>
<p>We find that conventional optimization is not suitable for distributed scenarios. OceanBase Database V4.x provides a new distributed plan enumeration mechanism. The optimizer will not select the optimal serial plan, but generate all possible distributed execution plans and select the best one for the executor.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="05-summary"><strong>05. Summary</strong><a href="https://powerfooi.github.io/docs-playground/blog/tp-to-ap#05-summary" class="hash-link" aria-label="Direct link to 05-summary" title="Direct link to 05-summary">​</a></h2>
<p>The development of the SQL engine is accompanied by business development. The optimization and execution capabilities of the SQL engine evolve as the SQL mode of business systems changes.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1684722998039.png" alt="1684722999" class="img_ev3q"></p>
<p>OceanBase Database V1.x and V2.x are mainly intended for Internet TP scenarios. In such scenarios, the optimizer focuses on index selection or simple join enumeration, and the executor focuses on executing queries instead of speeding up queries.</p>
<p>OceanBase Database V2.x and V3.x start to serve more conventional TP scenarios, where the optimizer needs to have strong join enumeration and query rewrite capabilities, and the executor needs to provide higher performance and requires new execution strategies.</p>
<p>In OceanBase Database V3.x and V4.x, the optimizer needs to enhance the optimization capabilities in AP scenarios while selecting a more appropriate execution plan to ensure stable performance in TP scenarios. To do so, OceanBase Database provides features, such as grayscale evolution of execution plans and more powerful hints, to enable business personnel to better control execution plans generated by the optimizer. For the execution engine, OceanBase Database provides features such as vectorized optimization, hardware feature mining, parallel execution pushdown, and adaptation technologies.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Resource Isolation]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/resource-isolation</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/resource-isolation</guid>
            <pubDate>Mon, 03 Jun 2024 12:17:21 GMT</pubDate>
            <description><![CDATA[About the author: Xi Huafeng, an OceanBase technical expert, has been dedicated to optimizing the high availability and scalability of databases for 11 years. He helped with the implementation of the Paxos protocol in OceanBase Database and was a member of the OceanBase TPC-C project team. He is now a member of the OceanBase system group, dedicated to building HTAP infrastructure and working on isolation of resources for AP and TP tasks.]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>About the author: Xi Huafeng, an OceanBase technical expert, has been dedicated to optimizing the high availability and scalability of databases for 11 years. He helped with the implementation of the Paxos protocol in OceanBase Database and was a member of the OceanBase TPC-C project team. He is now a member of the OceanBase system group, dedicated to building HTAP infrastructure and working on isolation of resources for AP and TP tasks.</p>
</blockquote>
<p>In <a href="https://open.oceanbase.com/blog/10900410" target="_blank" rel="noopener noreferrer">Technical thoughts on the benefits of vectorized engines to HTAP</a>, we shared views of the OceanBase team on vectorized engines and introduced our ideas of dealing with complex queries by using a vectorized engine.</p>
<p>Hybrid transaction and analytical processing (HTAP) is supposed to run online transaction processing (OLTP) and online analytical processing (OLAP) in the same system for better performance. It helps with making business decisions in real time and facilitates innovation at lower operational costs. However, parallel running of OLTP and OLAP tends to cause resource contention because they use database resources, such as CPU, memory, and disk, in different ways. Minimizing such contention is the key to achieve HTAP and also the issue to resolve through resource isolation — the technology to be introduced in this article.</p>
<p>We believe that true HTAP requires complete resource isolation. A database must support logical isolation complementary to physical isolation to help users adjust resource allocation as needed. Resources for core business that requires ultimate independence can be physically isolated, while those for cost-sensitive long-tail business can be logically isolated. In this article, we will share thoughts of the OceanBase team on resource isolation, and explain why this technology is a must for HTAP and what we have done to tackle the challenges of making it work.</p>
<ul>
<li>Why is resource isolation necessary for HTAP?</li>
<li>How to implement resource isolation for HTAP?</li>
<li>What is achieved by resource isolation in OceanBase Database?</li>
</ul>
<p><strong>Why is resource isolation necessary for HTAP?</strong></p>
<p>Resource isolation lays the groundwork for HTAP</p>
<p>To show the importance of resource isolation, we can put a database beside an operating system. The two are both complex because of their openness of functionality and nature of delivering a higher price-performance ratio. The openness of functionality denotes uncontrollable workloads. For example, a user process or an SQL statement can be used to perform any operations in the system. As for the price-performance ratio, it is important because even a teeny-tiny saving of resources means a lot, given a massive user base. Among all the ways of driving up the cost performance, resource isolation is unarguably the most straightforward one.</p>
<p>After decades of development, modern operating systems are generally capable of supporting multiple users and Docker, a virtualized application container. Docker-based Kubernetes, for example, has become the de facto standard for business deployment. Databases, on the other hand, are also required to handle multi-tenancy and HTAP. Many companies separate their historical databases from online databases and perform OLAP in historical databases, which not only makes O&amp;M more complicated but also downgrades OLAP efficiency, making it impossible to achieve dynamic balance between OLTP and OLAP with limited hardware resources. As more database instances are being deployed, achieving such balance will only bring more benefits.</p>
<p>Resource isolation is a requirement naturally derived from the grouping of different workloads. For example, backup tasks at the background and SQL processing tasks at the foreground are grouped because they obviously have different requirements on timeliness. OLTP and OLAP also involve grouping because the two use resources in different ways. In other words, as long as a software system processes objects differently, it naturally classifies them into groups to ensure the quality of service (QoS), which gives rise to the need for resource isolation.</p>
<p>Resource isolation is critical to the operation stability of a database. There are two typical cases of resource isolation. First, you can reserve resources for important database tasks through resource isolation to prevent the database from being overloaded and crash. Second, users may sometimes hold business with different QoS requirements in the same database. For example, they hold real-time OLTP business and a small number of less import background tasks in the same database. If users agree to expose such information to the database so that the database can isolate resources for the business, the database will be able to run more stably.</p>
<p>A classic example of the second case is the isolation between OLAP and OLTP. To avoid interference between OLTP and OLAP, a conventional database tends to be built with more hardware resources so that each business is allocated with sufficient resources, which leads to inefficient resource utilization. To address this issue, we can consolidate multiple databases into one physical database to reduce the O&amp;M complexity and hardware costs.</p>
<p>Merging OLTP and OLAP databases into one HTAP database can be considered as a consolidation process. As aforementioned, operating systems have supported multi-user and Docker for long. Is it possible that databases also demand the sharing of physical resources as technology evolves? We believe that as technology evolves and databases grow larger, logical resource isolation will be applied in more scenarios. In the real world, many users run OLTP workloads in parallel with simple OLAP workloads in the same database. However, the performance may not be as expected due to the limited OLAP and resource isolation capabilities of the database.</p>
<p>For example, if the owner of an online store wants to know the best-sellers of a day, it's better to perform analysis in the online database. However, if the database does not support resource isolation, the analytical SQL queries may affect online transactions. To ensure the stability of online transactions, it is necessary to scale out the database by introducing more physical resources to keep the business stable. Even so, the analytical SQL queries must be strictly reviewed to prevent them from exhausting all resources.</p>
<p>Which is better: physical or logical isolation?</p>
<p>Resource isolation is not new. Conventionally, not sharing physical resources is taken as a physical isolation solution. In a database that adopts physical isolation, row-store-based replicas are used for OLTP and column-store-based replicas are used for OLAP under different tenants or within the same tenant. Physical resources for OLAP and OLTP are isolated. If cost is not a consideration, physical isolation is no doubt a better choice.</p>
<p>In the real world, however, costs and utilization of hardware resources are among the concerns of most customers. On the one hand, database hardware is expensive to purchase and maintain and needs to be replaced regularly. On the other hand, if database hardware is used for processing single business, only a minor portion of it is utilized on average. Inefficient use of hardware resources is absolutely a huge waste.</p>
<p>To make full use of hardware resources, logical isolation stands out because physical resources shared by OLAP and OLTP are logically isolated across different tenants or within the same tenant. Instead of a this-or-that choice, we believe that physical isolation and logical isolation are complementary. In view of the possible contention caused by shared resources, however, some worry that resource sharing impairs QoS and is therefore of limited value to users, while others are concerned about whether a perfect resource isolation solution is possible and whether the losses outweigh the benefits if the solution is too complex.</p>
<p>Well, on the one hand, we should get out of the box of perfectionism and recognize the obvious customer benefits of basic resource isolation capabilities. On the other hand, let's look at this issue from a forward-looking perspective and admit that the logical isolation technology is getting better over time.</p>
<p>Therefore, instead of making a choice between physical and logical isolation, an ideal HTAP solution is about finding a balance between absolute physical isolation and share-it-all. Infrastructure software should allow users to choose an isolation solution based on the scenario. It is necessary for database products to support physical and logical resource isolation at all levels.</p>
<p><strong>How to implement resource isolation for HTAP?</strong></p>
<p>Before implementing resource isolation, we must:</p>
<ul>
<li>Define resource groups and their QoS. For databases, a tenant is the most common resource group. You can also configure resource groups respectively for OLAP and OLTP.</li>
<li>Develop and implement resource isolation strategies based on the defined QoS.</li>
</ul>
<p>We will first look at the database management APIs for the database administrator (DBA), analyze the resources to be isolated (those having the greatest business impact), and then describe the isolation solution of OceanBase Database by taking CPU time, inputs and outputs per second (IOPS), and network bandwidth as examples.</p>
<p>Define resource groups and design resource plans for OLTP and OLAP</p>
<p>OceanBase Database aims to realize resource isolation between tenants and that between OLTP and OLAP within one tenant.</p>
<p>OceanBase Database allows users to define resource specifications of a tenant through unit configuration. Before you create an OceanBase Database tenant, you must create a resource pool and configure resource units in the pool to control the resource usage. If you are not familiar with this concept, go to OceanBase Documentation and take a look at the "Cluster and multi-tenant management" chapter.</p>
<p>create resource unit box1 max_cpu 4, max_memory 21474836480, max_iops 128, max_disk_size '5G', max_session_num 64, min_cpu=4, min_memory=21474836480, min_iops=128;</p>
<p>For users to define resource specifications of OLTP and OLAP within a tenant, OceanBase Database provides management APIs by referring to the classic Resource Manager service of Oracle. We have noted that customers tend to run batch processing tasks during off-peak hours, such as midnight or early morning, when OLTP is unlikely affected by OLAP, and most resources of a cluster can be allocated to OLAP with minimal resources reserved to support essential OLTP tasks. During peak hours in the daytime, the resource isolation plan can be adjusted to ensure sufficient resources for OLTP with minimal resources reserved to support essential OLAP tasks. OceanBase Database allows users to set two plans for resource management in the daytime and at night. You can activate the plans as needed to ensure isolation and maximize resource utilization.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/8834920c-824e-443d-ae10-5032f8445faf/image/2022-09-29/f2a3ed00-30b2-44df-b47e-68b793d59a67.png" alt="" class="img_ev3q"></p>
<p>For example, the following syntax defines a daytime resource plan where OLTP (<code>interactive_group</code>) and OLAP (<code>batch_group</code>) are respectively allocated with 80% and 20% of the resources.</p>
<p>DBMS_RESOURCE_MANAGER.CREATE_PLAN(
PLAN    =&gt; 'DAYTIME',
COMMENT =&gt; 'More resources for OLTP applications');
DBMS_RESOURCE_MANAGER.CREATE_PLAN_DIRECTIVE (
PLAN             =&gt; 'DAYTIME',
GROUP_OR_SUBPLAN =&gt; 'interactive_group',
COMMENT          =&gt; 'OLTP group',
MGMT_P1          =&gt; 80,
UTILIZATION_LIMIT =&gt; 100);</p>
<p>DBMS_RESOURCE_MANAGER.CREATE_PLAN_DIRECTIVE (
PLAN             =&gt; 'DAYTIME',
GROUP_OR_SUBPLAN =&gt; 'batch_group',
COMMENT          =&gt; 'OLAP group',
MGMT_P1          =&gt; 20,
UTILIZATION_LIMIT =&gt; 20);</p>
<p>After the plan is ready, you can execute the following statement to activate it:</p>
<p>ALTER SYSTEM SET RESOURCE_MANAGER_PLAN = 'DAYTIME';</p>
<p>Similarly, you can define a night resource plan and activate it during off-peak hours.</p>
<p>OceanBase Database supports user-based SQL categorization, which is simple but quite effective. You can create a user dedicated to executing analytical SQL queries, so that all SQL queries initiated by this user are processed as OLAP workloads. Also, if the execution of a request does not complete in 5 seconds, OceanBase Database identifies the request as a large query and downgrades its priority.</p>
<p>Ensure QoS with <code>min</code>, <code>max</code>, and <code>weight</code></p>
<p>QoS is a security mechanism that guarantees the smooth operation of critical processes when resources are overloaded. We will describe QoS through weight allocation and the definition of upper and lower limits on resources.</p>
<p>As the business traffic fluctuates over time, the QoS description should be flexible. If we use a fixed QoS description, just like specifying a fixed number of CPU cores and I/O bandwidth for Elastic Compute Service (ECS) of Alibaba Cloud, the system is prone to failure during peak hours due to insufficient database capacity.</p>
<p>Assume that Tenant A and Tenant B need to share 100 Mbit/s of bandwidth based on principles of resource sharing in off-peak hours and isolation in peak hours without interfering with each other.</p>
<p>How to ensure that resources are preferentially allocated to the tenant with higher priority? We can set the weight ratio between Tenant A and Tenant B to, for example, 1:3 to control the resource allocation. When both tenants need CPU resources, the ratio of CPU time spent on Tenant A and Tenant B will be 1:3. This weight ratio is specified by the <code>weight</code> parameter.</p>
<p>When a system has abundant physical resources, it is possible that a low-weight tenant takes up a lot of resources that it does not need. How to put a cap on it? We can specify the maximum resource usage for each tenant by setting the <code>max</code> parameter on top of the weight ratio. For example, with a weight ratio of 1:3 between Tenant A and Tenant B, Tenant A can use up to 25 Mbit/s of bandwidth. If we set the <code>max</code> parameter to 20 Mbit/s, the tenant will use no more than 20 Mbit/s of bandwidth.</p>
<p>The weight ratio will change if tenants are added or deleted. To ensure that each tenant obtains the minimum resources that it requires, we can specify the amount of reserved resources for each tenant by setting the <code>min</code> parameter. This not only guarantees the operation of basic functionality of all tenants but also describes QoS in a clearer way.</p>
<p>Provide better resource isolation in OceanBase Database</p>
<p>Database resources can be classified into rigid and elastic resources depending on their usage behaviors. Generally, elastic resources can be isolated. Rigid resources are necessary for programs to fulfill their duties and, once occupied, will not be released in a short period of time. Typical rigid resources include disk, memory, and the number of connections. After you make a static plan for such resources, the amount of resources allocated to each group is fixed. Elastic resources, such as IOPS, CPU time, and network bandwidth, have nothing to do with program functionality but are related to system performance. These resources can be preempted or quickly released. Users can schedule elastic resources for sharing in off-peak hours and isolation in peak hours. So, the sharing of elastic resources is what we need to focus on.</p>
<p>OceanBase Database prioritizes the isolation of the following resources that are relatively import: memory, disk space, CPU time, IOPS, and bandwidth.</p>
<p>CPU isolation</p>
<p>OceanBase Database has supported CPU time isolation and will support CPU cache isolation later. CPU isolation works in real time only when CPU is in kernel mode. This is because a resource can be scheduled only if it can be divided into many smaller pieces. For example, network I/O resources are natively in form of packets, and so do disk I/O resources. The operating system divides CPU time into many slices, which are transparent for the user mode and cannot be directly scheduled. To schedule CPU time in user mode, you need to insert many checkpoints into the code to divide the CPU time of user threads into many segments, and execute the scheduling at the checkpoints. The accuracy of checkpoint insertion, however, is not guaranteed. How to insert checkpoints into functions of a static database?</p>
<p>OceanBase Database adopts a kernel mode solution, where the CPU controller of cgroup is used. Currently, cgroup supports the <code>max</code> and <code>weight</code> parameters. Although the <code>min</code> parameter is not supported, it is not a problem because the total CPU time does not fluctuate. We can reserve the time slices for each group just by setting the <code>weight</code> parameter.</p>
<p>CPU isolation applies not only to user workloads, but also system tasks. For example, leader election among multiple replicas is a high-priority task for OBServer nodes, and we do not want the election to be affected by the CPU resource contention with user SQL queries. Therefore, we divide resources for election and user SQL queries into two directories in the root of cgroup, and further divide the user SQL directory into subdirectories corresponding to tenants and users within tenants.</p>
<p>IOPS isolation</p>
<p>If you use a solid-state disk (SSD), you can calculate the bandwidth based on this equation: Bandwidth = SSD size × IOPS. We can use normalized IOPS with an empirical formula. For example, we can take a 16 KB I/O as a normalized I/O, so that a 2 MB I/O is translated into several normalized I/Os based on the formula. Devices need to be distinguished during IOPS isolation. However, exposing the devices makes configuration more complicated. So, in most cases, multiple devices share one set of configurations.</p>
<p>These ideas are inspired by this paper about VM I/O isolation, titled "mClock: Handling Throughput Variability for Hypervisor IO Scheduling", by VMware Inc.</p>
<p>When OceanBase Database was deployed on a public cloud, we found that the I/O throughput of the cloud disk fluctuated. However, OceanBase Database quickly adapted to such fluctuation and maintained the stability of the most important OLTP business. Also, OceanBase Database associates I/O isolation with block cache, which means OceanBase Database limits not only the I/O bandwidth of OLAP but also the cache used for OLAP. In this way, the block cache can be protected from being polluted by OLAP to eventually ensure the low latency of OLTP.</p>
<p>Network bandwidth isolation</p>
<p>OBServer nodes communicate with each other by using remote procedure calls (RPCs). RPCs are sent to OBServer nodes within the same Internet data center (IDC) for the distributed execution of SQL statements and two-phase commit, and to OBServer nodes in other IDCs for log replication and data backup to ensure high availability. Unlike intra-IDC communication, the inter-IDC communication between an OBServer node and different IDCs is performed with varying latency and bandwidth usage. Usually, the bandwidth is shared for inter-IDC communication. Therefore, the bandwidth allocation and limitation must be considered globally. The question is how to define the scope of 'global'? If we have built multiple OceanBase clusters, do we need to consider them all? What if network partitioning is involved even we have only one OceanBase cluster? How can we get the global view?</p>
<p>OceanBase Database supports region-level bandwidth control since V3.2. Next, instead of holistic resource scheduling among multiple OceanBase clusters, we want the DBA to make a static resource plan. That is, the DBA needs to configure the bandwidth available to clusters for the intra-IDC and inter-IDC communication. OceanBase Database then dynamically assigns the bandwidth to OBServer nodes within a cluster, and each OBServer node further assigns the bandwidth to different groups based on their priorities.</p>
<p>For most business, bandwidth allocation for the intra-IDC communication is more important. While bandwidth isolation is quite similar to IOPS isolation, algorithms often take the network interface card (NIC) rather than each communication destination in calculations as an I/O device, given the large number of communication destinations.</p>
<p>Bandwidth isolation can be completed in two steps: tag traffic and isolate the tagged traffic based on pre-defined requirements. The first step can be performed only at the application layer, and the second step can be performed either at the application layer or the kernel layer. Since Linux Traffic Control (TC) provides a variety of throttling and priority strategies, OceanBase Database tags traffic at the application layer and throttles the tagged traffic at the kernel layer. This solution reuses capabilities of the kernel that are supported by a widely accepted ecosystem. Users do not bother to learn new throttling mechanisms.</p>
<p><strong>What is achieved by resource isolation in OceanBase Database?</strong></p>
<p>At present, OceanBase Database supports the isolation of memory, disk, CPU, and IOPS, and will support bandwidth isolation in the future. The following test takes CPU isolation as an example to show the performance of resource isolation in OceanBase Database.</p>
<p>When talking about the method of defining resource groups, we mentioned that a dedicated user can be created for OLAP. In this test, we created two test users named AP@ORACLE and TP@ORACLE, and bound OLAP tasks to AP_GROUP and OLTP tasks to TP_GROUP, assuming that the test business involves heavy OLTP workloads during daytime and most OLAP workloads are handled at night. Therefore, we set two resource plans for daytime and night. The daytime plan schedules 80% of the resources for OLTP and 20% for OLAP, and the night plan schedules 50% of the resources for OLTP and 50% for OLAP.</p>
<p>Switch from the daytime plan to the night plan</p>
<p>The result shows that the OLAP QPS increases significantly while the OLTP QPS decreases after the plan switchover due to a larger portion of CPU resources allocated to OLAP in the night plan. In the figure below, you can see the turning points of OLAP and OLTP throughput curves caused by the plan switchover.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/df4eeb08-6997-4447-9ba2-a934dd3cad25/image/2022-09-29/673ae0a8-e777-4612-8326-0dd0a3d81e09.png" alt="" class="img_ev3q"></p>
<p>It seems that the change in the OLTP throughput is not as noticeable in comparison to that of OLAP. This is actually a result as expected. The percentage of resources for OLAP is increased from 20% to 50%, an increase of 150%, and that for OLTP is reduced from 80% to 50%, a decrease of 37.5%. Given that the actual OLTP throughput drops from 19,000 to 14,300 QPS, a 24.7% decrease, the gap does not make much difference.</p>
<p>The performance of CPU isolation relies largely on the type of workload. If the network becomes a bottleneck, bandwidth isolation is also necessary. The test is not intended to bang the drum for CPU isolation as a cure-all, but it does show that simple CPU isolation works well for CPU-bound workloads, even without the CPU cache isolation. Keep in mind that isolation capabilities are getting better over time. CPU isolation alone takes effect on OLTP-simple OLAP isolation or OLTP-OLTP isolation. If we combine CPU isolation with IOPS isolation and network bandwidth isolation, the application scope will be even wider.</p>
<p>This article introduces thoughts of the OceanBase team on resource isolation technology and its implementation solution. Highly efficient and effective resource isolation is required to ensure sharing of hardware resources among different tenants and among OLTP and OLAP services within the same tenant in an HTAP database. We believe that a resource isolation solution that integrates complementary physical and logical isolation mechanisms is more suitable for an HTAP database. OceanBase will keep optimizing the resource isolation technology to better meet the needs of users.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Refine Performance]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/refine-performance</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/refine-performance</guid>
            <pubDate>Mon, 03 Jun 2024 12:11:05 GMT</pubDate>
            <description><![CDATA[Wang Guoping | Senior Technical Expert of OceanBase]]></description>
            <content:encoded><![CDATA[<blockquote>
<p><strong>Wang Guoping | Senior Technical Expert of OceanBase</strong></p>
</blockquote>
<blockquote>
<p>Wang is the technical director of the OceanBase Database SQL engine. He joined OceanBase in 2016 and is responsible for the R&amp;D of the SQL engine. He graduated from Harbin Institute of Technology in 2008 and received his PhD from National University of Singapore in 2014. His main research direction during his PhD was multi-query optimization and processing in the database field. Before joining OceanBase, he was responsible for database R&amp;D in Huawei.</p>
</blockquote>
<p>Performance is one of the important metrics for measuring a database system and also a major concern in the database system field. OceanBase Database V3.x provides a relatively sound optimizer engine, standalone execution engine, parallel execution engine, and vectorized execution engine. In May 2021, OceanBase Database V3.x ran the TPC-H benchmark and ranked first in the 30,000 GB Results list. It achieved a result of 15.26 million QphH@30,000 GB, which showcases its core performance. OceanBase Database has proved its distributed query performance and linear scalability by running this benchmark.</p>
<p>During massive application of OceanBase Database V3.x, performance issues still occur in some business scenarios. For example, non-optimal execution plans are generated in specific distributed scenarios, the execution engine has no tolerance for non-optimal execution plans, and parallel execution threads cannot be fully used to speed up queries in specific scenarios. To address these issues, when we started to design OceanBase Database V4.0, we thought about how to optimize the SQL engine to improve the distributed query performance. <strong>The distributed query optimization and distributed execution engine</strong> fundamentally determine the distributed query performance of the SQL engine. Let's talk about our thoughts from these two aspects.</p>
<p><strong>How does OceanBase Database V4.0 perform distributed query optimization?</strong></p>
<p>As we all know, query optimization is the focus and difficulty in database kernel development, and also the key point that determines the database query performance. Query optimization aims to select the optimal execution plan for each SQL statement. Generally, an SQL statement has many equivalent execution plans whose performance may vary by orders of magnitude. Therefore, query optimization fundamentally determines the query performance. OceanBase Database is a distributed relational database system, which means it inherently needs to perform distributed query optimization. In a relational database system, query optimization is always difficult in development. Distributed query optimization raises the level of the difficulty. Next, let's talk about the challenges in distributed query optimization compared with standalone query optimization.</p>
<p><strong>▋ Challenges in distributed query optimization</strong></p>
<p><strong>Significantly expanded plan enumeration space</strong></p>
<p>In query optimization, the optimizer needs to select an implementation method for each operator in an execution plan. In a standalone scenario, the optimizer only needs to consider the implementation of the operator on a single server. In a distributed scenario, the optimizer also needs to consider the distributed implementation of the operator. For example, in a standalone scenario, the implementation methods for a join operator include hash join, merge join, and nested loop join. In a distributed scenario, the implementation methods include partition-wise join, partial partition-wise join, hash-hash distribution join, and broadcast distribution join. When these distributed implementation methods are combined with standalone implementation methods, the plan enumeration space for distributed query optimization will be significantly expanded, posing challenges for the optimization.</p>
<p><strong>More physical attributes to be maintained</strong></p>
<p>In standalone query optimization, operator order is a very important physical attribute. The operator order may be used to speed up subsequent operators. The operator order determines whether tuples in the database are output based on a specific order after the operator is executed. For example, tuples are output in the order of (a,b,c) after the index (a,b,c) is scanned, because OceanBase Database preserves the order during index scan. The operator order is related to the implementation of specific operators. It may even affect the cost of subsequent operators. Therefore, after each operator is executed, query optimization will maintain the physical attribute "order", and execution plans with a useful order will be retained during plan pruning.</p>
<p>In distributed query optimization, another physical attribute is partition information. Partition information mainly includes the data partitioning method and the physical location of each partition. Partition information fundamentally determines the distributed algorithm selected for an operator. For example, whether a join can be implemented as a partition-wise join depends on the join key and the table partition information. As partition information can also affect the cost of subsequent operators, the physical attribute "partition information" also needs to be maintained during distributed query optimization. Partition information maintenance will finally affect plan pruning and selection and increase the complexity in distributed query optimization.</p>
<p><strong>More accurate distributed cost model</strong></p>
<p>In query optimization, cost is the standard to evaluate an execution plan. Generally, cost represents the execution time of an execution plan or the amount of database system resources, such as CPU, I/O, and network resources, occupied by the execution plan. In a standalone scenario, the cost model needs to consider only the CPU and I/O costs. In a distributed scenario, apart from CPU and I/O costs, the cost model also needs to consider the network transmission cost, degree of parallelism (DOP) for queries, and cost in specific distributed optimization scenarios such as cost calculation for a Bloom filter. These factors increase the complexity in the design and fitting of a distributed cost model, as well as the complexity in distributed query optimization to some extent.</p>
<p><strong>▋ Two-phase distributed query optimization in OceanBase Database V3.x</strong></p>
<p>To decrease the complexity caused by distributed query optimization, OceanBase Database V3.x adopts two-phase distributed query optimization, which is a common solution in the industry.</p>
<p>In the first phase, based on the assumption that all tables are stored on the local server, the optimizer selects a local optimal execution plan by using the existing standalone query optimization capabilities.</p>
<p>In the second phase, based on the fixed join order and local algorithms, the optimizer selects a distributed algorithm for each operator by using a simple distributed cost model.</p>
<p>The following figure shows an example of two-phase distributed query optimization for query Q1. In the first phase, the optimizer selects a local optimal execution plan shown by the chart on the left. MJ represents merge join, HJ represents hash join, and HGBY represents hash group by, which are local algorithms. In the second phase, based on the fixed join order and local algorithms, the optimizer selects a distributed algorithm for each operator by using a simple distributed cost model. In this example, the partition-wise join algorithm is selected for the MJ node, and the hash-hash distribution join algorithm is selected for the HJ node.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R3</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">R3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> R3 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">C </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> R3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">C </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/195f8d40-74bd-4522-9c2b-531c29387a8a/image/2022-11-30/330988c9-f643-4c4b-af39-50584f9b99e0.png" alt="" class="img_ev3q"></p>
<p>Two-phase distributed query optimization significantly decreases the optimization complexity. However, during massive commercial use of OceanBase Database V3.x, the optimization effects of two-phase distributed query optimization are sometimes not as expected due to the following reasons:</p>
<p><strong>A non-optimal local algorithm is selected when partition information is ignored</strong></p>
<p>During two-phase distributed query optimization, if partition information is ignored in the first phase, a non-optimal local algorithm will generally be selected. The following figure shows a query Q2 and its execution plan in the first phase. During local optimization in the first phase, if the selectivity of predicate <code>R1.c = 100</code> is low, a few rows in the R1 table meet this condition. In this case, the optimizer will select a nested loop join for this query. Specifically, for each row in the R1 table that meets the condition, data that meets the condition is quickly obtained from the R2 table based on the index <code>idx</code>. In actual execution however, the execution time of the nested loop join is much longer than that estimated by the optimizer. This is because R2 is a partitioned table with 100 partitions and the operation performed for each row in the R1 table must be performed in each partition in the R2 table during the nested loop join, which increases the execution time by 100 times. In this case, the optimal plan may be a hash join rather than a nested loop join. In this scenario, partition information is not considered during the optimization in the first phase. As a result, the standalone costs of operators are incorrectly estimated in the first phase, and a non-optimal local algorithm is selected for the query.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">index</span><span class="token plain"> idx</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Q2: </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> R2 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/* Execution plan for the first phase*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">COST </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NESTED</span><span class="token operator" style="color:#393A34">-</span><span class="token keyword" style="color:#00009f">LOOP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">JOIN</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">970299</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">85622</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> SCAN     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">r1     </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">990</span><span class="token plain">      </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">40790</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> SCAN     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">idx</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">44</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Outputs </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> filters:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">-------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        conds</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nl_params_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p0</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>A non-optimal join order is selected when partition information is ignored</strong></p>
<p>During two-phase distributed query optimization, if partition information is ignored in the first phase, a non-optimal join order will generally be selected. The following figure shows a query Q3 and two groups of local plans and distributed plans generated for it. In the first group, the join order is ((R2, R3), R1). In the second group, the join order is ((R1, R2), R3). If partition information is not considered, the optimizer may select the ((R2, R3), R1) join order in the first phase. However, this join order may incur more network transmission costs in the second phase. As shown in the following figure, the tables R1, R2, and R3, as well as the join results of R2 and R3, all need to be transmitted over the network. ((R1,R2), R3) may be a better join order. This is because in the second phase, only R3 and the join results of R1 and R2 need to be transmitted. Since a partition-wise join can be performed on R1 and R2, the two tables do not need to be transmitted over the network. In business scenarios, it is common that an inappropriate join order is selected due to the ignorance of partition information.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R3</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">Q3: </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">R3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> R3 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> R3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/3fd34d2d-e5c4-4a01-a393-3b0e3808221d/image/2022-11-30/2c02e366-d102-488a-b179-42ea1f8c3779.png" alt="" class="img_ev3q"></p>
<p>In the foregoing two scenarios, a non-optimal join order and a non-optimal local algorithm are selected because partition information is not considered during optimization in the first phase. Through the two scenarios, we can see that the drawbacks of two-phase distributed query optimization are obvious. Next, let's talk about how OceanBase Database V4.0 performs distributed query optimization to resolve these issues.</p>
<p><strong>▋ Distributed query optimization in OceanBase Database V4.0</strong></p>
<p>OceanBase Database V4.0 uses the one-phase optimization method for distributed queries. In this method, the optimizer enumerates both local and distributed algorithms in the same phase and estimates the costs by using a distributed cost model. OceanBase Database V4.0 restructures the entire distributed query optimization method from two-phase optimization to one-phase optimization.</p>
<p>To facilitate understanding of the one-phase distributed query optimization method, I first want to introduce the bottom-up dynamic programming method in System-R. Given an SQL statement, System-R uses the bottom-up dynamic programming method to enumerate joins and select a join algorithm. For a join that involves N tables, this method will enumerate execution plans for each subset by size. For each enumeration subset, the method will select an optimal plan as follows:</p>
<ul>
<li>Enumerate all standalone join algorithms, maintain the physical attribute "order", and calculate the costs based on a standalone cost model.</li>
<li>Retain the plan with the lowest cost and those with a useful order. The order in a plan is useful when and only when this order is useful for the allocation of subsequent operators.</li>
</ul>
<p>The following figure shows an example of plan enumeration for a join that involves four tables. The method will first enumerate plans for all size 1 base tables. For each base table, the method will enumerate all indexes and retain plans with the lowest cost and a useful order. Then, the method will enumerate plans for each size 2 subset. For example, to enumerate all execution plans for the join of <code>{R1,R2}</code>, the method will consider all standalone join algorithms and combine them with all plans retained for R1 and R2. The method will continue enumeration until execution plans are enumerated for the size 4 subset.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/672dc990-54a7-4231-bdab-bb05ab03beff/image/2022-11-30/87ee8003-c9b5-46bb-83c2-52abd3a3eb8c.png" alt="" class="img_ev3q"></p>
<p>Based on the standalone query optimization method of System-R, OceanBase Database V4.0 implements distributed query optimization as follows:</p>
<p>1. For each enumeration subset, OceanBase Database will enumerate the distributed algorithms of all operators, use a distributed cost model to calculate the cost of each distributed algorithm, and maintain two physical attributes: order and partition information.</p>
<p>2. For each enumeration subset, OceanBase Database will retain the plan with the lowest cost, plans with a useful order, and plans with useful partition information. Partition information is useful when and only when it is useful for subsequent operators. In the scenario shown in the following figure, plan P1 uses a hash-hash distribution join, and plan P2 uses a broadcast distribution join for the R2 table. Though P2 has a higher cost than P1, P2 inherits the partition information of the R1 table, which will be useful for the subsequent group by operator. Therefore, P2 will also be retained.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> R2 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> R2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/ceb3befd-0018-4a05-8f26-cc0bdb4ce341/image/2022-11-30/0a41f314-f6a5-41f1-913d-c6b230dd0f25.png" alt="" class="img_ev3q"></p>
<p>OceanBase Database V4.0 uses the one-phase distributed query optimization method, which involves a much larger plan space than standalone query optimization. Facing the issue of a large plan space, OceanBase Database V4.0 provides a variety of methods for quick plan pruning. It also provides new join enumeration algorithms to support distributed plan enumeration for ultra-large tables. Thanks to these techniques, OceanBase Database V4.0 effectively reduces the distributed plan space and improves the distributed query optimization performance. Our experimental results also show that OceanBase Database V4.0 can enumerate distributed plans for 50 tables within seconds.</p>
<p><strong>How does OceanBase Database V4.0 improve the performance of the distributed execution engine?</strong></p>
<p>Compared with OceanBase Database V3.x, OceanBase Database V4.0 has made many improvements in the execution engine. It has implemented new distributed and standalone algorithms, such as null-aware hash anti-join, shared broadcast hash join, hash-based window function, and partition bloom filter. It has also improved the implementation of the entire vectorized engine, developed ultimate parallel pushdown techniques, and initiated the development of adaptive techniques. These efforts have greatly improved the performance of both distributed and standalone queries. Here I want to introduce the adaptive techniques and parallel pushdown techniques of OceanBase Database V4.0.</p>
<p><strong>▋ Development towards an adaptive execution engine</strong></p>
<p>In business scenarios of OceanBase Database, we found that the execution engine has no tolerance for non-optimal execution plans generated by the optimizer. When the optimizer generates non-optimal execution plans, the execution engine cannot adjust the plans to improve the execution performance. Although the optimizer is designed to choose the optimal execution plans for database queries, the optimizer itself is not perfect. For example, it cannot accurately estimate the total number of rows. So, the optimizer may pick a less optimal execution plan, or even a lousy one.</p>
<p>To resolve this issue, OceanBase Database V4.0 starts to develop an adaptive execution engine. An adaptive execution engine identifies some non-optimal execution plans based on the real-time execution status and adjusts them accordingly to improve the execution performance. We believe that once an execution engine reaches a certain stage of development, it must use adaptive techniques to address the issue of non-optimal execution plans generated by the optimizer. However, we also do not believe that adaptive techniques can handle all scenarios of non-optimal plans.</p>
<p>OceanBase Database V4.0 implements adaptive GROUP BY/DISTINCT parallel pushdown, which can prevent performance downgrade caused by non-optimal plans in GROUP BY/DISTINCT parallel pushdown scenarios. Before we dive into adaptive techniques, let me briefly introduce the GROUP BY/DISTINCT parallel pushdown technique. As a general technique in distributed execution, GROUP BY/DISTINCT parallel pushdown is often used to push down the GROUP BY operator in advance to pre-aggregate some data. This reduces the workload of network transmission, thus improving the performance. The following figure shows an example where the execution plan pushes down the GROUP BY operator to Operator 5 for data pre-aggregation, so that the network transmission workload of Operator 4 is reduced to achieve higher performance. However, note that GROUP BY parallel pushdown does not necessarily improve the performance. It sometimes backfires, mainly because it consumes extra computing resources. GROUP BY parallel pushdown brings benefits only when the performance improvement in network transmission surpasses the extra computing cost.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">explain</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1 </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">COST</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">----------------------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">PX COORDINATOR               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">10</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10001</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">10</span><span class="token plain">  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">              </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">9</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   EXCHANGE </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> DISTR         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">9</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">8</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">     </span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">8</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      PX </span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> ITERATOR  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> SCAN            </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">r1      </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Outputs </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> filters:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">-------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">INTERNAL_FUNCTION</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rowset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">256</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">INTERNAL_FUNCTION</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rowset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">256</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dop</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rowset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">256</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rowset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">256</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token comment" style="color:#999988;font-style:italic">#keys=1, [r1.b]), output([r1.b], [T_FUN_SUM(r1.c)]), filter(nil), rowset=256, dop=1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rowset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">256</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rowset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">256</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rowset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">256</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In OceanBase Database of earlier versions, the optimizer determines whether to push down the GROUP BY operator based on cost estimation. However, the optimizer may sometimes incorrectly estimate the number of rows. As a result, the GROUP BY operator is not pushed down or is incorrectly pushed down, compromising the execution performance. To resolve this issue, OceanBase Database V4.0 introduces adaptive GROUP BY/DISTINCT parallel pushdown. The optimizer will always push down the GROUP BY/DISTINCT operator and determine whether to skip the pushed down GROUP BY/DISTINCT operator by sampling part of the data of the operator during execution. The challenge of this technique lies in how to make the pushed operator achieve satisfactory pre-aggregation performance. The OceanBase Database solution is to control the performance of the hash table of the pushed operator by limiting the table within the L3 cache and perform multiple rounds of sampling to prevent misjudgment due to continuous non-aggregation of data. The key points of the solution are described as follows:</p>
<ul>
<li>The execution engine limits the hash table within L2 cache (1 MB) and, in the case of unsatisfactory pre-aggregation performance, marks the hash table as discarded. If the pre-aggregation performance is good, the execution engine expands the hash table to L3 cache (10 MB) and, if more memory is needed during the execution, marks the hash table as discarded.</li>
<li>If the hash table is discarded, the execution engine returns and releases all rows of the table, and then rebuilds the hash table to start the next round of sampling.</li>
<li>If pre-aggregation fails to achieve satisfactory performance in five consecutive rounds of sampling, the execution engine skips the pushed GROUP BY operator.</li>
</ul>
<p>Compared with the execution without operator pushdown, adaptive GROUP BY/DISTINCT parallel pushdown involves extra overhead for sampling and computing, which are required to determine whether to skip the pushed down operator during the execution. However, our tests based on various data distribution modes indicate that the extra overhead can be kept within 10%, which is much lower than the performance gain.</p>
<p>We are also working on more adaptive techniques, such as the adaptive creation and detection of Bloom filters, adaptive tuning of nested loop join and hash join, and adaptive tuning of broadcast distribution join and hash-hash distribution join. We believe that these adaptive techniques can elevate the capabilities of the execution engine to a new level, making the execution engine more robust. This way, when the optimizer generates a non-optimal or lousy execution plan, the execution engine can adjust the plan to improve the query performance.</p>
<p><strong>▋ Development towards ultimate parallel pushdown</strong></p>
<p>Parallel pushdown in the execution of distributed queries is a technique where the computing of some operators is pushed down to improve performance. Generally, this technique improves the performance of distributed queries by performing executions at the maximum DOP or reducing network transmission. It significantly improves the performance of distributed queries by orders of magnitude in many cases. The GROUP BY/DISTINCT parallel pushdown technique described in the previous section is a typical example of parallel pushdown techniques. Compared with OceanBase Database V3.x, OceanBase Database V4.0 provides well-developed parallel pushdown techniques, which work on almost all operators in AP scenarios, such as GROUP BY, ROLLUP, and DISTINCT, and window functions.</p>
<p>The following table compares OceanBase Database V3.x and OceanBase Database V4.0 in parallel pushdown.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/dbcb3231-5893-43b1-8456-7c969894bf31/image/2022-11-30/8ae0d7fe-c66c-491d-ae63-c70899cad4b3.png" alt="" class="img_ev3q"></p>
<p><strong>Pushdown scenario</strong> <strong>Example V3.x V4.0</strong>GROUP BY, without a DISTINCT aggregate function select a, sum(d) from t group by a; Supported Supported GROUP BY, with a DISTINCT aggregate function select a, sum(distinct c),count(distinct d) from t group by a;Not supported Supported ROLLUP select a, sum(d) from t group by a rollup(b);Not supported Supported DISTINCT select distinct a from t; Supported Supported Window Function select a, b, sum(d) over (partition by c) from t; Not supported Supported</p>
<p>In OceanBase Database V4.0, the implementation of parallel pushdown varies based on operators. Due to the complexity in parallel execution, each implementation is confronted with different challenges. Here we won't introduce each implementation of parallel pushdown. Let's talk about the three-phase parallel pushdown technique for DISTINCT aggregate functions, to illustrate the advantages of parallel pushdown. The following figure shows a query Q1 that contains two DISTINCT aggregate functions. In OceanBase Database V3.x, parallel pushdown cannot be performed for Q1. The execution plan of Q1 shows that all deduplication logic and aggregate logic are calculated by Operator 0, which does not support parallel execution, leading to poor overall execution performance.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Q1: </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">COST</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">SCALAR </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2365</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> PX COORDINATOR         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3960</span><span class="token plain">     </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2122</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3960</span><span class="token plain">     </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1532</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   PX </span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> ITERATOR</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3960</span><span class="token plain">     </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1532</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> SCAN          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">r1      </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3960</span><span class="token plain">     </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1532</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Outputs </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> filters:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">-------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dop</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To improve the distributed execution performance of a query that uses a DISTINCT aggregate function, OceanBase Database V4.0 introduces the three-phase parallel pushdown logic. The following figure shows the three-phase parallel pushdown logic for a query that uses a DISTINCT aggregate function. The details are as follows:</p>
<p><strong>In the first phase</strong>, the DISTINCT logic is pushed down for partial deduplication. In this example, the job in this phase is completed by Operator 6.</p>
<p><strong>In the second phase</strong>, data is repartitioned based on the deduplicated column, and then full deduplication and partial pre-aggregation calculation are performed. In this example, the job in this phase is completed by Operators 3, 4, and 5.</p>
<p><strong>In the third phase</strong>, the results obtained in the second phase are aggregated. In this example, the job in this phase is completed by Operators 0, 1, and 2.</p>
<p>Compared to the execution without operator pushdown, the three-phase parallel pushdown technique has two performance benefits. First, it allows data deduplication and pre-aggregation at the maximum DOP. Second, data deduplication by using the DISTINCT pushdown technique reduces the workload of network transmission.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">COST</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">SCALAR </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1986</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> PX COORDINATOR               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1835</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10001</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1835</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token keyword" style="color:#00009f">MERGE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1835</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    EXCHANGE </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> DISTR         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1683</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">     EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1683</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      </span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1683</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       PX </span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> ITERATOR  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3960</span><span class="token plain">     </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1532</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> SCAN            </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">r1      </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3960</span><span class="token plain">     </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1532</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Outputs </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> filters:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">-------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dop</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token comment" style="color:#999988;font-style:italic">#keys=1, [r1.c]), output([r1.c]), filter(nil), dop=1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">r1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The preceding example shows how the three-phase parallel pushdown technique works for a query with only one DISTINCT aggregate function. The question is, is it still effective for a query with multiple DISTINCT aggregate functions? The answer is yes. The trick is that in the first phase, we create a replica of the data set for each DISTINCT aggregate function and tag the replica to indicate its association with this aggregate function. Similar operations are performed in the second and third phases, except for some minor differences in terms of implementation. The following figure shows the three-phase pushdown logic for a query that uses two DISTINCT aggregate functions. AGGR_CODE is used to mark the redundant data generated after each DISTINCT aggregate function is calculated.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> R1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">primary</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> partitions </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> R1 </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">COST</span><span class="token operator" style="color:#393A34">|</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------|0 |SCALAR GROUP BY               |        |1        |13  ||1 | PX COORDINATOR               |        |2        |13  ||2 |  EXCHANGE OUT DISTR          |:EX10001|2        |12  ||3 |   HASH GROUP BY              |        |2        |11  ||4 |    EXCHANGE IN DISTR         |        |2        |10  ||5 |     EXCHANGE OUT DISTR (HASH)|:EX10000|2        |9   ||6 |      HASH GROUP BY           |        |2        |8   ||7 |       PX PARTITION ITERATOR  |        |1        |7   ||8 |        TABLE SCAN            |r1      |1        |7   |===========================================================Outputs &amp; filters:-------------------------------------  0 - output([T_FUN_SUM(T_FUN_SUM(dup(r1.c)))], [T_FUN_SUM(T_FUN_SUM(dup(r1.d)))]), filter(nil), rowset=256,      group(nil), agg_func([T_FUN_SUM(T_FUN_SUM(dup(r1.c)))], [T_FUN_SUM(T_FUN_SUM(dup(r1.d)))])  1 - output([AGGR_CODE], [T_FUN_SUM(dup(r1.c))], [T_FUN_SUM(dup(r1.d))]), filter(nil), rowset=256  2 - output([AGGR_CODE], [T_FUN_SUM(dup(r1.c))], [T_FUN_SUM(dup(r1.d))]), filter(nil), rowset=256, dop=1  3 - output([AGGR_CODE], [T_FUN_SUM(dup(r1.c))], [T_FUN_SUM(dup(r1.d))]), filter(nil), rowset=256,      group([AGGR_CODE]), agg_func([T_FUN_SUM(dup(r1.c))], [T_FUN_SUM(dup(r1.d))])  4 - output([AGGR_CODE], [dup(r1.c)], [dup(r1.d)]), filter(nil), rowset=256  5 - (#keys=3, [AGGR_CODE], [dup(r1.c)], [dup(r1.d)]), output([AGGR_CODE], [dup(r1.c)], [dup(r1.d)]), filter(nil), rowset=256, dop=1  6 - output([AGGR_CODE], [dup(r1.c)], [dup(r1.d)]), filter(nil), rowset=256,      group([AGGR_CODE], [dup(r1.c)], [dup(r1.d)]), agg_func(nil)  7 - output([r1.c], [r1.d]), filter(nil), rowset=256  8 - output([r1.c], [r1.d]), filter(nil), rowset=256,      access([r1.c], [r1.d]), partitions(p[0-3])</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Parallel pushdown is common in distributed scenarios. In OceanBase Database V3.x, the distributed query performance often deteriorates due to the imperfection of the parallel pushdown feature. OceanBase Database V4.0 can resolve such issues to improve the distributed query performance.</p>
<p><strong>Final words</strong></p>
<p>In the end, I want to share with you the actual improvements made by OceanBase Database V4.0 in distributed query performance. Compared with OceanBase Database V3.x, OceanBase Database V4.0 implements a new distributed cost model, a distributed query optimization framework, a set of well-developed parallel pushdown techniques, and adaptive techniques. The development of these techniques is driven by our understanding of customer requirements and distributed systems.</p>
<p>We tested the techniques by running the TPC-DS benchmark with a scale factor of 100 GB. The test results show that the new techniques significantly improve the distributed query performance. The total execution duration of 99 queries decreases from 918s to 270s. The following figure compares the performance of queries in OceanBase Database V3.x and OceanBase Database V4.0 in the TPC-DS benchmark with a scale factor of 100 GB.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/733ccee4-16e2-4058-8444-9ef9003df85c/image/2022-11-30/bb5d7618-9c57-45d6-9547-3fea3c97e651.png" alt="" class="img_ev3q"></p>
<p>Performance comparison for the TPC-DS benchmark with a scale factor of 100 GB (OceanBase Database V3.x and V4.0)</p>
<p>These are our thoughts on the value and technical evolution of distributed query optimization of OceanBase Database V4.0. Databases are foundational software in essence. For software users, we hope that later OceanBase Database V4.x versions can bring better user experience and higher query performance based on distributed query optimization and technical innovations in the execution engine.</p>
<p>Welcome to follow <a href="https://open.oceanbase.com/blog" target="_blank" rel="noopener noreferrer">OceanBase Community</a>, where we will keep providing valuable technical content and grow together with millions of techies.</p>
<p>Search for 🔍 DingTalk group 33254054 or scan the following QR code to join the OceanBase technical consultation group, where you can get a solution to any technical issue.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/f4d95b17-3494-4004-8295-09ab4e649b68/image/2022-08-29/00ff7894-c260-446d-939d-f98aa6648760.png" alt="" class="img_ev3q"></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[OceanBase Cloud]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/obcloud</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/obcloud</guid>
            <pubDate>Mon, 03 Jun 2024 12:10:32 GMT</pubDate>
            <description><![CDATA[Cost reduction and efficiency improvement seem an eternal topic for any enterprises that are seeking sustainable development and profit. However, hasty rigid cost reduction measures tend to cause uncontrollable impact, leading to inefficient operation and slow business growth. By promoting cost reduction, we should aim at improving productivity while cutting operation costs.]]></description>
            <content:encoded><![CDATA[<p>Cost reduction and efficiency improvement seem an eternal topic for any enterprises that are seeking sustainable development and profit. However, hasty rigid cost reduction measures tend to cause uncontrollable impact, leading to inefficient operation and slow business growth. By promoting cost reduction, we should aim at improving productivity while cutting operation costs.</p>
<p>In the years when the conventional centralized databases dominated the industry, reducing costs without hurting database efficiency was really a headache for IT departments of many enterprises. Based on the content shared by OceanBase solution architect Gao Jiwei in OceanBase Cloud Open Class, this post compares OceanBase Cloud with MySQL, analyzes features that help enterprises increase efficiency with reduced costs, and discusses how to make cost reduction plans for small and medium-sized enterprises (SMEs) and large corporations by using two examples.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647401464.png" alt="1691647401" class="img_ev3q"></p>
<p>In recent years, enterprises have been increasing their efforts to reduce costs and increase efficiency, but mostly by downgrading resource specifications, which could pose unbearable risk, especially for databases, the cornerstone of a software architecture.</p>
<p>Therefore, it is crucial to find a way that reduces costs while ensuring a very high throughput without compromising performance stability. This is what OceanBase is doing right now. We are designing cost reduction solutions leveraging our technical know-how. Let's first look at the following figure, which shows a general comparison between MySQL and OceanBase Cloud.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647424030.png" alt="1691647424" class="img_ev3q"></p>
<ul>
<li><strong>MySQL downside No. 1: numerous complex instances</strong>. In a MySQL cluster, the resource usage of some instances is higher than others. This resource usage imbalance makes O&amp;M more difficult. OceanBase Cloud features a natively distributed architecture, which allows you to consolidate MySQL instances into tenants of one cluster. This simplifies O&amp;M and improves the overall utilization of cluster resources.</li>
<li><strong>MySQL downside No. 2: uncompressed data</strong>. MySQL adopts a B+ tree-based storage structure, which has been in use for years. An inherent flaw of this structure is that unused space exists on each page. OceanBase Cloud comes with a fully self-developed log-structured merge-tree (LSM-tree)-based storage structure. By using unique compression algorithms, OceanBase Cloud compresses a data set to 1/4 to 1/5 or even less of its original size in MySQL. Such a high compression ratio greatly reduces the storage costs.</li>
<li><strong>MySQL downside No. 3: poor scalability</strong>. MySQL Database runs in primary/secondary mode. Server replacement is inevitable if you want to scale its capacity. To replace a server, a primary/secondary switchover is performed, which causes considerable application interruptions. For that reason, it is often necessary to configure a MySQL database against the maximum possible traffic to avoid a switchover. For example, if eight CPU cores are enough most of the time, but 16 CPU cores are required to handle occasional peak traffic, a MySQL database must be configured with 16 CPU cores. OceanBase Cloud is capable of fast and flexible scaling. You can scale specifications up and down as needed, saving costs significantly.</li>
<li><strong>MySQL downside No. 4: weak analysis capabilities</strong>. A MySQL database handles only online transaction processing (OLTP) tasks. To cope with the business involving analytical reports, users must migrate data to a separately built analytical instance, leading to doubled costs. OceanBase Cloud provides hybrid transaction/analytical processing (HTAP) capabilities, which allow users to complete most less complicated tasks all in the same database without creating an analytical instance.</li>
</ul>
<p>To reduce the overall cost, OceanBase provides targeted solutions to address inherent drawbacks of the MySQL architecture, such as low resource utilization and high resource redundancy. In fact, OceanBase Cloud reduces the total cost of ownership (TCO) by 30%. For more information, see <a href="https://mp.weixin.qq.com/s?__biz=MzU0ODg0OTIyNw==&amp;mid=2247500776&amp;idx=1&amp;sn=eb7f931f2d1c59fdac8ca07d55f15c5a&amp;chksm=fbba50cccccdd9daf6b0bfb49d68196450e64bbabe5fbb0d9a6e43c8724ba01fd73453a73d83&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">How can OceanBase Cloud help users achieve sustainable cost reduction and efficiency improvement? </a></p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647534704.png" alt="1691647534" class="img_ev3q"></p>
<p>Before we delve into the features, let me walk you through the overall system architecture of OceanBase Cloud, so that you can get familiar with the following terms: OBProxy, OBServer node, partition, zone, and Paxos group.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647552979.png" alt="1691647553" class="img_ev3q"></p>
<ul>
<li>
<p><strong>OBProxy:</strong> Applications connect to OceanBase Cloud through a component called OBProxy. Unlike other middleware, OBProxy is a lightweight node. It only forwards SQL queries without evaluating them. In OceanBase Cloud, OBProxy is not charged.</p>
</li>
<li>
<p><strong>Zone:</strong> A zone of OceanBase Cloud corresponds to an IDC. By default, an OceanBase cluster is deployed across three zones. Each zone contains at least one OBServer node, and hosts many partitions. Therefore, OceanBase Cloud provides IDC-level high availability by default.</p>
</li>
<li>
<p><strong>OBServer node:</strong> An OBServer node is where OceanBase Cloud execute SQL queries or stores data. OceanBase Cloud supports powerful horizontal scaling, which allows users to add more OBServer nodes to each zone.</p>
</li>
<li>
<p><strong>Partition:</strong> A partition is the elementary unit of load balancing in OceanBase Cloud. If a table is divided into several parts, each part is a partition. The whole of a non-partitioned table can be considered as a partition.</p>
</li>
<li>
<p><strong>Paxos group:</strong> In the preceding figure, for example, the three replicas of partition P7 distributed in three zones form a Paxos group. Unlike the primary/secondary mode of MySQL, OceanBase Cloud synchronizes data among replicas based on the Paxos consensus algorithm, which supports automatic elections without external intervention. In other words, the three replicas of P7 can automatically elect the leader. As shown in the figure, the leader is in zone1 at the moment.</p>
<p>In a MySQL database, the data to be synchronized is converted into logical binary logs (binlogs), which are then synchronized from the primary node to the secondary nodes and then converted back into physical logs.</p>
</li>
</ul>
<p>Not involving such complex conversion, the Paxos consensus algorithm works with less latency and higher reliability. At any given moment, Paxos requires the agreement of two of the three replicas to elect the leader and commit logs. This way, OceanBase Cloud can maintain data integrity even in the case of an IDC-level failure. In fact, OceanBase Cloud can recover its service from failures of any level within 30 seconds. In the latest version, the recovery time is reduced to 8 seconds, showing great availability improvement compared with MySQL.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="i-consolidate-multiple-instances-into-tenants-of-one-cluster-to-optimize-resource-utilization-and-make-om-easier"><strong>I. Consolidate multiple instances into tenants of one cluster to optimize resource utilization and make O&amp;M easier</strong><a href="https://powerfooi.github.io/docs-playground/blog/obcloud#i-consolidate-multiple-instances-into-tenants-of-one-cluster-to-optimize-resource-utilization-and-make-om-easier" class="hash-link" aria-label="Direct link to i-consolidate-multiple-instances-into-tenants-of-one-cluster-to-optimize-resource-utilization-and-make-om-easier" title="Direct link to i-consolidate-multiple-instances-into-tenants-of-one-cluster-to-optimize-resource-utilization-and-make-om-easier">​</a></h2>
<p>The left part of the figure shows a common deployment mode, where one database instance is created for each application. However, this deployment mode often leads to resource utilization imbalance among multiple database instances. For example:</p>
<ul>
<li>Instance 1 hosts an internal HR system with very low daily traffic, and the resource utilization ranges from 5% to 10%.</li>
<li>Instance 2 hosts an e-commerce system, which handles flash sales from time to time, leading to fluctuating transaction volumes. As a result, the resource utilization also severely fluctuates from 3% to 80%</li>
<li>Instance 3 hosts a busy system, whose resource utilization remains high all the time.</li>
</ul>
<p>When a DBA or O&amp;M engineer maintains those systems, they have to check multiple MySQL instances in the console, which means high O&amp;M complexity and risks.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647654901.png" alt="1691647655" class="img_ev3q"></p>
<p>In an OceanBase cluster, you can deploy a resource pool of many OBServer nodes and resources. Then, you can allocate resources exclusive to each tenant, and host each original RDS or MySQL instance in a tenant of the OceanBase cluster. This way, you need to maintain only one OceanBase cluster, significantly reducing the O&amp;M complexity.</p>
<p>The benefits are that you can dynamically adjust tenant specifications anytime without affecting your business, and flexibly schedule resources to optimize the overall resource utilization, leading to a significant cost cut.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ii-reduce-storage-costs-by-using-an-advanced-lsm-tree-based-compression-engine"><strong>II. Reduce storage costs by using an advanced LSM-tree-based compression engine</strong><a href="https://powerfooi.github.io/docs-playground/blog/obcloud#ii-reduce-storage-costs-by-using-an-advanced-lsm-tree-based-compression-engine" class="hash-link" aria-label="Direct link to ii-reduce-storage-costs-by-using-an-advanced-lsm-tree-based-compression-engine" title="Direct link to ii-reduce-storage-costs-by-using-an-advanced-lsm-tree-based-compression-engine">​</a></h2>
<p>OceanBase Cloud uses an advanced LSM-tree-based storage engine developed in house. Unlike B+ tree, the OceanBase storage engine first stores written data in memory, and when the amount of data in memory reaches a specified threshold, dumps the data to disk. The storage engine compresses the data dumps and merges them with baseline SSTables (ROS) on a daily basis during off-peak hours, starting from 2:00 a.m. by default. This process is named as major compaction. The LSM-tree-based storage stores baseline data in a compact manner. Therefore, compared with B+ tree-based MySQL, OceanBase Cloud inherently provides a higher compression ratio.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647698306.png" alt="1691647698" class="img_ev3q"></p>
<p>In addition, on top of the effect of the LSM-tree architecture, OceanBase Cloud compresses a data set twice.</p>
<p>OceanBase Cloud uses hybrid row-column storage architecture based on microblocks. Each microblock corresponds to a layer of a MySQL page. This way, row-based storage is converted to columnar storage. One of the benefits of columnar storage is that, OceanBase Cloud can compress the columnar storage for the first time by encoding.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647731261.png" alt="1691647731" class="img_ev3q"></p>
<p>We often deal with highly repeated columns in development, such as the <code>RATE_ID</code> column that contains four values that occur repeatedly in the preceding figure. In this case, we can map the values to a dictionary. For example, the value <code>1901321</code> in the column maps to <code>0</code> in the dictionary. As long as the dictionary is maintained, values of each column can be simply stored as, for example, <code>0</code>, <code>1</code>, and <code>2</code>, thus greatly compressing the storage. In practice, OceanBase will adaptively design a encoding method suitable for each application.</p>
<p>After the first compression, a data set of 100 GB may be compressed to 30 GB. Then, OceanBase Cloud will compress the 30 GB of data further by using a general compression algorithm, such as LZ4.</p>
<p>After the second compression, the data set may be compressed to 15 GB. In other words, 100 GB of data in MySQL may occupy only 15 GB of disk space in OceanBase Cloud. In practice, we have compressed data to less than 15% its original size for many of our customers, significantly reducing storage costs.</p>
<p>Some may worry that such a high compression ratio will affect the real-time read/write performance. Well, relax. The LSM-tree-based storage engine compresses data during the daily major compaction, which often takes place after 2:00 a.m. Besides, you can specify when to start the major compaction based on your actual off-peak hours. This way, your business will not suffer from performance loss during the day, and the high compression ratio allows you to cut the storage costs.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iii-handle-peak-traffic-with-rapid-flexible-scaling"><strong>III. Handle peak traffic with rapid flexible scaling</strong><a href="https://powerfooi.github.io/docs-playground/blog/obcloud#iii-handle-peak-traffic-with-rapid-flexible-scaling" class="hash-link" aria-label="Direct link to iii-handle-peak-traffic-with-rapid-flexible-scaling" title="Direct link to iii-handle-peak-traffic-with-rapid-flexible-scaling">​</a></h2>
<p>With the multi-level auto scaling capability of OceanBase Cloud, you can adjust resources of an OceanBase cluster at any time as your business grows. This way, you can flexibly control your resource bills and O&amp;M tasks. OceanBase Cloud supports triple-level scalability. Specifically, you can scale your database by adjusting tenant specifications, OBServer node specifications, and the number of OBServer nodes.</p>
<p><strong>◼ Level 1 scaling: adjustment of tenant specifications</strong></p>
<p>With a distributed architecture, OceanBase Cloud contains multiple OBServer nodes in a resource pool, which is divided into isolated resource groups. Each resource group is called a tenant. To increase the capacity of your database, you can first scale up tenant specifications. The adjustment of tenant specifications is completed within the OceanBase Database kernel, and does not involve changes of physical resources. In addition, the adjustment takes effect within seconds and has no impact on applications.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647784065.png" alt="1691647784" class="img_ev3q"></p>
<p>The O&amp;M team can adjust the number of CPU cores and memory size of a tenant at any time to smoothly improve the maximum transactions that can be processed per second (TPS) by the tenant. For example, they can adjust the resources during normal business hours.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647808099.png" alt="1691647808" class="img_ev3q"></p>
<p><strong>◼ Level 2 scaling: adjustment of OBServer node specifications</strong></p>
<p>If the Level 1 scaling cannot handle the soaring business traffic, you can increase specifications of the OBServer nodes, which is also known as vertical scaling. For example, you can scale the number of CPU cores of a cluster from 30 to 62. Unlike a MySQL database, whose capacity expansion involves a primary/secondary switchover, and causes business interruptions, OceanBase Cloud synchronizes data among nodes over the Paxos protocol, which features automatic leader election and automatic decision of whether to commit a log.</p>
<p>This brings two advantages:</p>
<ul>
<li>OceanBase Cloud synchronizes data by a smaller data unit, delivering higher performance and flexibility. Compared with node-level log synchronization of MySQL, partitions of a Paxos group in OceanBase Cloud are smaller in size. This avoids the need of compromising performance for ensuring the global order. In addition, OceanBase Cloud supports distributed transactions and allows leaders to be stored on different nodes. As shown in the figure depicting the overall system architecture of OceanBase Cloud, the leaders (indicated in dark blue) are distributed on different nodes to support multi-point writing. This makes full use of resources of multiple servers and allows you to add more nodes.</li>
<li>OceanBase Cloud synchronizes data by using more lightweight physical transaction logs (clogs) at lower costs over the Paxos protocol. When a MySQL database synchronizes data, the primary node generates logical binlogs, which are synchronized to the secondary nodes and then converted into relay logs for execution. With lighter and more efficient clogs, plus the partition-level synchronization granularity of the Paxos protocol, OceanBase Cloud is not affected by the troublesome primary/secondary synchronization latency like MySQL.</li>
</ul>
<p>When you adjust node specifications during scaling, OceanBase Cloud first mounts a node and synchronizes data to it from the leader. When the leader commits its last clog, OceanBase Cloud initiates a Paxos-based leader election, where the current leader gives up its leader role and votes for another node. Then, the leader role is smoothly switched to another node. This scale-up process of OceanBase Cloud, compared with MySQL, is nearly transparent to applications.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647875877.png" alt="1691647876" class="img_ev3q"></p>
<p><strong>◼ Level 3 scaling: adjustment of the number of OBServer nodes</strong></p>
<p>This is something that cannot be done by using a MySQL database in primary/secondary architecture. With its native distributed architecture, OceanBase Cloud supports distributed transactions and horizontal scale-out with zero business interruptions. Specifically, once an OBServer node is added to an OceanBase cluster, business traffic is automatically channeled to this new node. During this process, applications use the cluster like a standalone MySQL database without being affected. This benefit has been proven to be a better solution than database and table sharding in many engineering practices.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647918807.png" alt="1691647918" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iv-handle-oltp-and-olap-in-one-htap-capable-system"><strong>IV. Handle OLTP and OLAP in one HTAP-capable system</strong><a href="https://powerfooi.github.io/docs-playground/blog/obcloud#iv-handle-oltp-and-olap-in-one-htap-capable-system" class="hash-link" aria-label="Direct link to iv-handle-oltp-and-olap-in-one-htap-capable-system" title="Direct link to iv-handle-oltp-and-olap-in-one-htap-capable-system">​</a></h2>
<p>MySQL is a typical OLTP database system. Therefore, its optimizer shows unsatisfactory performance in joining large tables and handling queries with large result sets. In a MySQL database, it sometimes takes forever to execute an SQL query, and it does not support flexible resource isolation. Transaction processing (TP) tasks are often affected by large SQL statements. That is why everybody is avoiding using MySQL for analytical processing (AP) tasks.</p>
<p>What if AP tasks are unavoidable? A common solution is to build a dedicated analytical instance and execute AP tasks through the asynchronous extract-transform-load (ETL) process. This solution inevitably incurs costs of the transmission service and the analytical instance.</p>
<p>OceanBase Cloud is an HTAP-capable system that handles both OLTP and online analytical processing (OLAP) requests in the same cluster. So why does OceanBase Cloud outperform MySQL in this regard? We have strengthened its AP capabilities from the following four aspects:</p>
<ul>
<li>OceanBase Cloud provides an enterprise-level optimizer that is comparable to the Oracle optimizer. Despite the query complexity, for example, joining more than 10 tables, or the way an SQL statement is written, the OceanBase optimizer generates optimal execution plans to guarantee the lowest cost of SQL executions.</li>
<li>As mentioned earlier, OceanBase Cloud stores data in microblocks by column. AP tasks that are executed by columns can be faster based on columnar storage.</li>
<li>OceanBase Cloud supports parallel execution. It divides a large SQL execution plan into multiple smaller tasks and launch multiple threads to process these small tasks in parallel. At present, SQL queries and DML and DDL operations can be executed in parallel to accelerate AP tasks.</li>
<li>OceanBase Cloud provides a vectorized execution engine. Compared with a volcano model that reads data by row, the vectorized engine reads data in batches, which is more friendly to large analytical SQL queries.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691647973201.png" alt="1691647973" class="img_ev3q"></p>
<p>The HTAP capabilities of OceanBase Cloud allow you to handle AP and TP requests in one system by using the same data set, without incurring extra costs or the need of creating a dedicated analytical node.</p>
<p>You may be worried that TP tasks are impacted by AP tasks. OceanBase Cloud solves that issue by providing multiple resource isolation methods:</p>
<ul>
<li>Physical isolation between tenants: A dedicated tenant is created to handle AP business.</li>
<li>Physical isolation between zones in the same tenant: A dedicated zone that contains only read-only replicas is created to handle AP business.</li>
<li>Isolation between resource groups in the same tenant: Dedicated resources of a node are allocated to handle AP business through resource isolation.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691648013527.png" alt="1691648013" class="img_ev3q"></p>
<p>As a DBA or O&amp;M engineer, how can you make use of OceanBase Cloud capabilities to achieve significant cost reduction for your enterprise?</p>
<p>Generally, you can deploy an OceanBase cluster whose CPU and memory resources are 80% to 95% of those of your original MySQL database and storage capacity is 15% to 20% thereof. Here are two examples to help you develop a cost reduction plan based on OceanBase Cloud and estimate the result.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-1-cost-reduction-plan-for-an-sme">Example 1: Cost reduction plan for an SME<a href="https://powerfooi.github.io/docs-playground/blog/obcloud#example-1-cost-reduction-plan-for-an-sme" class="hash-link" aria-label="Direct link to Example 1: Cost reduction plan for an SME" title="Direct link to Example 1: Cost reduction plan for an SME">​</a></h3>
<p>As shown in the following figure, the enterprise has one RDS instance with 16 CPU cores, two RDS instances with 16 CPU cores each, and four RDS instances with 2 CPU cores each, which is a typical product array.</p>
<ul>
<li>The largest 16C instance hosts core external business of the enterprise, and runs with high resource utilization.</li>
<li>The two 4C instances handle secondary business, such as the business of an inventory or order management system. Their resource utilization is lower than the core instance.</li>
<li>The four 2C instances handle internal business.</li>
</ul>
<p>The resource utilization of these instances will fluctuate with the business traffic, causing troubles in O&amp;M. Given the aforesaid specification estimation rule, the enterprise can migrate all its business systems to an OceanBase cluster with 30 CPU cores and 1.5 TB of storage. The OceanBase cluster not only takes care of all its business modules, but also optimizes its imbalanced resource utilization to a healthy level.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691648052884.png" alt="1691648052" class="img_ev3q"></p>
<p>In this example, OceanBase Cloud is deployed across multiple zones and is compared against a MySQL cluster. The MySQL cluster also requires multi-zone deployment where each zone is configured with exclusive resources. They are tested by using Sysbench with 1,000 concurrent read/write processes. OceanBase Cloud reduces the cost by about 30%, and the result comparison is shown in the following figure.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691648078609.png" alt="1691648078" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="example-2-cost-reduction-plan-for-a-corporation">Example 2: Cost reduction plan for a corporation<a href="https://powerfooi.github.io/docs-playground/blog/obcloud#example-2-cost-reduction-plan-for-a-corporation" class="hash-link" aria-label="Direct link to Example 2: Cost reduction plan for a corporation" title="Direct link to Example 2: Cost reduction plan for a corporation">​</a></h2>
<p>This corporation runs a 32C RDS instance to support its core business, a 16C RDS instance to support its secondary business, and five 4C RDS instances to support its internal low-traffic business. The overall resource utilization of the RDS instances is roughly the same with that in Example 1. The corporation can host all its RDS instances in an OceanBase cluster with 62 CPU cores and 4 TB of storage.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691648109839.png" alt="1691648109" class="img_ev3q"></p>
<p>Regarding how to plan costs, here is a brief introduction to the difference between the two. In the Sysbench test scenario with 1,000 concurrent read/write processes, if the primary node of a MySQL database uses 68 CPU cores, another 136 CPU cores must be used for the secondary nodes, resulting in serious resource waste. OceanBase Cloud, on the contrary, allows both its leader and follower replicas to share the 62 CPU cores of all OBServer nodes, reducing the total cost by about 40%. The result comparison is shown in the following figure.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-08/1691648148198.png" alt="1691648148" class="img_ev3q"></p>
<p>In general, we should combine cost reduction with efficiency improvement. OceanBase Cloud relies on technical means to reduce costs, in the expectation that the overall value of a database can be improved without sacrificing data throughput, high availability, online DDL capability, or O&amp;M friendliness for cost reduction.</p>
<p>As OceanBase Cloud becomes better, we hope that it can bring more benefits to enterprises and help enterprises boost efficiency at reduced costs. In this way, related personnel such as DBAs and O&amp;M engineers can be freed from burdensome maintenance chores and have more time to create greater value for the enterprise.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[OceanBase 4.3 - Milestone release for real-time AP analysis]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/ob-430</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/ob-430</guid>
            <pubDate>Mon, 03 Jun 2024 12:08:28 GMT</pubDate>
            <description><![CDATA[1713848983]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713848982839.png" alt="1713848983" class="img_ev3q"></p>
<p>In early 2023, OceanBase Database V4.1 was released. It is the first milestone version of the V4.x series and supports an integrated architecture for standalone and distributed modes. Such integrated architecture reduces the recovery time objective (RTO), a database reliability indicator, to less than 8 seconds, ensuring rapid database recovery from an unexpected failure. Unlike the V3.x series, the new version does not limit the number of partitions, providing higher capacity for processing large transactions. Core features such as the arbitration replica are supported to cut costs.</p>
<p>In September 2023, OceanBase Database V4.2.1 was released. As the first long-term supported (LTS) version of the V4.x series, it augments all core features of the V3.x series, and demonstrates improved performance in many aspects such as stability, scalability, support for small specifications, and ease of diagnostics. Six months after its release, hundreds of customers have deployed this LTS version in their production environments for stable operations.</p>
<p>To meet higher expectations on ease-of-use and capabilities of tackling miscellaneous workloads, we have released OceanBase Database V4.3.0, which is rigorously implemented on top of open design after thorough research.</p>
<p>OceanBase Database V4.3.0 sets a significant milestone on our roadmap to achieve real-time analytical processing (AP). This version provides a columnar engine based on the log-structured merge-tree (LSM-tree) architecture, which implements hybrid columnar and row-based storage. The database also introduces a new vectorized engine based on column data format descriptions and a cost model based on columnar storage. This way, wide tables can be effectively processed and the query performance in AP scenarios is significantly improved without affecting transactional processing (TP) business scenarios. Overall, the new OceanBase Database version is well-suited for mixed workload scenarios involving complex analytics, real-time reporting, real-time data warehousing, and online transactions. The materialized view feature is provided. Query results are pre-calculated and stored in materialized views to improve real-time query performance, and support rapid report generation and data analysis. The kernel in the new version also extends online DDL and adds support for tenant cloning. It has optimized performance and system resource usage, and provides better system usability. In a test with the same hardware configurations, the performance of OceanBase Database V4.3.0 in wide-table queries is comparable with mainstream columnstore databases in the industry.</p>
<p>Now, let's take a closer look at key updates of OceanBase Database V4.3.0:</p>
<p>○ TP and AP integration</p>
<p>○ High-performance kernel</p>
<p>○ Higher computing performance</p>
<p>○ Ease-of-use enhancements</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="i-tp-and-ap-integration"><strong>I. TP and AP integration</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#i-tp-and-ap-integration" class="hash-link" aria-label="Direct link to i-tp-and-ap-integration" title="Direct link to i-tp-and-ap-integration">​</a></h2>
<p>In addition to features of V4.2, such as highly concurrent real-time row updates, and point queries of the primary key indexes, OceanBase Database V4.3.0 introduces more AP services. Its scalable distributed architecture also supports high availability, strong consistency, and geo-disaster recovery. The new version provides a columnar engine and enhances vectorized execution, parallel computing, and distributed plan optimization. This way, the database supports both TP and AP business.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-integrated-columnar-and-row-based-storage"><strong>(1) Integrated columnar and row-based storage</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#1-integrated-columnar-and-row-based-storage" class="hash-link" aria-label="Direct link to 1-integrated-columnar-and-row-based-storage" title="Direct link to 1-integrated-columnar-and-row-based-storage">​</a></h3>
<p>Columnar storage is one of the key capabilities of AP databases in complex large-scale data analysis and ad hoc queries of massive data. Columnar storage is a way to organize data files. Different from row-based storage, columnar storage physically arranges data in a table by column. When data is stored by column, the system can scan only the columns involved in the query and calculation, instead of scanning the entire row. This way, the consumption of resources such as I/O and memory is reduced and the calculation is accelerated. Moreover, columnar storage naturally provides better data compression conditions, making it easier to achieve higher compression ratios, thereby reducing storage space and network transmission bandwidth.</p>
<p>However, columnar engines generally assume limited random updates and attempt to ensure that data in columnar storage is static. When a large amount of data is updated randomly, system performance will inevitably degrade. The LSM-tree architecture of OceanBase Database can process baseline data and incremental data separately, and therefore can solve the performance issue. Therefore, OceanBase Database V4.3.0 supports the columnar engine based on the current architecture, implementing integrated columnar and row-based data storage on an OBServer node with only one set of code and one architecture, and ensuring the performance of both TP and AP queries.</p>
<p>To help users with AP requirements smoothly use the new version, OceanBase Database has adapted and optimized several modules, including the optimizer, executor, DDL, and transaction processing, for the columnar engine. These optimizations introduce a new cost model and vectorized engine based on columnar storage, enhancements to the query pushdown feature, and features like skip index, a new column-based encoding algorithm, and adaptive compactions.</p>
<p>To make AP queries easy, we recommend that you run the following command in a MySQL or Oracle tenant of OceanBase Database to create a columnstore table by default:</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">alter</span><span class="token plain"> system </span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> default_table_store_format </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"column"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You can flexibly create a business table as a rowstore table, columnstore table, or hybrid rowstore-columnstore table based on the load type. You can also create a columnstore index for a rowstore table.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713849285226.png" alt="1713849286" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713849296536.png" alt="1713849297" class="img_ev3q"></p>
<p>The optimizer determines, based on estimated costs, whether to scan a hybrid rowstore-columnstore table by row or by column.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713849310310.png" alt="1713849311" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-new-vectorized-engine"><strong>(2) New vectorized engine</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#2-new-vectorized-engine" class="hash-link" aria-label="Direct link to 2-new-vectorized-engine" title="Direct link to 2-new-vectorized-engine">​</a></h3>
<p>Earlier versions of OceanBase Database have implemented a vectorized engine based on uniform data format descriptions, offering performance significantly better than that of non-vectorized engines. However, the engine still has some performance deficiencies in deep AP scenarios. OceanBase Database V4.3.0 implements the vectorized engine 2.0, which is based on column data format descriptions, avoiding the memory usage, serialization, and read/write access overhead caused by ObDatum maintenance. Based on the reconstruction of data format descriptions, the new vectorized engine also reimplements more than 10 commonly used operators such as HashJoin, AGGR, HashGroupBy, and Exchange (DTL Shuffle), as well as over 20 MySQL expressions including relational operations, logical operations, and arithmetic operations. Subsequent V4.3.x versions will further improve and implement other operators and expressions based on the new vectorized engine to achieve better performance.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-materialized-views"><strong>(3) Materialized views</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#3-materialized-views" class="hash-link" aria-label="Direct link to 3-materialized-views" title="Direct link to 3-materialized-views">​</a></h3>
<p>OceanBase Database V4.3.0 introduces materialized views. Materialized views are a key feature for AP business scenarios. By precomputing and storing the query results of views, real-time calculations are reduced to improve query performance and simplify complex query logic. Materialized views are commonly used for rapid report generation and data analysis scenarios.</p>
<p>Materialized views need to store query result sets to optimize the query performance. Due to data dependency between a materialized view and its base tables, data in the materialized view must be refreshed accordingly when data in any base tables changes. Therefore, the materialized view refresh mechanism is also introduced in the new version, including complete refresh and incremental refresh strategies. Complete refresh is a relatively direct method. Each time a refresh operation is performed, the system re-executes the corresponding query statement of a materialized view to recalculate and overwrite the original result set. This method is applicable to scenarios with a small amount of data. Incremental refresh, by contrast, only deals with data that has been changed since the last refresh. To achieve accurate incremental refresh, OceanBase Database implements a materialized view log feature that is similar to Oracle Materialized View Log (MLOG). The feature tracks incremental data updates in base tables and records the updates in logs. This ensures that materialized views can be refreshed incrementally in a short period. Incremental refresh is particularly useful in business scenarios with large data volume and frequent data changes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ii-high-performance-kernel"><strong>II. High-performance kernel</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#ii-high-performance-kernel" class="hash-link" aria-label="Direct link to ii-high-performance-kernel" title="Direct link to ii-high-performance-kernel">​</a></h2>
<p>The kernel in the new version has enhanced the cost model, added support for tenant cloning, extended online DDL, and Amazon Simple Storage Service (S3) as the backup and restore media, restructured the session management module, and optimized log stream state machine and system resource usage, to improve database performance and stability in handling key business workloads.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-enhanced-row-estimation-system"><strong>(1) Enhanced row estimation system</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#1-enhanced-row-estimation-system" class="hash-link" aria-label="Direct link to 1-enhanced-row-estimation-system" title="Direct link to 1-enhanced-row-estimation-system">​</a></h3>
<p>As the OceanBase Database version evolves, more cost estimation methods are available for the optimizer. For row estimation of each operator, a variety of algorithms, such as row estimation based on the storage layer, row estimation based on statistics, dynamic sampling, and default statistics, are supported. However, there are no clear strategies and complete control methods for using row estimation. OceanBase Database V4.3.0 reconstructs the row estimation system. Specifically, it prioritizes row estimation strategies based on scenarios and provides methods such as hints and system variables for you to manually intervene the selection of a row estimation strategy. This version also enhances the predicate selectivity and number of distinct values (NDV) calculation framework to improve the accuracy of cost estimation by the optimizer.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-enhanced-statistics"><strong>(2) Enhanced statistics</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#2-enhanced-statistics" class="hash-link" aria-label="Direct link to 2-enhanced-statistics" title="Direct link to 2-enhanced-statistics">​</a></h3>
<p>OceanBase Database V4.3.0 improves the statistics feature, statistics collection performance, and the compatibility and usability of statistics. Specifically, this version reconstructs the offline statistics collection process to improve the collection efficiency, optimizes the statistics collection strategies to automatically collect information about index histograms by default and collect statistics in a deductive manner, and ensures transaction consistency for online statistics collection. It is compatible with the <code>DBMS_STATS.COPY_TABLE_STATS</code> procedure of Oracle for statistics copying, and is also compatible with the <code>ANALYZE TABLE</code> statement of MySQL. It provides a command to cancel statistics collection, enriches the monitoring on the statistics collection progress, and enhances maintenance usability. It also supports the parallel deletion of statistics.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-adaptive-cost-model"><strong>(3) Adaptive cost model</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#3-adaptive-cost-model" class="hash-link" aria-label="Direct link to 3-adaptive-cost-model" title="Direct link to 3-adaptive-cost-model">​</a></h3>
<p>In earlier versions of OceanBase Database, the cost model uses constant parameters measured by internal machines to represent hardware system statistics, and describes the execution overhead of each operator by using a series of formulas and constant parameters. However, in real business scenarios, different hardware environments may have different CPU clock frequencies, sequential or random read speeds, and NIC bandwidths, thereby resulting in cost estimation deviations. The optimizer cannot generate optimal plans in different business environments because of these deviations. The new version implements the cost model in an optimized way to support the <code>DBMS_STATS</code> package for collecting or setting system statistics coefficients, thus adapting the cost model to hardware. It also provides the <code>DBA_OB_AUX_STATISTICS</code> view to display the system statistics coefficients of the current tenant.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-fixed-session-variables-for-function-based-indexes"><strong>(4) Fixed session variables for function-based indexes</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#4-fixed-session-variables-for-function-based-indexes" class="hash-link" aria-label="Direct link to 4-fixed-session-variables-for-function-based-indexes" title="Direct link to 4-fixed-session-variables-for-function-based-indexes">​</a></h3>
<p>When a function-based index is created on a table, a hidden virtual generated column is added to the table and defined as the index key of the function-based index. The values of the virtual generated column are stored in the index table. The results of some built-in system functions are affected by session variables. The calculation result of a function varies based on the values of session variables, even if the input arguments are the same. When a function-based index or generated column is created in this version, session variables on which the function-based index or generated column depends are fixed in the column schema to improve stability. When values of the indexed column or generated column are calculated, fixed session variable values are used. Therefore, the calculation result is not affected by variable values in the current session. OceanBase Database V4.3.0 supports fixed values of the system variables <code>timezone_info</code>, <code>nls_format</code>, <code>nls_collation</code>, and <code>sql_mode</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-online-ddl-expansion-in-mysql-mode"><strong>(5) Online DDL expansion in MySQL mode</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#5-online-ddl-expansion-in-mysql-mode" class="hash-link" aria-label="Direct link to 5-online-ddl-expansion-in-mysql-mode" title="Direct link to 5-online-ddl-expansion-in-mysql-mode">​</a></h3>
<p>OceanBase Database V4.3.0 supports more online DDL scenarios for column type changes, including:</p>
<p>○ Conversion of integer types: Online DDL operations, instead of offline DDL operations, are performed to change the data type of a primary key column, index column, generated column, column on which a generated column depends, or column with a <code>UNIQUE</code> or <code>CHECK</code> constraint to an integer type with a larger value range.</p>
<p>○ Conversion of the DECIMAL data type: For columns that support the DECIMAL data type, online DDL operations are performed to increase the precision within any of the [1,9], [10,18], [19,38], and [39,76] ranges without changing the scale.</p>
<p>○ Conversion of the BIT or CHAR data type: For columns that support the BIT or CHAR data type, online DDL operations are performed to increase the width.</p>
<p>○ Conversion of the VARCHAR or VARBINARY data type: For columns that support the VARCHAR or VARBINARY data type, online DDL operations are performed to increase the width.</p>
<p>○ Conversion of the LOB data type: To change the data type of a column that supports LOB data types to a LOB data type with a larger value range, offline DDL operations are performed for columns of the TINYTEXT or TINYBLOB data type, and online DDL operations are performed for columns of other data types.</p>
<p>○ Conversion between the TINYTEXT and VARCHAR data types: For columns that support the TINYTEXT data type, online DDL operations are performed to change the VARCHAR(x) data type to the TINYTEXT data type if <code>x &lt;= 255</code>, and offline DDL operations are performed if otherwise. For columns that support the VARCHAR data type, online DDL operations are performed to change the TINYTEXT data type to the VARCHAR(x) data type if <code>x &gt;= 255</code>, and offline DDL operations are performed if otherwise.</p>
<p>○ Conversion between the TINYBLOB and VARBINARY data types: For columns that support the TINYBLOB data type, online DDL operations are performed to change the VARBINARY(x) data type to the TINYBLOB data type if <code>x &lt;= 255</code>, and offline DDL operations are performed if otherwise. For columns that support the VARBINARY data type, online DDL operations are performed to change the TINYBLOB data type to the VARBINARY(x) data type if <code>x &gt;= 255</code>, and offline DDL operations are performed if otherwise.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-globally-unique-client-session-id"><strong>(6) Globally unique client session ID</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#6-globally-unique-client-session-id" class="hash-link" aria-label="Direct link to 6-globally-unique-client-session-id" title="Direct link to 6-globally-unique-client-session-id">​</a></h3>
<p>Prior to OceanBase Database V4.3.0 and OceanBase Database Proxy (ODP) V4.2.3, when the client executes <code>SHOW PROCESSLIST</code> through ODP, the client session ID in ODP is returned. However, when the client queries the session ID by using an expression such as <code>connection_id</code> or from a system view, the session ID on the server is returned. A client session ID corresponds to multiple server session IDs. This causes confusion in session information queries and makes user session management difficult. In the new version, the client session ID generation and maintenance process is reconstructed. When the version of OceanBase Database is not earlier than V4.3.0 and the version of ODP is not earlier than V4.2.3, the session IDs returned by various channels, such as the <code>SHOW PROCESSLIST</code> command, the <code>information_schema.PROCESSLIST</code> and <code>GV$OB_PROCESSLIST</code> views, and the <code>connection_id</code>, <code>userenv('sid')</code>, <code>userenv('sessionid')</code>, <code>sys_context('userenv','sid')</code>, and <code>sys_context('userenv','sessionid')</code> expressions, are all client session IDs. You can specify a client session ID in the SQL or PL command <code>KILL</code> to terminate the corresponding session. If the preceding version requirements for OceanBase Database and ODP are not met, the handling method in earlier versions is used.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-improvement-of-the-log-stream-state-machine"><strong>(7) Improvement of the log stream state machine</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#7-improvement-of-the-log-stream-state-machine" class="hash-link" aria-label="Direct link to 7-improvement-of-the-log-stream-state-machine" title="Direct link to 7-improvement-of-the-log-stream-state-machine">​</a></h3>
<p>In OceanBase Database V4.3.0, the log stream status is split into the in-memory status and persistent status. The persistent status indicates the life cycle of a log stream. After the OBServer node where a log stream resides breaks down and then restarts, the system determines whether the log stream should exist and what the in-memory status of the log stream should be based on the persistent status of the log stream. The in-memory status indicates the runtime status of a log stream, representing the overall status of the log stream and the status of key submodules. Based on the explicit status and status sequence of the log stream, underlying modules can determine which operations are safe to the log stream and whether the log stream has gone through a status change of the ABA type. For backup and restore or migration processes, the working status of a log stream is optimized after the OBServer node where the log stream resides restarts. This feature improves the stability of log stream-related features and enhances the concurrency control on log streams.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="8-tenant-cloning"><strong>(8) Tenant cloning</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#8-tenant-cloning" class="hash-link" aria-label="Direct link to 8-tenant-cloning" title="Direct link to 8-tenant-cloning">​</a></h3>
<p>OceanBase Database V4.3.0 supports tenant cloning. You can quickly clone a specified tenant by executing an SQL statement in the sys tenant. After a tenant cloning job is completed, the created new tenant is a standby tenant. You can convert the standby tenant into the primary tenant to provide services. The new tenant and the source tenant share physical macroblocks in the initial state, but new data changes and resource usage are isolated between the tenants. You can clone an online tenant for temporary data analysis with high resource consumption or other high-risk operations to avoid risking the online tenant. In addition, you can also clone a tenant for disaster recovery. When irrecoverable misoperations are performed in the source tenant, you can use the new tenant for data rollback.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="9-support-for-s3-as-the-backup-and-restore-media"><strong>(9) Support for S3 as the backup and restore media</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#9-support-for-s3-as-the-backup-and-restore-media" class="hash-link" aria-label="Direct link to 9-support-for-s3-as-the-backup-and-restore-media" title="Direct link to 9-support-for-s3-as-the-backup-and-restore-media">​</a></h3>
<p>Earlier versions of OceanBase Database support two types of storage media for backup and restore: file storage (NFS) and object storage such as Alibaba Cloud Object Storage Service (OSS) and Tencent Cloud Object Storage (COS). The new version supports Amazon Simple Storage Service (S3) and S3-compatible object storage like Huawei Cloud Object Storage Service (OBS) and Google Cloud Storage (GCS) as the log archive and data backup destination. You can also use backup data on S3 and S3-compatible object storage for physical restore.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="10-proactive-broadcastrefresh-of-tablet-locations"><strong>(10) Proactive broadcast/refresh of tablet locations</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#10-proactive-broadcastrefresh-of-tablet-locations" class="hash-link" aria-label="Direct link to 10-proactive-broadcastrefresh-of-tablet-locations" title="Direct link to 10-proactive-broadcastrefresh-of-tablet-locations">​</a></h3>
<p>In earlier versions, OceanBase Database provides the periodic location cache refresh mechanism to ensure that the location information of log streams is updated in real time and consistent. However, tablet location information can only be passively refreshed. Changes in the mappings between tablets and log streams can trigger SQL retries and read/write errors with a certain probability. OceanBase Database V4.3.0 supports proactive broadcast of tablet locations to reduce SQL retries and read/write errors caused by changes in mappings after transfer. It also supports proactive refresh to avoid unrecoverable read/write errors.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="11-migration-of-active-transactions-during-tablet-transfer"><strong>(11) Migration of active transactions during tablet transfer</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#11-migration-of-active-transactions-during-tablet-transfer" class="hash-link" aria-label="Direct link to 11-migration-of-active-transactions-during-tablet-transfer" title="Direct link to 11-migration-of-active-transactions-during-tablet-transfer">​</a></h3>
<p>In the design of standalone log streams, data is in the unit of tablets, while logs are in the unit of log streams. Multiple tablets are aggregated into one log stream, saving the high cost of two-phase commit of transactions within a single log stream. To balance data and traffic among different log streams, tablets can be flexibly transferred between log streams. However, during the tablet transfer process, active transactions may still be handling the data, and even a simple operation may damage the atomicity, consistency, isolation, and durability (ACID) of the transactions. For example, if active transaction data on the transfer source cannot be completely migrated to the transfer destination during concurrent transaction execution, the atomicity of the transactions cannot be guaranteed. In earlier versions, active transactions were killed during the transfer to avoid transaction problems. This mechanism affects the normal execution of transactions to some extent. To solve this problem, the new version supports the migration of active transactions during tablet transfer, which enables concurrent execution of active transactions and ensures that no abnormal rollbacks or consistency issues occur in concurrent transactions due to the transfer.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="12-memory-throttling-mechanism"><strong>(12) Memory throttling mechanism</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#12-memory-throttling-mechanism" class="hash-link" aria-label="Direct link to 12-memory-throttling-mechanism" title="Direct link to 12-memory-throttling-mechanism">​</a></h3>
<p>Prior to OceanBase Database V4.x, only a few modules release memory based on freezes and minor compactions, and the MemTable is the largest part among them. Therefore, in earlier versions, an upper limit is set for memory usage of the MemTable, enabling it to run as smoothly as possible within the memory usage limit and avoiding writing failures caused by sudden memory exhaustion. In OceanBase Database V4.x, more modules that release memory based on freezes and minor compactions are introduced, such as the transaction data module. The new version provides more refined means to control the memory usage of various modules and supports the memory upper limit control of TxData and metadata service (MDS) modules. The two modules share memory space with the MemTable. When the sum of the memory usage of the three modules reaches <code>Tenant memory × _tx_share_memory_limit_percentage% × writing_throttling_trigger_percentage%</code>, overall memory throttling is triggered for the three modules. The new version also supports freezes and minor compactions of the transaction data table by time to reduce the memory usage of the transaction data module. By default, the transaction data table is frozen once every 1,800 seconds.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="13-optimization-of-ddl-temporary-result-space"><strong>(13) Optimization of DDL temporary result space</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#13-optimization-of-ddl-temporary-result-space" class="hash-link" aria-label="Direct link to 13-optimization-of-ddl-temporary-result-space" title="Direct link to 13-optimization-of-ddl-temporary-result-space">​</a></h3>
<p>During the DDL operations, many processes may store temporary results in materialized structures. Here are two typical scenarios: (1) During index creation, the system scans data in the base data table and sorts and inserts the obtained data to the index table. If the memory is insufficient during the sorting process, current data in the memory space will be temporarily stored in materialized structures to release the memory space for subsequent scanning. Data in the materialized structures is then merged and sorted. (2) In the columnar storage bypass import scenario, the system first temporarily stores the data to be inserted into each column group in materialized structures, and then obtains data from the materialized structures for insertion. These materialized structures can be used in the <code>SORT</code> operator to store intermediate data required for external sorting. When the system inserts data into column groups, the data can be cached in materialized structures, avoiding additional overhead caused by repeated table scanning. As a result, the temporary files occupy considerable disk space. The new version eliminates unnecessary redundant structures to simplify the data flow, and supports encoding and compression of temporary results for storage on disks. This greatly reduces the disk space occupied by temporary files.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iii-higher-computing-performance"><strong>III. Higher computing performance</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#iii-higher-computing-performance" class="hash-link" aria-label="Direct link to iii-higher-computing-performance" title="Direct link to iii-higher-computing-performance">​</a></h2>
<p>The online analytical processing (OLAP) capabilities are significantly enhanced in the new version, achieving a performance boost in TPC-H 1TB and TPC-DS 1TB tests. The new version also optimizes PDML, read and write operations in OBKV, bypass import performance of LOB data, and node restart performance.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-increased-performance-in-the-tpc-h-1tb-test"><strong>(1) Increased performance in the TPC-H 1TB test</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#1-increased-performance-in-the-tpc-h-1tb-test" class="hash-link" aria-label="Direct link to 1-increased-performance-in-the-tpc-h-1tb-test" title="Direct link to 1-increased-performance-in-the-tpc-h-1tb-test">​</a></h3>
<p>The following figure shows the performance of a tenant with 80 CPU cores and 500 GB of memory of different OceanBase Database versions in the TPC-H 1TB test. Overall, the performance of V4.3.0 is about 25% higher than that of V4.2.0.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713849771931.png" alt="1713849772" class="img_ev3q"></p>
<p>Figure 1: Performance of V4.3.0 and V4.2.0 in the TPC-H 1TB test</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-increased-performance-in-tpc-ds-1tb-test"><strong>(2) Increased performance in TPC-DS 1TB test</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#2-increased-performance-in-tpc-ds-1tb-test" class="hash-link" aria-label="Direct link to 2-increased-performance-in-tpc-ds-1tb-test" title="Direct link to 2-increased-performance-in-tpc-ds-1tb-test">​</a></h3>
<p>The following figure shows the performance of a tenant with 80 CPU cores and 500 GB of memory of different OceanBase Database versions in the TPC-DS 1TB test. Overall, the performance of V4.3.0 is about 111% higher than that of V4.2.0.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-04/1713849828408.png" alt="1713849829" class="img_ev3q"></p>
<p>Figure 2: Performance of V4.3.0 and V4.2.0 in the TPC-DS 1TB test</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-obkv-performance-optimization"><strong>(3) OBKV performance optimization</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#3-obkv-performance-optimization" class="hash-link" aria-label="Direct link to 3-obkv-performance-optimization" title="Direct link to 3-obkv-performance-optimization">​</a></h3>
<p>Compared with those in V4.2.1, the OBKV single-row read-write performance is improved by about 70%, and the batch read-write performance is improved by 80% to 220%.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-pdml-transaction-optimization"><strong>(4) PDML transaction optimization</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#4-pdml-transaction-optimization" class="hash-link" aria-label="Direct link to 4-pdml-transaction-optimization" title="Direct link to 4-pdml-transaction-optimization">​</a></h3>
<p>The new version implements optimizations at the transaction layer by supporting parallel commit, log replay, and partition-level rollbacks within transaction participants. Compared with earlier V4.x versions, the new version significantly improves the PDML execution performance and scalability in high concurrency scenarios.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-io-usage-optimization-for-loading-tablet-metadata"><strong>(5) I/O usage optimization for loading tablet metadata</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#5-io-usage-optimization-for-loading-tablet-metadata" class="hash-link" aria-label="Direct link to 5-io-usage-optimization-for-loading-tablet-metadata" title="Direct link to 5-io-usage-optimization-for-loading-tablet-metadata">​</a></h3>
<p>OceanBase Database V4.x supports millions of partitions on a single machine. As the memory may fail to hold the metadata of millions of tablets, OceanBase Database V4.x supports on-demand loading of tablet metadata. OceanBase Database supports on-demand loading of metadata at the partition level and the subclass level within partitions. In a partition, metadata is split into multiple subclasses for hierarchical storage. In scenarios where background tasks require deeper metadata, the data read consumes more I/O resources. These I/O overheads are not a problem for local SSD disks, but may affect system performance when HDD disks or cloud disks are used. OceanBase Database V4.3.0 aggregates frequently accessed metadata in storage, and only one I/O operation is required to access the metadata. This greatly reduces the I/O overhead in zero load scenarios and avoids the impact on foreground query performance caused by background task I/O overhead. In addition, the metadata loading process during the restart of an OBServer node is optimized. Tablet metadata is loaded in batches at the granularity of macroblocks, greatly reducing discrete I/O reads and speeding up the restart by several or even dozens of times.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iv-ease-of-use-enhancements"><strong>IV. Ease-of-use enhancements</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#iv-ease-of-use-enhancements" class="hash-link" aria-label="Direct link to iv-ease-of-use-enhancements" title="Direct link to iv-ease-of-use-enhancements">​</a></h2>
<p>The new version provides the index use monitoring feature to help you identify and delete invalid indexes, and allows you to import a small amount of local data from the client. Features such as LOB INROW threshold configuration, Remote Procedure Call (RPC) authentication certificate management, and parameter resetting are also provided to improve system usability.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-index-use-monitoring"><strong>(1) Index use monitoring</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#1-index-use-monitoring" class="hash-link" aria-label="Direct link to 1-index-use-monitoring" title="Direct link to 1-index-use-monitoring">​</a></h3>
<p>We usually create indexes to improve the query performance of the database. However, more and more indexes are created as data tables are used in more business scenarios by more operators. Unused indexes are a waste of storage space and increase the overhead of DML operations. In this case, you need to drop useless indexes to alleviate burden on the system. However, you can hardly identify all useless indexes by manual efforts. Therefore, OceanBase Database V4.3.0 provides the index monitoring feature. After you enable this feature and set the sampling method, the index usage information that meets the rules is recorded in the memory of a user tenant and refreshed to the internal table once every 15 minutes. You can then query the DBA_INDEX_USAGE view to find out whether an index is referenced and drop useless indexes to release space.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-local-import-from-the-client"><strong>(2) Local import from the client</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#2-local-import-from-the-client" class="hash-link" aria-label="Direct link to 2-local-import-from-the-client" title="Direct link to 2-local-import-from-the-client">​</a></h3>
<p>OceanBase Database V4.3.0 supports the <code>LOAD DATA LOCAL INFILE</code> statement for local import from the client. You can use the feature to import local files through streaming file processing. Based on this feature, developers can import local files for testing without uploading files to the server or object storage, improving the efficiency of importing a small amount of data.</p>
<p>Note: To import local data from the client, make sure that:</p>
<p>a. The version of OceanBase Client (OBClient) is V2.2.4 or later.</p>
<p>b. The version of ODP is V3.2.4 or later. If you directly connect to an OBServer node, ignore this requirement.</p>
<p>c. The version of OceanBase Connector/J is V2.4.8 or later if you use Java and OceanBase Connector/J.</p>
<p>You can directly use a MySQL client or a native MariaDB client of any version.</p>
<p>The <code>SECURE_FILE_PRIV</code> variable is used to specify the server paths that can be accessed by the OBServer node. This variable does not affect local import from a client, and therefore does not need to be specified for local import.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-lob-inrow-threshold-configuration"><strong>(3) LOB INROW threshold configuration</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#3-lob-inrow-threshold-configuration" class="hash-link" aria-label="Direct link to 3-lob-inrow-threshold-configuration" title="Direct link to 3-lob-inrow-threshold-configuration">​</a></h3>
<p>By default, LOB data of a size less than or equal to 4 KB is stored in INROW mode, and LOB data of a size greater than 4 KB is stored in the LOB auxiliary table. In some scenarios, INROW storage provides higher performance than auxiliary table-based storage. Therefore, this version supports dynamic configuration of the LOB storage mode. You can adjust the INROW threshold based on your business needs, provided that the threshold does not exceed the limit for INROW storage.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-rpc-authentication-certificate-management"><strong>(4) RPC authentication certificate management</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#4-rpc-authentication-certificate-management" class="hash-link" aria-label="Direct link to 4-rpc-authentication-certificate-management" title="Direct link to 4-rpc-authentication-certificate-management">​</a></h3>
<p>When RPC authentication is enabled for a cluster, for an access request from a client, such as the arbitration service, primary/standby database, or OceanBase Change Data Capture (CDC), you need to place the root CA certificate of the client in the deployment directory of each OBServer node in the cluster, and then perform related configurations. This whole process is complicated. OceanBase Database V4.3.0 supports the internal certificate management feature. You can use the <code>DBMS_TRUSTED_CERTIFICATE_MANAGER</code> system package provided in the sys tenant to add, delete, and modify root CA certificates trusted by an OceanBase cluster. The DBA_OB_TRUSTED_ROOT_CERTIFICATE view is also provided in the sys tenant to display the list of client root CA certificates added to OBServer nodes in the cluster and the certificate expiration time.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-parameter-resetting"><strong>(5) Parameter resetting</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#5-parameter-resetting" class="hash-link" aria-label="Direct link to 5-parameter-resetting" title="Direct link to 5-parameter-resetting">​</a></h3>
<p>In earlier versions, if you want to reset a parameter to the default value, you need to query the default value of the parameter first, and then manually set the parameter to the default value. The new version provides the <code>ALTER SYSTEM [RESET] parameter_name [SCOPE = {MEMORY | SPFILE | BOTH}] {TENANT [=] 'tenant_name'}</code> syntax for you to reset a parameter to the default value. The default value is obtained from the node that executes the statement. You can reset cluster-level parameters or parameters of a specified tenant in the sys tenant. You can also reset parameters for the current user tenant. On OBServer nodes, whether the <code>SCOPE</code> option is specified or not does not affect the implementation logic. For a parameter that takes effect statically, the default value is only stored on the disk but not updated to the memory. For a parameter that takes effect dynamically, the default value is stored on the disk and updated to the memory.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="v-afterword"><strong>V. Afterword</strong><a href="https://powerfooi.github.io/docs-playground/blog/ob-430#v-afterword" class="hash-link" aria-label="Direct link to v-afterword" title="Direct link to v-afterword">​</a></h2>
<p>OceanBase Database V4.3.0 sets a significant milestone on our roadmap to achieve real-time AP. We will keep updating AP features of subsequent versions to overcome challenges in real-world business scenarios.</p>
<p>We would like to thank all our users and developers for their contributions to OceanBase Database V4.3.0. Their valuable suggestions are a powerful driving force that pushes OceanBase forward. We look forward to working with every user and developer in tackling critical workloads, developing modern data architectures, and building better and more user-friendly distributed databases.</p>
<p>You can visit <a href="https://www.oceanbase.com/product/oceanbase-database-rn/releaseNote" target="_blank" rel="noopener noreferrer"><strong>Release Notes</strong></a> to learn more about the new OceanBase Database V4.3.0.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[OceanBase 4.0 interpretation: Reduce the threshold of distributed database use, talk about our thinking on small specifications]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/miniaturization</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/miniaturization</guid>
            <pubDate>Mon, 03 Jun 2024 12:06:28 GMT</pubDate>
            <description><![CDATA[Author | Zhao Yuzhong, a senior technical expert of OceanBase. He joined Alipay in 2010 to help with the R&D of the distributed transaction framework, and has engaged in the R&D of storage engines as an OceanBaser since 2013.]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>** Author | Zhao Yuzhong, a senior technical expert of OceanBase.** He joined Alipay in 2010 to help with the R&amp;D of the distributed transaction framework, and has engaged in the R&amp;D of storage engines as an OceanBaser since 2013.</p>
</blockquote>
<p>With the emergence of more scenarios and the growth of data volume in recent years, distributed databases have rapidly spread across a variety of sectors, providing great solutions for data-intensive and high-concurrency applications with their technical capabilities such as data consistency, high availability, and elastic scaling. A distributed database is often deployed on multiple servers to ensure high availability and performance. Therefore, to handle small-scale simple scenarios in the early days of their business, users tend to deploy a centralized database that costs less and exhibits higher performance if small specifications. The problem is, sooner or later, the centralized database will be bottlenecked as the business size grows, and adjustments or restructuring of the database architecture by then can be extremely challenging and costly.</p>
<p>OceanBase Database Community Edition V4.0 was released at the Apsara Conference 2022. It is the industry's first MySQL-compatible integrated database that supports both standalone and distributed deployment modes. This version provides many much-expected capabilities, such as enhanced online analytical processing (OLAP) capabilities. Featuring an integrated architecture, it can be deployed in standalone mode with a few clicks and can stably run in a production system with small hardware specifications, such as four CPU cores and 16 GB of memory (4C16G). This reduces the deployment costs and improves its usability. We hope that the dual technical advantages of the integrated architecture can bring perpetual benefits for database users.</p>
<p>According to their feedback, users are highly interested in the integrated architecture of OceanBase Database Community Edition V4.0 and its support for small-specification deployment. We believe that small-specification deployment is not only about providing all necessary features in standalone mode. More importantly, it delivers higher performance with the same hardware configuration. In this article, we will, from the following three perspectives, share our thoughts on small-sized distributed databases, and our innovative ideas and solutions about the integrated architecture that supports both standalone and distributed deployment:</p>
<ul>
<li>Reasons for choosing a small-specification distributed database</li>
<li>Key techniques for small-specification deployment</li>
<li>Performance of OceanBase databases with small specifications</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="i-why-a-distributed-database-with-small-specifications">I. Why a distributed database with small specifications?<a href="https://powerfooi.github.io/docs-playground/blog/miniaturization#i-why-a-distributed-database-with-small-specifications" class="hash-link" aria-label="Direct link to I. Why a distributed database with small specifications?" title="Direct link to I. Why a distributed database with small specifications?">​</a></h2>
<p>Over the past decade or so since its founding in 2010, OceanBase has broken the world records in TPC-C and TPC-H tests, empowered the Double 11 shopping festival every year, and ensured that every transaction was safely and efficiently executed. Pushing through all kinds of challenges, OceanBase Database, as a fully self-developed native distributed database, has proved its scalability and stability. From OceanBase Database V2.2 that topped the TPC-C ranking for the first time with 203 Elastic Compute Service (ECS) servers, to a later version that took the crown again with 1,554 ECS servers, the performance of OceanBase Database rises linearly with the number of servers.</p>
<p>On the other hand, as OceanBase Database caught the attention from industries other than the financial sector, we realized that not all users were faced by the amount of data comparable to the Double 11. In fact, standalone databases are just enough to tick all the boxes of many users in the early days of their business, when the data volume is rather small. Therefore, it is a great help to provide minimal database specifications for users to begin with. In this way, users are able to break in at very low costs. Also, with the great scalability of OceanBase Database, users can flexibly scale out their database systems later to take care of the increasing data volume and performance requirements.</p>
<p><strong>▋ From small to large: Basic database requirements in a business that grows</strong></p>
<p>The latest OceanBase Database V4.0 supports a minimum deployment specification of 4C8G. What does 4C8G mean? It's just a typical configuration of a nice laptop. In other words, OceanBase Database V4.0 can be deployed and stably run on a personal computer.</p>
<p>As user business grows, OceanBase Database V4.0 can be scaled out to support changing needs over the entire lifecycle of the business. OceanBase Database V4.0 helps users find better solutions to cost reduction, efficiency improvement, and business innovation.</p>
<ul>
<li>In its early days, user business handles small amount of data and has few requirements on disaster recovery. The user can deploy and run OceanBase Database V4.0 on a single server and perform cold backup regularly to protect its data system from possible disasters.</li>
<li>As its business grows, the user can vertically scale up the specifications of the existing server. To meet its requirements on disaster recovery, the user can add another server to build a primary/standby architecture, which provides the online disaster recovery capability. (Manual intervention is still required during disaster recovery due to the limits of the primary/standby architecture.)</li>
<li>When its business expands to certain size and data becomes more important, the user can simply upgrade to the three-replica architecture, which ensures high availability with three servers and supports automatic disaster recovery. When a server fails, the three-replica architecture of OceanBase Database V4.0 guarantees business recovery in 8s with zero data loss. In other words, the recovery time objective (RTO) is less than 8s and the recovery point objective (RPO) is 0.</li>
<li>When user business experiences even greater growth and each server has been upgraded to the highest configurations, the user has to deal with this "happy trouble" as Taobao and Alipay did. In this case, the transparent distributed scalability of OceanBase Database allows the user to scale its cluster out from 3 to 6, 9 or even thousands of servers.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/0c60f73d-d30c-48af-95fe-3755574942b8/image/2023-01-11/295d4719-fc9d-4c62-a95e-9d0e23727a70.png" alt="" class="img_ev3q"></p>
<p>Figure 1 Deployment evolution: OceanBase Database vs conventional databases</p>
<p><strong>▋ Smooth transitions that ensure linear performance improvement</strong></p>
<p>The integrated architecture of OceanBase Database supports smooth transition from standalone to distributed multi-cluster deployment mode, keeping the performance improvement at a linear speed.</p>
<p>Thanks to the good vertical scalability of OceanBase Database, the configuration upgrade of the server in standalone mode usually achieves linear performance improvement. When a user scales a distributed cluster from 3 to 6 servers, for example, distributed transactions are often introduced, which, in most cases, results in performance loss. However, OceanBase Database reduces the probability of distributed transactions through a variety of mechanisms, such as the TableGroup mechanism that binds multiple tables together, and the well-designed load balancing strategies.</p>
<p>The good distributed scalability of OceanBase Database also helps maintain linear performance improvement as the number of servers increases. For example, in the TPC-C test, which involves about 10% of distributed transactions, the performance improvement of OceanBase Database remained linear as more nodes were added to the cluster.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/f419efdd-d5b7-4a33-9afe-c7e0107c71f5/image/2023-01-11/d6979385-99d3-4ed9-a378-d2a8962e3342.png" alt="" class="img_ev3q"></p>
<p>Figure 2 Performance of OceanBase Database with different number of nodes in the TPC-C test</p>
<p>More importantly, all operations performed in scaling from a standalone OceanBase database to an OceanBase cluster of thousands of nodes are transparent to the business. Users do not need to modify the code of their upper-level business applications, or manually migrate their operation data. If you use OceanBase Cloud, you can perform backup, scaling, and O&amp;M operations all on the same platform, which is quite convenient.</p>
<p>From the first day of the development of OceanBase Database V4.0, we have been thinking about how to run a distributed database on small-specification hardware, yet delivering high performance, so that users benefit from cost-effective high availability in their respective scenarios. OceanBase Database V4.0 not only provides all necessary features in standalone mode, and also delivers higher performance with the same hardware configuration.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ii-key-techniques-for-small-specification-deployment">II. Key techniques for small-specification deployment<a href="https://powerfooi.github.io/docs-playground/blog/miniaturization#ii-key-techniques-for-small-specification-deployment" class="hash-link" aria-label="Direct link to II. Key techniques for small-specification deployment" title="Direct link to II. Key techniques for small-specification deployment">​</a></h2>
<p>In the fundamental software sector, it is very hard to make a database system "large" because the system will be increasingly vulnerable to failures as more nodes are added to it. In our second TPC-C test, for example, we built an OceanBase cluster of 1,554 Elastic Compute Service (ECS) servers. In such a cluster, the frequency of a single-server failure is about once a day or every other day. The point is we have to make the product sufficiently stable and highly available to keep such a jumbo-sized cluster up and running.</p>
<p>It is equally hard to make a database system "small" because it requires getting down to every detail, much like using a microscope to arrange the usage of every slice of resource. Not only that, some proper designs or configurations in a large system may be totally unacceptable in a smaller one. What's more challenging is that we must make the system suitable for both large and small hardware specifications. This requires us to weigh up between large and small specifications when designing the database system, so as to minimize the additional overhead of a distributed architecture while allowing the database system to make adaptive response according to hardware specifications in many scenarios. Now, let's talk about the technical solution of OceanBase Database V4.0 by taking the usage of CPU and memory, the two major challenges, as an example.</p>
<p><strong>▋ Reducing CPU utilization through dynamic control of log streams</strong></p>
<p>To build a small database, OceanBase Database V4.0 needs to control the CPU utilization in the first place. In versions earlier than V4.0, OceanBase Database would generate a Paxos log stream for each partition of a data table to ensure the data consistency among multiple replicas based on the Paxos protocol. This is a very flexible design because Paxos groups are based on partitions, which means that partitions can be migrated between servers. However, this design puts heavy workload on the CPU because each Paxos log stream consumes overhead for leader selection, heartbeat, and log synchronization. Such additional overhead occupies a moderate percentage of the CPU resource if servers have large specifications, or the number of partitions is small, but causes an unbearable burden for small-specification servers.</p>
<p>How do we solve that issue in OceanBase Database V4.0? We go straight-forward and reduce the number of Paxos log streams. If we can reduce the number of Paxos log streams to the same as that of servers, the overhead for Paxos log streams is roughly equal to that for logs in a conventional database in the primary/standby mode.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/a248fea2-2640-432c-8c0e-68f394e9611b/image/2023-01-11/5830c47b-96eb-4303-9398-8f1b080610a4.png" alt="" class="img_ev3q"></p>
<p>Figure 3 Dynamic log streams of a cluster based on OceanBase Database V4.0</p>
<p>OceanBase Database V4.0 generates a Paxos log stream for multiple data table partitions and dynamically controls the log streams. As shown in the figure above, the database cluster consists of three zones, and each zone has two servers deployed. Assume that two resource units are configured for a tenant. In this case, two Paxos log streams are generated for the tenant, with one containing P1, P2, P3, and P4 partitions and the other containing P5 and P6 partitions.</p>
<ul>
<li>
<p>When the two servers are not load-balanced, the load balancing module of OceanBase Database migrates the partitions between the Paxos log streams.</p>
</li>
<li>
<p>To scale out the cluster, a user can split one Paxos log stream into multiple Paxos log streams and migrate them as a whole.</p>
</li>
<li>
<p>To scale in the cluster, the user can migrate multiple Paxos log streams and merge the streams.</p>
</li>
</ul>
<p>With dynamic log stream control, OceanBase Database V4.0 greatly reduces the CPU overhead of the distributed architecture and guarantees high availability and flexible scaling.</p>
<p><strong>▋ Achieving high concurrency with a small memory space through dynamic metadata loading</strong></p>
<p>The second challenge that OceanBase Database V4.0 needs to take in building a small database is to optimize memory usage. For the sake of performance, OceanBase Database of versions earlier than V4.0 stored some metadata in memory. The memory usage of this portion of metadata was not high if the total memory size was large, but unacceptable for a small-specification server. To support ultimate performance at small specifications, we have achieved dynamic loading of all metadata in OceanBase Database V4.0.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/2eab23cb-2523-4374-8e25-015e62b65f7e/image/2023-01-11/2573623f-47c0-4293-b209-1d02abac7360.png" alt="" class="img_ev3q"></p>
<p>Figure 4 SSTable hierarchical storage</p>
<p>As shown in the figure above, we store an SSTable in a hierarchical structure. To be specific, we store the microblocks of the SSTable in partitions and maintain only the handle of the partitions in memory. The requested data is dynamically loaded by using KVCache only when the partitions need to be accessed. In this way, OceanBase Database V4.0 is capable of processing highly concurrent requests for massive amount of data with a small memory size.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iii-performance-of-databases-with-small-specifications">III. Performance of databases with small specifications<a href="https://powerfooi.github.io/docs-playground/blog/miniaturization#iii-performance-of-databases-with-small-specifications" class="hash-link" aria-label="Direct link to III. Performance of databases with small specifications" title="Direct link to III. Performance of databases with small specifications">​</a></h2>
<p>To test the actual performance of OceanBase Database with small specifications, we deployed OceanBase Database Community Edition V4.0 in 1:1:1 mode based on three 4C16G servers and compared its performance with that of RDS for MySQL 8.0, which was also deployed on 4C16G servers. The comparison was performed by using Sysbench and the results show that OceanBase Database Community Edition V4.0 outperforms RDS for MySQL 8.0 in most data processing scenarios. In particular, under the same hardware specifications, OceanBase Database Community Edition V4.0 handles a throughput 1.9 times that of RDS for MySQL 8.0 in INSERT and UPDATE operations.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/22580914-c626-4968-b2ec-14b36e73a7dc/image/2023-01-11/74429483-aee7-4cb6-9cdf-0f5c43646d01.png" alt="" class="img_ev3q"></p>
<p>Figure 5 Throughput performance test results of OceanBase Database Community Edition V4.0 and RDS for MySQL 8.0 on Sysbench (4C16G)</p>
<p>We also compared the two at specifications of 8C32G, 16C64G, and 32C128G, which are most popular among users. As the server specifications increase, the performance gap widens between OceanBase Database Community Edition V4.0 and RDS for MySQL 8.0. At 32C128G specifications, OceanBase Database Community Edition V4.0 achieves a throughput 4.3 times that of RDS for MySQL 8.0 with 75% less response time.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/9a3fa66e-7716-48e3-bcf2-82735c4726c9/image/2023-01-11/b4324d1e-6bd1-48cb-9ccc-c100cca6aae6.png" alt="" class="img_ev3q"></p>
<p>Figure 6 Throughput performance test results of OceanBase Database Community Edition V4.0 and RDS for MySQL 8.0 on Sysbench</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/e9b024bf-2078-405a-8b8b-4492b73e227c/image/2023-01-11/ca4e4ba7-3312-470a-9176-080ae7005b77.png" alt="" class="img_ev3q"></p>
<p>Table 1 Performance (throughput and response time) test results of OceanBase Database Community Edition V4.0 and RDS for MySQL 8.0 on Sysbench</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="afterword">Afterword<a href="https://powerfooi.github.io/docs-playground/blog/miniaturization#afterword" class="hash-link" aria-label="Direct link to Afterword" title="Direct link to Afterword">​</a></h2>
<p>OceanBase Database has achieved ultimate performance in the TPC-C test with a massive cluster of more than a thousand servers, and ultimate resource usage in standalone performance tests at small specifications, such as 4C16G. What's behind those achievements is our unshakable faith in our mission to make data management and use easier. Streamlining services for customers with every effort is the motto of every OceanBase engineer. Growing fast, OceanBase Database is not yet perfect. We still have a lot to do to optimize its performance with higher specifications and save more resources in a database with even smaller specifications. OceanBase Database Community Edition V4.0 is now available and we are looking forward to working with all users to build a general database system that is easier to use.</p>
<p>Welcome to <a href="https://open.oceanbase.com/blog" target="_blank" rel="noopener noreferrer">OceanBase Community</a>. We will keep generating useful content, and pursue excellence together with tens of millions of developers.</p>
<p>🔍Join us on DingTalk (Group ID: 33254054), or scan the QR code below to contact OceanBase Technical Support. We are ready to answer all questions about our products.</p>
<p><img decoding="async" loading="lazy" src="https://gw.alipayobjects.com/zos/oceanbase/f4d95b17-3494-4004-8295-09ab4e649b68/image/2022-08-29/00ff7894-c260-446d-939d-f98aa6648760.png" alt="" class="img_ev3q"></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[IO Isolation in OceanBase Database]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/io-isolation</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/io-isolation</guid>
            <pubDate>Mon, 03 Jun 2024 12:05:44 GMT</pubDate>
            <description><![CDATA[Sun Jianyun, an OceanBase technical expert]]></description>
            <content:encoded><![CDATA[<p><strong>Sun Jianyun, an OceanBase technical expert</strong></p>
<p>He used to be a member of the TPC-C project and the technical support team for Double 11 shopping festivals, and is now engaged in the design, research, and development of I/O scheduling, DDL capabilities, and other work related to storage engines.</p>
<p>In <a href="https://open.oceanbase.com/blog/10900412" target="_blank" rel="noopener noreferrer">Why resource isolation matters to HTAP? </a>, we talked about why hybrid transaction/analytical processing (HTAP) relies on resource isolation and how to implement it. Resource isolation is a capability. Many scenarios can be derived from it, such as HTAP, multitenancy, and pay-as-you-go. Based on resource isolation and cloud-based resource pools, all kinds of resources can be allocated on demand. Isolation of resources such as CPU and memory is already supported in OceanBase Database V4.0. OceanBase Database V4.1 supports enhanced disk I/O isolation and provides users a simple and flexible way to use this feature.</p>
<p>We believe that disk I/O isolation is an essential part of resource isolation. Disk I/O isolation enhances and completes the resource control capabilities for users. This article describes some thoughts of the OceanBase team on disk I/O isolation, how it is configured in OceanBase Database, and the disk I/O isolation performance testing of OceanBase Database V4.1.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="i-why-is-disk-io-isolation-necessary">I. Why is disk I/O isolation necessary?<a href="https://powerfooi.github.io/docs-playground/blog/io-isolation#i-why-is-disk-io-isolation-necessary" class="hash-link" aria-label="Direct link to I. Why is disk I/O isolation necessary?" title="Direct link to I. Why is disk I/O isolation necessary?">​</a></h2>
<p>Some may ask, "Is resource isolation, especially disk I/O isolation, really necessary?" Why not directly divide the loads among different servers? For example, transaction processing (TP) and analytical processing (AP) loads can be routed to different replicas on different servers, and different tenants can be deployed on different servers to implement physical isolation. As I see it, that is truly a simple and convenient solution. However, it has many limitations, and cost is the biggest concern. Assume that a game company has two tenants A and B, where tenant A processes services outside China and tenant B processes services inside China. The load peaks of one tenant coincide with the load troughs of the other and vice versa due to the time zone difference. Although each of them can exclusively occupy separate server resources, half of the resources are wasted.</p>
<p>For disk I/O resources, loads whose data is tightly coupled cannot be simply divided among different servers. For example, operations such as backup, migration, and reorganization in a database strongly depend on intensive data reads and writes. Without disk I/O isolation, these tasks can affect the service throughput and response time. Actually, it is difficult to divide TP and AP loads on different servers as desired. TP and AP loads cannot be clearly demarcated sometimes. Even loads of the same type, such as TP loads, have different priorities based on services. What can we do in this situation?</p>
<p>Disk I/O is a type of flexible resources, and loads can contend for disk I/O resources. Resources such as memory are rigid and described as scalars. A memory block occupied by Load A cannot be simultaneously allocated to Load B. Disk I/O is a type of flexible resources and described as the processing capability within a unit time. Loads A and B can read data from and write data to the disk at the same time. Rigid resources can be clearly isolated like cutting a cake. However, for flexible resources, contention between loads must be considered. Assume that you have two fields A and B irrigated by the same river. When the water that flows to Field A is reduced, the water that flows to Field B can be increased.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ii-what-is-good-disk-io-isolation">II. What is good disk I/O isolation?<a href="https://powerfooi.github.io/docs-playground/blog/io-isolation#ii-what-is-good-disk-io-isolation" class="hash-link" aria-label="Direct link to II. What is good disk I/O isolation?" title="Direct link to II. What is good disk I/O isolation?">​</a></h2>
<p>To answer this question, we need to figure out customers' expectations of disk I/O isolation, which vary from one customer to another.</p>
<ul>
<li>Some customers want to implement exclusive resource usage through I/O isolation, such as an exclusive disk bandwidth of 200 Mbit/s.</li>
<li>Some customers want to limit the resource usage of some loads to specified thresholds through disk I/O isolation.</li>
<li>Others only want to allocate resources by weight when resources are insufficient. Resource isolation is not a concern when resources are sufficient.</li>
</ul>
<p>In the technical field of resource isolation, the preceding three types of requirements correspond to three isolation semantics: reservation, limitation, and proportion. They are also what disk I/O isolation is supposed to implement in OceanBase Database.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iii-how-do-we-configure-disk-io-isolation-in-oceanbase-database">III. How do we configure disk I/O isolation in OceanBase Database?<a href="https://powerfooi.github.io/docs-playground/blog/io-isolation#iii-how-do-we-configure-disk-io-isolation-in-oceanbase-database" class="hash-link" aria-label="Direct link to III. How do we configure disk I/O isolation in OceanBase Database?" title="Direct link to III. How do we configure disk I/O isolation in OceanBase Database?">​</a></h2>
<p>OceanBase Database allows you to configure disk I/O isolation between tenants or between loads in a tenant.</p>
<p>The former is quite easy. For input/output operations per second (IOPS), you can specify the <code>MIN_IOPS</code>, <code>MAX_IOPS</code>, and <code>IOPS_WEIGHT</code> parameters for a tenant in the unit config to meet the foregoing three types of isolation requirements. Here is an example.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">alter</span><span class="token plain"> resource unit </span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> tp_unit min_iops</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">20000</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> max_iops</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">40000</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> iops_weight</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then, how to configure disk I/O isolation between loads in a tenant? OceanBase Database extends the ResourceManager package of Oracle to adapt to the use habits of users.</p>
<p>The following example shows you how to use ResourceManager to isolate the disk I/O resources for TP and AP loads.</p>
<ul>
<li>First, create a resource management plan named <code>htap_plan</code> and two resource consumer groups named <code>tp_group</code> and <code>ap_group</code>.</li>
<li>Second, bind <code>tp_group</code> and <code>ap_group</code> to <code>htap_plan</code>. Allocate more resources to <code>tp_group</code> and fewer resources to <code>ap_group</code>. The value of each of <code>MIN_IOPS</code>, <code>MAX_IOPS</code>, and <code>WEIGHT_IOPS</code> is a resource percentage of the unit config of the tenant.</li>
<li>Third, set the mapping rule between the loads and resource consumer groups. In this example, loads are mapped to consumer groups by username. For example, all loads of the <code>trade</code> user use resources of the <code>tp_group</code> resource consumer group.</li>
</ul>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Create a resource management plan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"> DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CREATE_PLAN</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">PLAN</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'htap_plan'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Create resource consumer groups</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"> DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CREATE_CONSUMER_GROUP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CONSUMER_GROUP </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'tp_group'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'resource group for oltp applications'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"> DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CREATE_CONSUMER_GROUP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CONSUMER_GROUP </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ap_group'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'resource group for olap applications'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Allocate resources</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"> DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CREATE_PLAN_DIRECTIVE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">PLAN</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'htap_plan'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GROUP_OR_SUBPLAN </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'tp_group'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'more resource for tp_group'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MGMT_P1 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MIN_IOPS </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MIX_IOPS </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  WEIGHT_IOPS </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"> DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CREATE_PLAN_DIRECTIVE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">PLAN</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'htap_plan'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GROUP_OR_SUBPLAN </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ap_group'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">COMMENT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'less resource for ap_group'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MGMT_P1 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MIN_IOPS </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MIX_IOPS </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  WEIGHT_IOPS </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Map loads to resource consumer groups</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SET_CONSUMER_GROUP_MAPPING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'FUNCTION'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CAOPACTION_HIGH'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'background_group'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Map specific SQL statements to a resource consumer group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SET_CONSUMER_GROUP_MAPPING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'COLUMN'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'test.t1.c1 = 3'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'big1_group'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SET_CONSUMER_GROUP_MAPPING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'USER'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'trade'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'tp_group'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SET_CONSUMER_GROUP_MAPPING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'USER'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'analysis'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ap_group'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Mapping rules for resource consumer groups also support function names and column names. In function name-based mapping, the resource usage of backend tasks can be controlled by using ResourceManager. In column name-based mapping, resource isolation can be refined to the SQL statement level. Here is an example.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Map backend tasks to a resource consumer group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SET_CONSUMER_GROUP_MAPPING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'FUNCTION'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CAOPACTION_HIGH'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'background_group'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Map specific SQL statements to a resource consumer group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">BEGIN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DBMS_RESOURCE_MANAGER</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SET_CONSUMER_GROUP_MAPPING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'COLUMN'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'test.t1.c1 = 3'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'big1_group'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">END</span><span class="token punctuation" style="color:#393A34">;</span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iv-disk-io-isolation-performance-testing-of-oceanbase-database-v4x">IV. Disk I/O isolation performance testing of OceanBase Database V4.x<a href="https://powerfooi.github.io/docs-playground/blog/io-isolation#iv-disk-io-isolation-performance-testing-of-oceanbase-database-v4x" class="hash-link" aria-label="Direct link to IV. Disk I/O isolation performance testing of OceanBase Database V4.x" title="Direct link to IV. Disk I/O isolation performance testing of OceanBase Database V4.x">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="verify-the-disk-io-isolation-capability"><strong>Verify the disk I/O isolation capability</strong><a href="https://powerfooi.github.io/docs-playground/blog/io-isolation#verify-the-disk-io-isolation-capability" class="hash-link" aria-label="Direct link to verify-the-disk-io-isolation-capability" title="Direct link to verify-the-disk-io-isolation-capability">​</a></h3>
<p>Create four tenants for a simulation test. Each tenant starts 64 threads to send I/O requests that perform 16 KB random reads. The loads of tenants 1, 2, and 4 last for 20 seconds, and the load of tenant 3 begins from the 10th second and lasts for 10 seconds. In this test, the maximum IOPS is about 60,000. Without limitations, any tenant can use up the disk resources.</p>
<p>We first verified the disk I/O isolation between tenants. Table 1 describes the resource configurations of the tenants and Figure 1 shows the test results of the tenants.</p>
<ul>
<li>When the disk resources are used up, the newly joined tenant 3 still has an IOPS of 10,000, which is reserved by using the <code>MIN_IOPS</code> parameter.</li>
<li>The IOPS of tenant 4 does not exceed 5,000 because its maximum IOPS is limited by using the <code>MAX_IOPS</code> parameter.</li>
<li>Regardless of the load changes, the IOPS ratio between tenant 1 and tenant 2 is always 2:1 as defined.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1683280561708.png" alt="1683280561" class="img_ev3q"><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1683280562322.png" alt="1683280562" class="img_ev3q"></p>
<p>Then, we verified the disk I/O isolation between loads in a tenant. Set four types of loads in tenant 2. Table 2 describes the resource configurations of the loads. Figure 2 shows the test results.</p>
<ul>
<li>The IOPS of Load B remains about 2,000, even if its weight is 0. This is because 97% of the minimum IOPS resources of the tenant is reserved for Load B by using the <code>MIN_PERCENT</code> parameter.</li>
<li>The IOPS of Load A remains about 1,000. This is because the <code>MAX_PERCENT</code> parameter is set to <code>1</code> for Load A. In this way, Load A can use only 1% of the maximum resources of the tenant.</li>
<li>The IOPS ratio between Load C and Load D is always 2:1, which conforms to their weight ratio of 50:25.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1683280606307.png" alt="1683280606" class="img_ev3q"><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2023-05/1683280606875.png" alt="1683280606" class="img_ev3q"></p>
<p>The preceding tests show that OceanBase Database supports disk I/O isolation between tenants and between loads in a tenant, and meets the three isolation semantics of reservation, limitation, and proportion.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="adjust-disk-io-isolation-configurations-in-real-time"><strong>Adjust disk I/O isolation configurations in real time</strong><a href="https://powerfooi.github.io/docs-playground/blog/io-isolation#adjust-disk-io-isolation-configurations-in-real-time" class="hash-link" aria-label="Direct link to adjust-disk-io-isolation-configurations-in-real-time" title="Direct link to adjust-disk-io-isolation-configurations-in-real-time">​</a></h3>
<p>Some may have noticed that the disk I/O isolation configurations remain unchanged in the preceding tests. Does OceanBase Database support real-time adjustment of the isolation configurations? The answer is "Yes". The following test will prove it.</p>
<p>Prepare a large table and perform a full-table scan with a parallel query. During the scan, change the value of the <code>MAX_IOPS</code> parameter for the tenant repeatedly as the administrator. The video shows that the IOPS monitored by the operating system changes constantly.</p>
<p>You may have noticed that the IOPS monitored by the operating system is always lower than the value specified by the administrator. This is because OceanBase Database normalizes the overhead of I/O requests.</p>
<p>For example, the overhead of 64 KB random reads is different from that of 4 KB random reads. The baseline IOPS overhead specified in the unit config of the tenant is 16 KB random reads. However, the actual size of I/O requests is about 20 KB. After overhead calculation, the IOPS monitored by the operating system is different. For more information, see the related code of ob_io_manager.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="v-afterword">V. Afterword<a href="https://powerfooi.github.io/docs-playground/blog/io-isolation#v-afterword" class="hash-link" aria-label="Direct link to V. Afterword" title="Direct link to V. Afterword">​</a></h2>
<p>The resource isolation capability of OceanBase Database V4.x allows you to flexibly control the resources allocated to different loads. We will make every effort to improve this capability to address user concerns, such as the unit config and number of resource units of the tenant. OceanBase Database is devoted to providing a better resource isolation capability and user experience. When the business traffic changes, OceanBase Database can automatically allocate the required resources, like a standalone database with unlimited resources. It must be a long haul to reach that goal, but we are resolved and ready to push through all the challenges.</p>
<p>Finally, feel free to share with us your comments on disk I/O isolation.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Challenges facing AP performance improvement]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement</guid>
            <pubDate>Mon, 03 Jun 2024 12:01:00 GMT</pubDate>
            <description><![CDATA[I have been studying the book "An Interpretation of OceanBase Database Source Code" and noticed that it contains very little content about the SQL executor. The book focuses on parallel execution in the executor. This blog post introduces some common adaptive techniques in the executor of OceanBase Database. You can take it as a supplement to the executor part in this book.]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>I have been studying the book "An Interpretation of OceanBase Database Source Code" and noticed that it contains very little content about the SQL executor. The book focuses on parallel execution in the executor. This blog post introduces some common adaptive techniques in the executor of OceanBase Database. You can take it as a supplement to the executor part in this book.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="challenges-facing-ap-performance-improvement">Challenges facing AP performance improvement<a href="https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement#challenges-facing-ap-performance-improvement" class="hash-link" aria-label="Direct link to Challenges facing AP performance improvement" title="Direct link to Challenges facing AP performance improvement">​</a></h2>
<p>If you want to improve the AP performance of a database, you will face three challenges:</p>
<ul>
<li>First, the optimizer cannot ensure that its estimates are always absolutely accurate. The reasons are complex. For example, the statistics are inaccurate in some scenarios, or the cost model is inconsistent with the actual model. These reasons will contribute to a non-optimal execution plan.</li>
<li>Second, data skew often occurs in production and business scenarios, which will significantly affect the execution efficiency, especially the parallel execution efficiency.</li>
<li>Third, the semantics of NULL are special. Characteristics of widespread NULL values are different from those of normal values in operations such as joins, but this is easily ignored. The executor must perform special processing on NULL values. Otherwise, various bad cases can occur.</li>
</ul>
<p>Adaptive techniques enable the execution engine to dynamically adjust the execution strategy based on the actual situation, thereby improving the execution performance. In a word, adaptive techniques are introduced to address the preceding challenges. Next, let me introduce some typical adaptive techniques in the executor of OceanBase Database.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adaptive-join-filter">Adaptive join filter<a href="https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement#adaptive-join-filter" class="hash-link" aria-label="Direct link to Adaptive join filter" title="Direct link to Adaptive join filter">​</a></h2>
<p>Let me take a hash join shown in the following figure as an example to introduce the background of join filters. The hash join involves two tables and uses hash repartitioning as the data shuffle mode. In other words, each row in the left-side and right-side tables will be repartitioned based on the hash value.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636564738.png" alt="1705636564" class="img_ev3q"></p>
<p>Generally, the right-side table of a hash join is very large in size, which will lead to a high cost in data shuffle. When the left-side table is read to build the hash table, a join filter can extract the data characteristics of the left-side table and send them to the right-side table. This can filter out some of the data in the right-side table before a shuffle. If the join filter has high filtering performance, this step can significantly reduce the network overhead.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636577135.png" alt="1705636577" class="img_ev3q"></p>
<p>OceanBase Database has implemented join filters as early as in V3.x and has been undergoing join filter optimization ever since. The following figure shows the impact of join filters on the overall performance during the TPC-H benchmark run in 2021, in which OceanBase Database won the first place in the world.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636587368.png" alt="1705636587" class="img_ev3q"></p>
<p>Join filters help significantly improve the performance for joins on large tables, such as Q9 shown in the preceding figure.</p>
<p>However, join filters cannot always bring positive benefits in all scenarios, such as Q18 shown in the preceding figure. The overhead of a join filter is used for three tasks:</p>
<ul>
<li>Create the join filter. This is to extract the data characteristics of the left-side table in a hash join when the left-side table is read to build the hash table.</li>
<li>Send the join filter. This is to send the data characteristics of the left-side table to the right-side table.</li>
<li>Apply the join filter. This is to apply the data characteristics of the left-side table on the right-side table for row filtering.</li>
</ul>
<p>If the selectivity of the join filter is low, the reduced network overhead cannot make up the preceding overhead, and the overall performance will deteriorate.</p>
<p>The optimizer determines whether to allocate a join filter based on the cost. The optimizer can roughly estimate the selectivity of a join filter based on statistics such as the number of distinct values (NDV) and MIN/MAX values. However, the optimizer cannot provide accurate estimates of intermediate calculation results in the executor.</p>
<p>To resolve this issue, OceanBase Database V4.1 implements sliding window-based adaptive join filters. This algorithm aims to make up the performance loss when an incorrect join filter is applied.</p>
<p>This algorithm splits data into multiple sliding windows and collects statistics on the apply process of each window. If the algorithm detects that the filtering effects of a window are not as expected, it will not apply the join filter on the next window and pass this window. If the filtering effects of continuous windows are not as expected, the number of passed windows will also increase linearly to reduce the apply cost.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636596184.png" alt="1705636596" class="img_ev3q"></p>
<p>The following figure shows a bad case of join filter. Different strategies are used for performance tests. In the performance test where an adaptive join filter is used, the performance loss is made up by half. However, the performance after compensation is still lower than that achieved when the join filter is not allocated.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636604838.png" alt="1705636604" class="img_ev3q"></p>
<p>Although this solution makes up the performance loss caused by applying a join filter on the right-side table, the cost in creating and sending the join filter is not made up. OceanBase Database will enhance the capability for adaptive join filter creation in later versions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adaptive-hash-group-by">Adaptive HASH GROUP BY<a href="https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement#adaptive-hash-group-by" class="hash-link" aria-label="Direct link to Adaptive HASH GROUP BY" title="Direct link to Adaptive HASH GROUP BY">​</a></h2>
<p>This section introduces the adaptive algorithm for HASH GROUP BY in OceanBase Database.</p>
<p>The following figures show the execution plans for HASH GROUP BY in a parallel scenario.</p>
<p>Here is the execution plan for two-phase HASH GROUP BY.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636615372.png" alt="1705636615" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636625338.png" alt="1705636625" class="img_ev3q"></p>
<p>Here is the execution plan for one-phase HASH GROUP BY.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636635870.png" alt="1705636636" class="img_ev3q"></p>
<p>The difference is that two-phase HASH GROUP BY performs a partial GROUP BY operation on data before a shuffle. Like join filters, one-phase and two-phase HASH GROUP BY have their own advantages and disadvantages.</p>
<ul>
<li>Two-phase HASH GROUP BY applies to scenarios with a high data aggregation rate, where the amount of data to be shuffled can be decreased through pre-aggregation.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636648890.png" alt="1705636648" class="img_ev3q"></p>
<ul>
<li>One-phase HASH GROUP BY applies to scenarios with a low data aggregation rate.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636705335.png" alt="1705636705" class="img_ev3q"></p>
<p>If the data aggregation rate is low, the network overhead will still be high because a two-phase plan will consume extra CPU resources to probe the hash table, leading to poorer performance than a one-phase plan.</p>
<p>The following figure compares the performance of two-phase and one-phase plans for queries in ClickBench. It can be observed that some queries are suitable for two-phase execution while others are suitable for one-phase execution. Generally, the optimizer tends to select a two-phase plan to avoid serious performance deterioration.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636714319.png" alt="1705636714" class="img_ev3q"></p>
<p>In versions earlier than OceanBase Database V4.x, the optimizer will determine whether to select a two-phase plan or one-phase plan based on the NDV value in the statistics. You can also use the session variable _GROUPBY_NOPUSHDOWN_CUT_RATIO to set the plan preference. If the ratio of the input data amount to the data amount after aggregation is greater than the specified value, a two-phase plan is generated. Otherwise, a one-phase plan is generated. In practice, it is difficult to use this variable. The input and output data amounts of GROUP BY are estimated by the optimizer based on statistics. Generally, it is challenging for O&amp;M personnel to set this variable to an appropriate value, ensuring that the optimizer selects a better plan for GROUP BY.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636723981.png" alt="1705636724" class="img_ev3q"></p>
<p>In OceanBase Database V4.x, the _GROUPBY_NOPUSHDOWN_CUT_RATIO variable is deprecated and the optimizer is forced to select a two-phase plan. In a two-phase plan in V4.x, the first phase must be adaptive GROUP BY.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636736767.png" alt="1705636736" class="img_ev3q"></p>
<p>The core idea of the adaptive GROUP BY technique is to determine whether to perform deduplication or directly send data based on an NDV value collected in real time. The technique splits data into multiple rounds and measures the aggregation rate of each round. If the deduplication rate of a round is not as expected, the technique will clear the hash table, flush all the data obtained in the first phase to the network, and aggregate the final data in the second phase.</p>
<p>Data is split into rounds based on the size of three-level CPU caches. This is because if the hash table can be accommodated in the L2 cache, the performance can be improved by more than 30% compared with that of a large hash table. A cache-aware mechanism is provided to increase the size of data in each round from the L2 cache size to the L3 cache size when the deduplication rate becomes low so that data will be accommodated in the L3 cache.</p>
<p>If the hash deduplication effects of multiple consecutive rounds are poor, the bypass strategy is used. Specifically, rows are directly delivered to the upper-layer operator without hash deduplication, which looks like a one-phase plan.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636744584.png" alt="1705636744" class="img_ev3q"></p>
<p>This strategy greatly improves the performance but also has bad cases where a large amount of data is involved while the overall deduplication rate is favorable. If the overall deduplication rate is estimated based on only a small part of the data, the estimate is probably inaccurate. In OceanBase Database V4.2, the NDV values of multiple data rounds are merged to improve the estimate accuracy.</p>
<p>The following figure compares the performance of one-phase, adaptive, and two-phase GROUP BY for queries in ClickBench.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636754240.png" alt="1705636754" class="img_ev3q"></p>
<p>The result shows that adaptive GROUP BY can select an appropriate execution strategy almost in all scenarios. With adaptive GROUP BY, one plan applies to different data models. This is the goal we aim to achieve. OceanBase Database V4.3 will support a global NDV estimate strategy to make adaptive decision-making more accurate.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adaptive-hybrid-hash-shuffling">Adaptive hybrid hash shuffling<a href="https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement#adaptive-hybrid-hash-shuffling" class="hash-link" aria-label="Direct link to Adaptive hybrid hash shuffling" title="Direct link to Adaptive hybrid hash shuffling">​</a></h2>
<p>Next, let me introduce some adaptive techniques we have developed based on data skew. The following figures show two common plans for a simple distributed hash join.</p>
<p>One is a broadcast plan, which broadcasts the left-side table to each thread of the right-side table. The threads will use data in the right-side table to probe data in the left-side table.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636765811.png" alt="1705636765" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636772964.png" alt="1705636773" class="img_ev3q"></p>
<p>The other is a hash repartitioning plan, which distributes the data in the left-side and right-side tables to different threads based on the hash value. Each thread performs a join separately.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636780959.png" alt="1705636781" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636790880.png" alt="1705636790" class="img_ev3q"></p>
<p>The two plans have their own advantages and disadvantages. Generally, the broadcast plan applies to a scenario where a large table is joined with a small table. In this scenario, the small table is broadcast to limit the broadcast cost. In a scenario where two large tables are joined and repartitioning based on the join key is not supported, hash-hash is almost the only choice. However, the hash-hash strategy also has bad cases in data skew scenarios. For example, the following figure shows a high-frequency value. Since data is distributed to different threads based on the hash value for hash repartitioning, all instances of the high-frequency value are distributed to the same hash join, leading to a long-tail situation of the hash join.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636798440.png" alt="1705636798" class="img_ev3q"></p>
<p>The following figure shows a similar business scenario as observed by the SQL plan monitor tool.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636805216.png" alt="1705636805" class="img_ev3q"></p>
<p>To resolve this issue, OceanBase Database V4.x implements the hybrid hash shuffling algorithm. The following figure shows an execution plan that uses this algorithm. It looks like a plan that uses the hash repartitioning algorithm. The only difference is that a HYBRID keyword is contained in the EXCHANGE operator.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636812110.png" alt="1705636812" class="img_ev3q"></p>
<p>The hybrid hash shuffling algorithm will obtain related information about high-frequency values from the optimizer. For regular values, normal hash shuffling is used for hash repartitioning. For a high-frequency value, if it exists on the left side (hash join build side), the value will be broadcast to all threads to build the hash table. If it exists on the right side (hash join probe side), the instances of this value are randomly distributed to ensure the evenness. This algorithm can effectively resolve performance issues caused by hash repartitioning in data skew scenarios.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636821493.png" alt="1705636821" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adaptive-null-aware-hash-join">Adaptive NULL-aware hash join<a href="https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement#adaptive-null-aware-hash-join" class="hash-link" aria-label="Direct link to Adaptive NULL-aware hash join" title="Direct link to Adaptive NULL-aware hash join">​</a></h2>
<p>Finally, let me briefly introduce some optimization techniques we have applied to handle NULL values. For a join, the return result of a NULL value is always NULL in an equal condition. However, the semantics of NULL vary based on the join method.</p>
<p>In inner joins and semi-joins, values whose join key is NULL can be ignored.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636829687.png" alt="1705636829" class="img_ev3q"></p>
<p>In left outer joins, NULL values on the left side also need to be output.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636835954.png" alt="1705636836" class="img_ev3q"></p>
<p>If NULL values are processed as normal values, correct results can be obtained. However, data skew of NULL values or a useless network shuffle of massive NULL values may occur. The following special measures are taken inside hash joins and during a hash join shuffle:</p>
<ul>
<li>Skip NULL values in join keys. This measure usually applies to inner joins and semi-joins, in which values whose join key is NULL will not be output.</li>
<li>Randomly distribute NULL values to avoid data skew. Generally, for an outer join, specifically, the left side of a left outer join, right side of a right outer join, or both sides of a full outer join, if the NULL values of one side or both sides need to be output, these NULL values will not successfully match any value. In this case, random hash values are assigned to these NULL values and the NULL values are randomly distributed to different threads. A NULL value that does not need to be output will still be skipped.</li>
<li>Use the NULL-aware anti-join algorithm, which will not be described in this post, to process anti-joins that contain NOT IN. The semantics of such anti-joins are special.</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705636844393.png" alt="1705636844" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="preview-of-the-next-post">Preview of the next post<a href="https://powerfooi.github.io/docs-playground/blog/challenges-facing-AP-performance-improvement#preview-of-the-next-post" class="hash-link" aria-label="Direct link to Preview of the next post" title="Direct link to Preview of the next post">​</a></h2>
<p>This post introduces some representative adaptive techniques in the executor of OceanBase Database, based on the assumption that you have a basic understanding of the two-phase pushdown technique for HASH GROUP BY. If you are unfamiliar with the multi-phase pushdown technique of the executor, please look forward to the next post <a href="https://open.oceanbase.com/blog/5382203648" target="_blank" rel="noopener noreferrer">Distributed Pushdown Techniques of OceanBase Database</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Distributed Push down]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/distributed-push-down</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/distributed-push-down</guid>
            <pubDate>Mon, 03 Jun 2024 11:40:33 GMT</pubDate>
            <description><![CDATA[I have been studying the book "An Interpretation of OceanBase Database Source Code" and noticed that it contains very little content about the SQL executor. Therefore, I want to write some blog posts about the SQL executor as a supplement to this book. In my last post Adaptive Techniques in the OceanBase Database Execution Engine, I introduced some representative adaptive techniques in the executor, based on the assumption that you have a basic understanding of the two-phase pushdown technique for HASH GROUP BY. If you are unfamiliar with the multi-phase pushdown technique of the executor, you are welcome to read this post to learn about common adaptive distributed pushdown techniques in OceanBase Database.]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>I have been studying the book "An Interpretation of OceanBase Database Source Code" and noticed that it contains very little content about the SQL executor. Therefore, I want to write some blog posts about the SQL executor as a supplement to this book. In my last post <a href="https://open.oceanbase.com/blog/5250647552" target="_blank" rel="noopener noreferrer">Adaptive Techniques in the OceanBase Database Execution Engine</a>, I introduced some representative adaptive techniques in the executor, based on the assumption that you have a basic understanding of the two-phase pushdown technique for HASH GROUP BY. If you are unfamiliar with the multi-phase pushdown technique of the executor, you are welcome to read this post to learn about common adaptive distributed pushdown techniques in OceanBase Database.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-distributed-pushdown">What is distributed pushdown?<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#what-is-distributed-pushdown" class="hash-link" aria-label="Direct link to What is distributed pushdown?" title="Direct link to What is distributed pushdown?">​</a></h2>
<p>To better utilize parallel execution capabilities and reduce CPU and network overheads during distributed execution, the optimizer often pushes down some operators to lower-layer compute nodes when it generates execution plans. This is to make full use of the computing resources of the cluster to improve the execution efficiency. Next, I'm going to introduce the most common distributed pushdown techniques in OceanBase Database.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="limit-pushdown">LIMIT pushdown<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#limit-pushdown" class="hash-link" aria-label="Direct link to LIMIT pushdown" title="Direct link to LIMIT pushdown">​</a></h2>
<p>Let me first talk about the pushdown of the LIMIT operator. The following are two SQL statements for creating a table named <code>order</code> and reading 100 rows from the <code>orders</code> table, respectively.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">orders</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_orderkey</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">bigint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_custkey</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">bigint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_orderdate</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_orderkey</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_orderdate</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_custkey</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_orderkey</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">o_orderkey</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">LOCAL</span><span class="token plain">  BLOCK_SIZE </span><span class="token number" style="color:#36acaa">16384</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> range </span><span class="token keyword" style="color:#00009f">columns</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    subpartition </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">hash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> subpartitions </span><span class="token number" style="color:#36acaa">64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord1 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1992-01-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord2 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1992-02-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord3 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1992-03-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord77 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1998-05-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord78 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1998-06-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord79 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1998-07-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord80 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'1998-08-01'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> ord81 </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> less than </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MAXVALUE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> orders </span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The following plan shows a very common scenario of distributed pushdown.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">explain</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> orders </span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Query </span><span class="token keyword" style="color:#00009f">Plan</span><span class="token plain">                                                                                                                                                      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">TIME</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">us</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------                                                                                               |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token keyword" style="color:#00009f">LIMIT</span><span class="token plain">                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2794</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">└─PX COORDINATOR             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2794</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  └─EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR       </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2793</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    └─</span><span class="token keyword" style="color:#00009f">LIMIT</span><span class="token plain">                  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      └─PX </span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> ITERATOR</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        └─</span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">FULL</span><span class="token plain"> SCAN    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">orders  </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Outputs </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> filters:                                                                                                                                              </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-------------------------------------                                                                                                                           |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">limit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">offset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                                                   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       dop</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">                                                                                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">limit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">offset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                                                   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">force</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> granule                                                                                                                                   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p0sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p1sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p2sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p3sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p4sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p5sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        p6sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p7sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                                                  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">limit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">offset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> is_index_back</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> is_global_index</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                                                                                      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       range_key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MIN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MIN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MIN </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> MAX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MAX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MAX</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">always </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You can see that Operators 0 and 3 in the plan are both LIMIT. Operator 0 is pushed down to generate Operator 3 to reduce the number of rows scanned by Operator 5, a TABLE SCAN operator, from each partition of the <code>orders</code> table. Each thread of the TABLE SCAN operator scans at most 100 rows. This reduces the overhead in data scan by the TABLE SCAN operator and the network overhead in sending data to Operator 1 for aggregation. At present in OceanBase Database, the EXCHANGE operator will send a packet after it receives 64 KB data from a lower-layer operator. If the LIMIT operator is not pushed down, massive data may be scanned, leading to a high network overhead.</p>
<p>In actual business scenarios, a LIMIT operator is usually used in combination with the ORDER BY keyword. If the ORDER BY keyword is used in the preceding example, a TOP-N SORT operator with much higher performance than a SORT operator will be generated in the plan.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">explain</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> orders </span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> o_orderdate </span><span class="token keyword" style="color:#00009f">limit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Query </span><span class="token keyword" style="color:#00009f">Plan</span><span class="token plain">                                                                                                                                                      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">TIME</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">us</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------                                                                                               |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token keyword" style="color:#00009f">LIMIT</span><span class="token plain">                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2794</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">└─PX COORDINATOR </span><span class="token keyword" style="color:#00009f">MERGE</span><span class="token plain"> SORT  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2794</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  └─EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR       </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2793</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    └─</span><span class="token keyword" style="color:#00009f">TOP</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">N SORT             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      └─PX </span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> ITERATOR</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        └─</span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">FULL</span><span class="token plain"> SCAN    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">orders  </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Outputs </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> filters:                                                                                                                                              </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-------------------------------------                                                                                                                           |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">limit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">offset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                                                   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       sort_keys</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                                      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       dop</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">                                                                                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       sort_keys</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ASC</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> topn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">force</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> granule                                                                                                                                   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p0sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p1sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p2sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p3sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p4sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p5sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        p6sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p7sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                                                  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       is_index_back</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> is_global_index</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       range_key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MIN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MIN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MIN </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> MAX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MAX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MAX</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">always </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If the LIMIT operator is not pushed down, Operator 3 will be a SORT operator. In this case, each thread needs to sort and send all the scanned data to the upper-layer data flow object (DFO). A DFO is a sub-plan. Adjacent DFOs are separated with an EXCHANGE operator. For more information, see <a href="https://www.oceanbase.com/docs/common-oceanbase-database-1000000000034037" target="_blank" rel="noopener noreferrer">https://www.oceanbase.com/docs/common-oceanbase-database-1000000000034037</a>.</p>
<p>The purpose of pushing down the LIMIT operator is to end execution in advance to reduce calculation and network overheads.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="aggregation-pushdown">AGGREGATION pushdown<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#aggregation-pushdown" class="hash-link" aria-label="Direct link to AGGREGATION pushdown" title="Direct link to AGGREGATION pushdown">​</a></h2>
<p>Let me take the following statement that contains GROUP BY as an example to describe distributed pushdown in aggregation.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> orders </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> o_orderdate</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This SQL statement queries the daily order count and sales amount. If you want to execute the statement in parallel, the most straightforward approach would be to distribute data in the table based on the hash values of the GROUP BY column (o_orderdate). This way, all rows with the same o_orderdate value are sent to the same thread. The threads can aggregate received data in parallel.</p>
<p>However, this plan requires to perform a shuffle on all data in the table, which may lead to a very high network overhead. Moreover, if data skew occurs in the table, for example, a large number of orders were placed on a specific day, the workload of the thread responsible for processing orders of this day will be much higher than that of other threads. This long-tail task may directly lead to a long execution time for the query.</p>
<p>To address these issues, the GROUP BY operator is pushed down to generate the following plan:</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">explain</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> orders </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> o_orderdate</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Query </span><span class="token keyword" style="color:#00009f">Plan</span><span class="token plain">                                                                                                                                                </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">TIME</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">us</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">---------------------------------------------------------------------                                                                                     |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">PX COORDINATOR                   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2796</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">└─EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10001</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2795</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  └─</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">                </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2795</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    └─EXCHANGE </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> DISTR          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2794</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      └─EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2794</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        └─</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2793</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">          └─PX </span><span class="token keyword" style="color:#00009f">PARTITION</span><span class="token plain"> ITERATOR</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">            └─</span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">FULL</span><span class="token plain"> SCAN    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">orders  </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2792</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">                                                                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Outputs </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> filters:                                                                                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">-------------------------------------                                                                                                                     |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">INTERNAL_FUNCTION</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_COUNT_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">              </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">INTERNAL_FUNCTION</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_COUNT_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">              </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       dop</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">                                                                                                                                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_COUNT_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_COUNT_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token punctuation" style="color:#393A34">(</span><span class="token comment" style="color:#999988;font-style:italic">#keys=1, [orders.o_orderdate]), dop=1                                                                                                              |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agg_func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">T_FUN_SUM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       </span><span class="token keyword" style="color:#00009f">force</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> granule                                                                                                                             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       access</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partitions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p0sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p1sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p2sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p3sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p4sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p5sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p6sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        p7sp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">63</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                                                                        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       is_index_back</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> is_global_index</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                                                                                                         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       range_key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_orderdate</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">o_custkey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MIN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MIN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MIN </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> MAX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MAX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">MAX</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">always </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token comment" style="color:#999988;font-style:italic">-----------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this plan, each thread will pre-aggregate the data it reads before distributing the data. The pre-aggregate job is done by Operator 5, a GROUP BY operator. Then, Operator 5 will send the aggregation results to its upper-layer operator. Operator 2, another GROUP BY operator, will aggregate the received data again. After Operator 5 pre-aggregates the data, the data amount will remarkably decrease. This can decrease the network overhead caused by data shuffle and reduce the impact of data skew on the execution time.</p>
<p>Then, let me demonstrate the execution process of the preceding SQL statement.</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o_totalprice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> orders </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> o_orderdate</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The original data comprises seven rows. The amount of each order is CNY 10. The orders were placed on June 1, June 2, and June 3.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705644329067.png" alt="1705644329" class="img_ev3q"></p>
<p>The following figure shows the execution process, where the DOP is set to 2.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705644337050.png" alt="1705644337" class="img_ev3q"></p>
<p>The first thread in the upper-left corner scans three rows, and the second thread in the lower-left corner scans four rows. Data with the same date, namely, data in the same group, is marked with the same color.</p>
<p>The first thread aggregates the three rows it scans, which are distributed in two groups. The dates of two rows are June 1. Therefore, for June 1, the order count is 2 and the sales amount is 20. The date of one row is June 3. Therefore, for June 3, the order count is 1 and the sales amount is 10. The four rows scanned by the second thread are also distributed in two groups. Two rows are generated after aggregation. The job of this part is completed by Operator 5 in the plan.</p>
<p>Then, the two threads distribute the data based on the hash values of the o_orderdate column. Data with the same date is sent to the same thread. The job of this part is completed by Operators 3 and 4 in the plan.</p>
<p>Each thread on the right side will aggregate the received data again. The two rows of June 3 scanned by the two threads on the left side, which are marked red, are sent to the thread in the lower-right corner. The two rows are aggregated again by the operator on the right side. After aggregation, the order count is 2 and the sales amount is 20. The two rows are finally aggregated into one row. The job of this part is completed by Operator 2 in the plan.</p>
<p>Then, all data is sent to the coordinator, which will summarize the data and send the final calculation results to the client.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="join-filter-pushdown">JOIN FILTER pushdown<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#join-filter-pushdown" class="hash-link" aria-label="Direct link to JOIN FILTER pushdown" title="Direct link to JOIN FILTER pushdown">​</a></h2>
<p>In a JOIN operator, the join filters of the left-side table will be pushed down to the right-side table to perform pre-filtering and partition pruning for data in the right-side table.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="pre-filtering">Pre-filtering<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#pre-filtering" class="hash-link" aria-label="Direct link to Pre-filtering" title="Direct link to Pre-filtering">​</a></h3>
<p>When a hash join is executed, the data in the left-side table is always read first to build a hash table. Then, the data in the right-side table is used to probe the hash table, and if successful, the data will be sent to the upper-layer operator. If a reshuffle is performed on the data in the right-side table of the hash join, the network overhead may be high, which is subject to the data amount of the right-side table. In this case, join filters can be used to reduce the network overhead caused by data shuffle.</p>
<p>Take the plan shown in the following figure as an example.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705644346491.png" alt="1705644346" class="img_ev3q"></p>
<p>In the plan, Operator 2, a HASH JOIN operator, reads data from the left-side table. During the read, it will use the t1.c1 join key to create a join filter, which is done by Operator 3, a JOIN FILTER CREATE operator. The most common form of join filter is Bloom filter. After the join filter is created, it is sent to the right-side DFO, which contains Operator 6 and other lower-layer operators.</p>
<p>Operator 10, a TABLE SCAN operator, has a filter sys_op_bloom_filter(t2.c1), which specifies to use values of t2.c1 in the right-side table to quickly probe the hash table based on the Bloom filter. If a value of t2.c1 does not match any value of t1.c1, the row where the t2.c1 value is located in the t2 table can be pre-filtered and does not need to be sent to the HASH JOIN operator.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="partition-pruning">Partition pruning<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#partition-pruning" class="hash-link" aria-label="Direct link to Partition pruning" title="Direct link to Partition pruning">​</a></h3>
<p>Join filters can be used not only for row filtering but also for partition pruning (or filtering). Assume that t1 is a partitioned table and the join key is also its partitioning key. A plan shown in the following figure can be generated.</p>
<p><img decoding="async" loading="lazy" src="https://obcommunityprod.oss-cn-shanghai.aliyuncs.com/prod/blog/2024-01/1705644359718.png" alt="1705644359" class="img_ev3q"></p>
<p>In this plan, Operator 3 is a PARTITION JOIN FILTER CREATE operator. It will detect the partitioning method of the right-side t1 table of the hash join. When it obtains a row in the left-side table from the lower-layer operator, it will use the c1 value to calculate the partition to which this row belongs in the right-side t1 table, and record the partition ID in the join filter. The join filter that contains the partition ID will be used on Operator 8 for partition pruning for the right-side table of the hash join. When the table scan operator scans each partition in the right-side table, it will verify whether the partition ID exists in the join filter. If no, it can skip the entire partition.</p>
<p>A join filter can be used for data pre-filtering and partition pruning, thereby reducing the overheads in data scan, network transmission, and hash table probe. At present, OceanBase Database supports only Bloom filters in versions earlier than V4.2. OceanBase Database supports two new types of join filters since V4.2: In filter and Range filter. The new join filters can help significantly improve the performance in some scenarios, especially when the left-side table contains a few distinct values or contains continuous values.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-distributed-pushdown-techniques">Other distributed pushdown techniques<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#other-distributed-pushdown-techniques" class="hash-link" aria-label="Direct link to Other distributed pushdown techniques" title="Direct link to Other distributed pushdown techniques">​</a></h2>
<p>Apart from the preceding common distributed pushdown techniques that are easy to understand, OceanBase Database also supports more adaptive distributed pushdown techniques, such as adaptive two-phase pushdown for window functions and three-phase pushdown for aggregate functions.</p>
<p>This post will not provide a detailed introduction to the more complex distributed pushdown techniques of OceanBase Database. Below are sample execution plans of the two distributed pushdown techniques mentioned earlier for those who are interested in conducting further research.</p>
<p>Adaptive two-phase pushdown for window functions:</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+parallel(3) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">over</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">partition</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> c1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> t1 </span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> c1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query </span><span class="token keyword" style="color:#00009f">Plan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---------------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">PX COORDINATOR </span><span class="token keyword" style="color:#00009f">MERGE</span><span class="token plain"> SORT            </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR                  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10001</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  MATERIAL                           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   WINDOW </span><span class="token keyword" style="color:#00009f">FUNCTION</span><span class="token plain"> CONSOLIDATOR      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    EXCHANGE </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">MERGE</span><span class="token plain"> SORT DISTR     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">     EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> HYBRID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      WINDOW </span><span class="token keyword" style="color:#00009f">FUNCTION</span><span class="token plain">                </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">       SORT                          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        PX BLOCK ITERATOR            </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">9</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">         </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> SCAN                  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">t1      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Three-phase pushdown for aggregate functions:</p>
<div class="language-SQL language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*+ parallel(2) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> c2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">distinct</span><span class="token plain"> c3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> t </span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> c1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query </span><span class="token keyword" style="color:#00009f">Plan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">ID</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">OPERATOR                               </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">NAME    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">ROWS</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">EST</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">TIME</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">us</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---------------------------------------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">PX COORDINATOR                         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">8</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">└─EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR                   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10002</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  └─</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">                      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    └─EXCHANGE </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> DISTR                </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      └─EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10001</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        └─</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">                </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">          └─EXCHANGE </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> DISTR          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">4</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">7</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">            └─EXCHANGE </span><span class="token keyword" style="color:#00009f">OUT</span><span class="token plain"> DISTR </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">:EX10000</span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">3</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">              └─</span><span class="token keyword" style="color:#00009f">HASH</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain">          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">9</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                └─PX BLOCK ITERATOR    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">10</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                  └─</span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">FULL</span><span class="token plain"> SCAN    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">t       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">       </span><span class="token operator" style="color:#393A34">|</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">=</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="preview-of-the-next-post">Preview of the next post<a href="https://powerfooi.github.io/docs-playground/blog/distributed-push-down#preview-of-the-next-post" class="hash-link" aria-label="Direct link to Preview of the next post" title="Direct link to Preview of the next post">​</a></h2>
<p>This post introduces several typical distributed pushdown techniques in the executor of OceanBase Database, based on the assumption that you have a basic understanding of distributed execution of the database. If you are unfamiliar with parallel execution techniques of the executor, please look forward to the next post <a href="https://open.oceanbase.com/blog/5558373888" target="_blank" rel="noopener noreferrer">Parallel Execution Techniques of OceanBase Database</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[MDX Blog Post]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/mdx-blog-post</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/mdx-blog-post</guid>
            <pubDate>Sun, 01 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Use the power of React to create interactive blog posts.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button clicked!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><button>Click me!</button></div></div>]]></content:encoded>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Long Blog Post]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/long-blog-post</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/long-blog-post</guid>
            <pubDate>Wed, 29 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[This is the summary of a very long blog post,]]></description>
            <content:encoded><![CDATA[<p>This is the summary of a very long blog post,</p>
<p>Use a <code>&lt;!--</code> <code>truncate</code> <code>--&gt;</code> comment to limit blog post size in the list view.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[First Blog Post]]></title>
            <link>https://powerfooi.github.io/docs-playground/blog/first-blog-post</link>
            <guid>https://powerfooi.github.io/docs-playground/blog/first-blog-post</guid>
            <pubDate>Tue, 28 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet]]></description>
            <content:encoded><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>